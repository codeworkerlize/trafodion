-- Test: TEST017 (Executor)
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
--
-- Functionality: Volatile Tables part 2
-- Expected files: EXPECTED017
-- Table created:
-- Limitations:
-- To do:
-- Revision history:

set schema trafodion.t017_sch;

drop table t017t1 cascade;
drop table t017t2 cascade;
drop table t017t3 cascade;

drop schema t017_sch cascade;

control query default POS 'OFF';
#ifNT
create catalog t017_volatile_cat_NSK;
#ifNT

cleanup obsolete volatile tables;

log LOG017 clear;

set schema trafodion.t017_sch;
create schema trafodion.t017_sch;

-- these tests do not automatically make the first col to be NNND and
-- the pkey of the volatile table.
-- they also test for nullable primary keys for volatile tables.
control query default volatile_table_find_suitable_key 'ON';
control query default POS 'MULTI_NODE';

-- NULLABLE unique constraints (primary key, unique key constr)
drop volatile table t017t1;
create volatile table t017t1 (a int, primary key(a));
showddl t017t1, external;

drop volatile table t017t1;
create volatile table t017t1 (a int, primary key(a) droppable);
showddl t017t1, external;

drop volatile table t017t1;
create volatile table t017t1 (a int) store by (a);
showddl t017t1, external;

drop volatile table t017t1;
create volatile table t017t1 (a int, primary key(a))
;
showddl t017t1, external;

drop volatile table t017t1;
create volatile table t017t1 (a int) store by (a)
;
showddl t017t1, external;

drop volatile table t017t1;
create volatile table t017t1 (a int unique);
showddl t017t1, external;


-- store by a, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a int);
showddl t017t1, external;

-- store by b, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a char(10), b int);
showddl t017t1, external;

-- store by a, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a int not null);
showddl t017t1, external;

-- store by b, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a char(10) not null, b int not null);
showddl t017t1, external;

-- store by c, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a int, b char(10) not null, c int not null, d date, e int not null);
showddl t017t1, external;

-- store by b, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a date, b char(10), c date not null);
showddl t017t1, external;

-- store by b, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a date, b date not null);
showddl t017t1, external;

-- store by b, 4 partitions
drop volatile table t017t1;
create volatile table t017t1 (a real not null, b char(10));
showddl t017t1, external;

-- store by d, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a real not null, b varchar(10) not null, c char(10), d largeint);
showddl t017t1, external;

-- store by b, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a real not null, b interval second, c varchar(10));
showddl t017t1, external;

-- store by c, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a real not null, b interval second, c interval year, d varchar(10) not null);
showddl t017t1, external;

-- NO PARTITION, float keys not supported
drop volatile table t017t1;
create volatile table t017t1 (a real not null);
showddl t017t1, external;
drop volatile table t017t1;
create volatile table t017t1 (a real);
showddl t017t1, external;

-- store by a, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a varchar(10) not null);
showddl t017t1, external;
drop volatile table t017t1;
create volatile table t017t1 (a varchar(10));
showddl t017t1, external;

-- store by b, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a real not null, b varchar(10) not null);
showddl t017t1, external;

-- NON-NULLABLE columns to get preferenace over nullable columns

-- store by b, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a int, b int not null);
showddl t017t1, external;

-- store by a, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a int not null, b int);
showddl t017t1, external;

-- both nullable cols, choose the first one. store by a, 4 partns
drop volatile table t017t1;
create volatile table t017t1 (a int, b int);
showddl t017t1, external;

-- USER specified clauses will disable auto-selection of keys

-- store by b, 4 partitions.
drop volatile table t017t1;
create volatile table t017t1 (a int not null, b int, primary key(b));
showddl t017t1, external;

-- store by b, 4 partitions.
drop volatile table t017t1;
create volatile table t017t1 (a int not null, b int not null) store by (b);
showddl t017t1, external;

-- store by b, 4 partitions.
drop volatile table t017t1;
create volatile table t017t1 (a int not null, b int not null) 
;
describe t017t1, external;

-- rollback of volatile schema created within a transaction
set parserflags 131072;
drop implicit volatile schema cascade;
begin work;
create volatile table t (a int);
rollback work;
begin work;
create volatile table t (a int);
rollback work;

log;
drop table t017t1;
drop table t017t2;
drop table t017t3;
drop table t017sch.t017t1 cascade;
drop table t017sch.t017t2 cascade;
drop table t017sch.t017t3 cascade;
get tables in schema t017sch;
drop schema t017sch cascade;
drop schema t017_sch cascade;
