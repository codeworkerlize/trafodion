-- Test: TEST023 (Executor)
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
--
-- Functionality tested: Savepoints and 'upsert with no conflict check'
--
obey TEST023 (clean_up);

log LOG023 clear;
obey TEST023 (test);
-- test ddl in transaction
obey TEST023 (ddl_dml);
obey TEST023 (cm_tx_cm5_cm6);
obey TEST023 (cm_tx_roll5_roll6);
obey TEST023 (cm_tx_roll5_cm6);
obey TEST023 (cm_tx_cm5_roll6);
obey TEST023 (roll_tx_cm5_cm6);
obey TEST023 (roll_tx_roll5_roll6);
obey TEST023 (roll_tx_roll5_cm6);
obey TEST023 (roll_tx_cm5_roll6);
obey TEST023 (roll_tx_exception);
log;
obey TEST023 (clean_up);

exit;

-------------------------------------------------------------------------------
?section clean_up
-------------------------------------------------------------------------------
drop table t023t1 cascade;
drop table t023t2;
drop table t023t3;
drop table t023t4;
drop table t023t5 cascade;
drop table t023t6 cascade;
drop table t023lob;

-------------------------------------------------------------------------------
?section test
-------------------------------------------------------------------------------
create table t023t1 (a int not null primary key, b int not null);
create table t023t2 (a int not null primary key, b int not null);
create index t023t2i1 on t023t2(b);
create table t023t3 (a int not null primary key, b int not null)
  salt using 4 partitions;
create table t023t4 (c1 int not null primary key, c2 char(10), c3 int);

-- tests savepoint settings
cqd traf_savepoints 'ON';

showtransaction;
set transaction autocommit savepoint on;
showtransaction;
begin work;
showtransaction;
begin savepoint;
showtransaction;
commit savepoint;
showtransaction;
commit work;
showtransaction;
set transaction autocommit savepoint off;
showtransaction;


set transaction autocommit savepoint on;
begin work;
explain options 'f' insert into t023t1 values (1,1);
explain options 'f' insert into t023t1 values (1,1), (2,2);
explain options 'f' delete from t023t1;
explain options 'f' delete from t023t1 where a = 1;
explain options 'f' update t023t1 set b = b + 1 where a = 1;
explain options 'f' update t023t1 set b = 10;

prepare s from insert into t023t1 values (1,1), (2,2);
explain options 'f' s;
execute s;
execute s;

commit work;
select * from t023t1;

delete from t023t2;
begin work;
explain options 'f' insert into t023t2 values (10, 20);
insert into t023t2 values (1,1), (2,2);
select * from t023t2;
insert into t023t2 values (3,3), (3,2);
commit work;
select * from t023t2;

delete from t023t4;
insert into t023t4 values 
(1,'aaa',101), (2,'aaa', 102),(3,'CCC',103),(4,'CCC',103),(5,'CCC',105),
(6,'CCC',105), (7,'CCC',105),(8,'CCC',105),(9,'CCC',105);

select * from t023t4;
begin work;
explain options 'f' update t023t4 set c3=104 where c1=4;
update t023t4 set c3=104 where c1=4;
select * from t023t4;
explain options 'f' update t023t4 set c1=8 where c1=9;
update t023t4 set c1=8 where c1=9;
commit work;
select * from t023t4;

delete from t023t3;
begin work;
explain options 'f' insert into t023t3 values (1,1), (2,2);
insert into t023t3 values (1,1), (2,2);
select * from t023t3;
select * from t023t3;
commit work;
select * from t023t3;

cqd traf_savepoints 'ON';
delete from t023t3;
begin work;
control query shape esp_exchange(cut);
prepare s from insert into t023t3 values (1,1), (2,2);
explain options 'f' s;
execute s;
commit work;
cqd traf_savepoints 'ON';
control query shape cut;

-- first insert should succeed. Second insert should return error and do
-- savepoint rollback.
begin work;
insert into t023t3 values (10,10), (20,20);
execute s;
commit work;
select * from t023t3;

delete from t023t1;
begin work;
insert into t023t1 values (1,1), (2,2);
begin savepoint;
insert into t023t1 values (3,3), (4,4);
insert into t023t1 values (5,5), (6,6);
insert into t023t1 values (4,4), (3,3);
select * from t023t1;
rollback savepoint;
select * from t023t1;
commit work;
select * from t023t1;

-- savepoint not enabled
begin work;
explain options 'f' create table t023temp(a int);
commit work;

-- savepoint only enabled within a user transaction
explain options 'f' insert into t023t1 values (1,1), (2,2);
begin savepoint;
commit savepoint;
rollback savepoint;

cqd traf_savepoints 'OFF';
begin savepoint;

-- upsert with no conflict check
control query shape cut;
cqd attempt_esp_parallelism 'OFF';
delete from t023t1;
prepare s from upsert with no conflict check into t023t1 
   values (1,1), (2,2), (3,3);
explain options 'f' s;
execute s;
select * from t023t1;

prepare s from upsert with no conflict check into t023t1 values (4,4);
explain options 'f' s;
execute s;
select * from t023t1;

-- error cases for 'with no conflict check'

-- only upsert can be used 'with no conflict check'
insert with no conflict check into t023t1 values (1,1);
upsert using load with no conflict check into t023t1 values (1,1);

-- cannot be used with hive tables
prepare s from upsert with no conflict check into hive.hive.customer default values;

-- cannot run within user xn or with auto commit off
begin work;
prepare s from upsert with no conflict check into t023t1 values (1,1), (2,2);
commit work;
set transaction autocommit off;
prepare s from upsert with no conflict check into t023t1 values (1,1), (2,2);
set transaction autocommit on;

-- cannot be used if table has secondary indexes
create index t023t1i1 on t023t1 (b);
prepare s from upsert with no conflict check into t023t1 values (4,4);

-- cannot be used if table has LOB cols
cqd traf_blob_as_varchar 'OFF';
drop table if exists t023t1lob;
create table t023lob (a int, b blob);
prepare s from upsert with no conflict check into t023lob 
       values (1, stringtolob('a'));


?section ddl_dml
-------------------------------------------------------------------------------
create table if not exists t023t5(c1 varchar(40));
create unique index t_023t5_idx on t023t5(c1);
insert into t023t5 values ('aaaaa');

create table if not exists t023t6(c1 varchar(40));
create unique index t_023t6_idx on t023t6(c1);
insert into t023t6 values ('aaaaa');

prepare mc from
select cast (catalog_name as char(30) character set iso88591),
       cast (schema_name as char(30) character set iso88591),
       cast (object_name as char(30) character set iso88591)
from table(natablecacheentries('user','local')) 
where object_name <> '__SCHEMA__' order by 1,2,3;

delete all from table(natablecache('remove'));

?section reset_col_t5
-------------------------------------------------------------------------------
alter table t023t5 drop column c2;

?section reset_col_t6
-------------------------------------------------------------------------------
alter table t023t6 drop column c2;

?section commit_savepoint_T5
-------------------------------------------------------------------------------
cqd traf_savepoints 'ON';
begin savepoint;
select * from t023t5;
alter table t023t5 add if not exists column c2 int;
select * from t023t5;
commit savepoint;

?section rollback_savepoint_T5
-------------------------------------------------------------------------------
cqd traf_savepoints 'ON';
begin savepoint;
select * from t023t5;
alter table t023t5 add if not exists column c2 int;
select * from t023t5;
rollback savepoint;

?section commit_savepoint_T6
-------------------------------------------------------------------------------
cqd traf_savepoints 'ON';
begin savepoint;
select * from t023t6;
alter table t023t6 add if not exists column c2 int;
select * from t023t6;
commit savepoint;

?section rollback_savepoint_T6
-------------------------------------------------------------------------------
cqd traf_savepoints 'ON';
begin savepoint;
select * from t023t6;
alter table t023t6 add if not exists column c2 int;
select * from t023t6;
rollback savepoint;

?section cm_tx_cm5_cm6
-------------------------------------------------------------------------------
begin work;
obey TEST023 (commit_savepoint_T5);
obey TEST023 (commit_savepoint_T6);
-- t5, t6
execute mc;
-- c1, c2
select * from t023t5;
-- c1, c2
select * from t023t6;
commit work;
-- null
execute mc;
-- c1, c2
select * from t023t5;
-- c1, c2
select * from t023t6;
obey TEST023 (reset_col_t5);
obey TEST023 (reset_col_t6);

?section cm_tx_roll5_roll6
-------------------------------------------------------------------------------
begin work;
obey TEST023 (rollback_savepoint_T5);
obey TEST023 (rollback_savepoint_T6);
-- null
execute mc;
-- c1
select * from t023t5;
-- c1
select * from t023t6;
commit work;
-- T5, T6(created by to select)
execute mc;
select * from t023t5;
select * from t023t6;

?section cm_tx_roll5_cm6
-------------------------------------------------------------------------------
begin work;
obey TEST023 (rollback_savepoint_T5);
obey TEST023 (commit_savepoint_T6);
-- t6
execute mc;
-- c1
select * from t023t5;
-- c1, c2
select * from t023t6;
commit work;
-- t5(created by select, t6 is removed from cache)
execute mc;
-- c1
select * from t023t5;
-- c1, c2
select * from t023t6;
obey TEST023 (reset_col_t6);

?section cm_tx_cm5_roll6
-------------------------------------------------------------------------------
begin work;
obey TEST023 (commit_savepoint_T5);
obey TEST023 (rollback_savepoint_T6);
-- t5
execute mc;
-- c1, c2
select * from t023t5;
-- c1
select * from t023t6;
commit work;
-- t6(created by select, t5 is removed from cache)
execute mc;
-- c1, c2
select * from t023t5;
-- c1
select * from t023t6;
obey TEST023 (reset_col_t5);

?section roll_tx_cm5_cm6
-------------------------------------------------------------------------------
begin work;
obey TEST023 (commit_savepoint_T5);
obey TEST023 (commit_savepoint_T6);
-- t5, t6
execute mc;
-- c1, c2
select * from t023t5;
-- c1, c2
select * from t023t6;
rollback;
-- null
execute mc;
-- c1
select * from t023t5;
-- c1
select * from t023t6;

?section roll_tx_roll5_roll6
-------------------------------------------------------------------------------
begin work;
obey TEST023 (rollback_savepoint_T5);
obey TEST023 (rollback_savepoint_T6);
-- null
execute mc;
-- c1
select * from t023t5;
-- c1
select * from t023t6;
rollback;
-- t5, t6(created by select, not ddl command, so not clean)
execute mc;
-- c1
select * from t023t5;
-- c1
select * from t023t6;

?section roll_tx_roll5_cm6
-------------------------------------------------------------------------------
begin work;
obey TEST023 (rollback_savepoint_T5);
obey TEST023 (commit_savepoint_T6);
-- t6
execute mc;
-- c1
select * from t023t5;
-- c1, c2
select * from t023t6;
rollback;
-- t5(created by select, not ddl command, so not clean)
execute mc;
-- c1
select * from t023t5;
-- c1
select * from t023t6;

?section roll_tx_cm5_roll6
-------------------------------------------------------------------------------
begin work;
obey TEST023 (commit_savepoint_T5);
obey TEST023 (rollback_savepoint_T6);
-- t5
execute mc;
-- c1, c2
select * from t023t5;
-- c1
select * from t023t6;
rollback;
-- t6(created by select, not ddl command, so not clean)
execute mc;
-- c1
select * from t023t5;
-- c1
select * from t023t6;

?section roll_tx_exception
-------------------------------------------------------------------------------
cqd traf_savepoints 'OFF';
begin work;
select * from t023t5;
alter table t023t5 add if not exists column c2 int;
insert into t023t5 values ('aaaaa', 2);
-- not include t5
execute mc;
select * from t023t5;
