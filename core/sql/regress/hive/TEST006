-- -*- mode: sql; coding: utf-8 -*-
-- Tests for SQL on Hadoop PoC
-- Test Sequence Files and subdirectory support.
-- Added June 2013
--
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@

--- setup Hive tables

sh regrhive.ksh -v -f $REGRTSTDIR/TEST006_a.hive.sql;
sh regrhadoop.ksh fs -mkdir /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar/business_system_cd=AA2/bucket_dt=2017-01-01/test1;
sh regrhadoop.ksh fs -mv /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar/business_system_cd=AA2/bucket_dt=2017-01-01/000000_0 /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar/business_system_cd=AA2/bucket_dt=2017-01-01/test1/ ;

sh regrhadoop.ksh fs -mkdir /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar_orc/business_system_cd=AA2/bucket_dt=2017-01-01/test1;
sh regrhadoop.ksh fs -mv /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar_orc/business_system_cd=AA2/bucket_dt=2017-01-01/000000_0 /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar_orc/business_system_cd=AA2/bucket_dt=2017-01-01/test1/ ;

set schema hive.hive;
drop table if exists skip1 ;
drop table if exists skip2 ;
drop table if exists store_sales_skip;
create table skip1 (name string, id int) tblproperties ("skip.header.line.count"="1");
create table skip2 (name string) partitioned by (id int) tblproperties ("skip.header.line.count"="5");
CREATE TABLE `store_sales_skip`(
  `ss_sold_date_sk` int, 
  `ss_sold_time_sk` int, 
  `ss_item_sk` int, 
  `ss_customer_sk` int, 
  `ss_cdemo_sk` int, 
  `ss_hdemo_sk` int, 
  `ss_addr_sk` int, 
  `ss_store_sk` int, 
  `ss_promo_sk` int, 
  `ss_ticket_number` int, 
  `ss_quantity` int, 
  `ss_wholesale_cost` float, 
  `ss_list_price` float, 
  `ss_sales_price` float, 
  `ss_ext_discount_amt` float, 
  `ss_ext_sales_price` float, 
  `ss_ext_wholesale_cost` float, 
  `ss_ext_list_price` float, 
  `ss_ext_tax` float, 
  `ss_coupon_amt` float, 
  `ss_net_paid` float, 
  `ss_net_paid_inc_tax` float, 
  `ss_net_profit` float)
  location '/user/trafodion/hive/exttables/store_sales_skip'
  tblproperties ("skip.header.line.count"="1000000");

sh regrhadoop.ksh fs -cp /user/trafodion/hive/tpcds/store_sales/store_sales.dat /user/trafodion/hive/exttables/store_sales_skip ;

log LOG006 clear;

set schema hive.hive;
set terminal_charset utf8;

cqd HIVE_MAX_STRING_LENGTH_IN_BYTES '25' ;
cqd HIST_ROWCOUNT_REQUIRING_STATS '50000';
cqd mode_seahive 'ON';

-- Select from the sequence file version of the promotion table
log LOG006_seq_promotion.dat clear;
select * from hive.promotion_seq where p_promo_sk < 100 order by P_PROMO_SK;
log;

-- Jenkins might be choosing a parallel plan for compressed sequence file
-- Currently Trafodion doesn't support spliting a compressed sequence file 
cqd attempt_esp_parallelism 'off' ;

-- Select from the compressed version of the promotion table
log LOG006_comp_promotion.dat clear;
select * from hive.promotion_comp where p_promo_sk < 100 order by P_PROMO_SK;
log;

cqd attempt_esp_parallelism reset ;

-- Select from the text version of the promotion table
log LOG006_orig_promotion.dat clear;
select * from hive.promotion where p_promo_sk < 100 order by P_PROMO_SK;
log;

log LOG006;
-- Verify the sequence file data against the text version.
log;
sh  diff  LOG006_ORIG_PROMOTION.DAT LOG006_SEQ_PROMOTION.DAT 2>&1  >> LOG006;

log LOG006;
-- Verify the compressed data against the text version.
log;
sh  diff  LOG006_ORIG_PROMOTION.DAT LOG006_COMP_PROMOTION.DAT 2>&1  >> LOG006;

log LOG006;

-- Insert more data into the sequence file, this time using SQ.
insert into hive.promotion_seq 
  select * from promotion
  where p_promo_sk between 100 and 199;

-- Check the data
select * from hive.promotion_seq order by P_PROMO_SK;

?section subdir_tests

cqd hive_max_string_length_in_bytes '10' ;
cqd auto_query_retry_warnings 'on' ;
select business_system_cd, bucket_dt from perf_transactions_archive_bus_cd_vchar ;
cqd hive_supports_subdirectories 'on' ;
select business_system_cd, bucket_dt from perf_transactions_archive_bus_cd_vchar ;
cqd hive_supports_subdirectories 'on' ;
cqd parquet_batch_read_filestats '0' ;
select business_system_cd, bucket_dt from perf_transactions_archive_bus_cd_vchar ;
sh regrhadoop.ksh fs -mkdir /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar/business_system_cd=AA2/bucket_dt=2017-01-01/test1/test2;
sh regrhadoop.ksh fs -cp /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar/business_system_cd=AA2/bucket_dt=2017-01-01/test1/000000_0 /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar/business_system_cd=AA2/bucket_dt=2017-01-01/test1/test2 ;
select business_system_cd, bucket_dt from perf_transactions_archive_bus_cd_vchar ;

cqd hive_supports_subdirectories reset ;
select business_system_cd, bucket_dt from perf_transactions_archive_bus_cd_vchar_orc ;
cqd hive_supports_subdirectories 'on' ;
select business_system_cd, bucket_dt from perf_transactions_archive_bus_cd_vchar_orc ;
sh regrhadoop.ksh fs -mkdir /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar_orc/business_system_cd=AA2/bucket_dt=2017-01-01/test1/test2;
sh regrhadoop.ksh fs -cp /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar_orc/business_system_cd=AA2/bucket_dt=2017-01-01/test1/000000_0 /user/trafodion/hive/exttables/perf_transactions_archive_bus_cd_vchar_orc/business_system_cd=AA2/bucket_dt=2017-01-01/test1/test2 ;
select business_system_cd, bucket_dt from perf_transactions_archive_bus_cd_vchar ;

?section skipheader_tests
insert into skip1 values ('file1_row1',1);
insert into skip1 values ('file2_row1',2),('file2_row2',3),('file2_row3',4),('file2_row4',5);
insert into skip2 values ('file1_row1',1);
insert into skip2 values ('file2_row1',2),('file2_row2',2),('file2_row3',2),('file2_row4',2);
insert into skip2 values ('file3_row1',2),('file3_row2',2),('file3_row3',2),('file3_row4',2),('file3_row5',2),('file3_row6',2),('file3_row7',2),('file3_row8',2);

select * from skip1 order by name ;
select * from skip2 order by name ;

cqd attempt_esp_parallelism 'off' ;
select count(*) from store_sales_skip ;
cqd hive_locality_balance_level '-1' ;
select count(*) from store_sales_skip ;
cqd attempt_esp_parallelism reset ;
cqd hive_locality_balance_level reset ;

exit;

