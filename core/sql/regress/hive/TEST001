-- Tests for SQL on Hadoop PoC
-- Added April 2013
--
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@

obey TEST001(clean_up);
log LOG001 clear;
obey TEST001(setup);
obey TEST001(tests);
log;
obey TEST001(clean_up);
exit;

?section setup
--------------------------------------------------------------------------

set schema hive.hive;
cqd HIVE_MAX_STRING_LENGTH_IN_BYTES '20' ;
cqd mode_seahive 'ON';

?section clean_up
--------------------------------------------------------------------------

drop view trafodion.hivesch.view_customer$$EXT$$;
unregister hive table if registered hive.hive.customer$$EXT$$;

?section tests
--------------------------------------------------------------------------

select count(*) from customer$$EXT$$ ;
select count(*) from customer_address$$EXT$$ ;
select count(*) from date_dim$$EXT$$ ;
select count(*) from household_demographics$$EXT$$ ;
select count(*) from item$$EXT$$ ;
select count(*) from promotion$$EXT$$ ;
select count(*) from store$$EXT$$ ;
select count(*) from time_dim$$EXT$$ ;

select count(*) from store_sales$$EXT$$ ;
select count(*) from customer_demographics$$EXT$$ ;

select c_customer_sk from customer$$EXT$$ where c_customer_sk < 100; 

select ca_gmt_offset from customer_address$$EXT$$ where ca_gmt_offset < -8 
order by ca_gmt_offset;

select [first 100] hd_buy_potential from household_demographics$$EXT$$ order by 1;

select * from promotion$$EXT$$ ;

select t_time from time_dim$$EXT$$ where t_time > 100 and t_time < 200 ; 

select * from store$$EXT$$ ; 

select d_date from date_dim$$EXT$$ where d_date > cast('2099-01-01' as date);

select [first 10] i_item_desc from item$$EXT$$ order by 1 desc;

select * from promotion$$EXT$$ ; 

select [first 100] cd_dep_employed_count from customer_demographics$$EXT$$ order by 1;

select [first 100] ss_quantity from store_sales$$EXT$$ order by 1;

select count(C_CUSTOMER_SK) from hive.customer$$EXT$$;

create schema if not exists trafodion.hivesch;
cqd hive_views 'ON';
create or replace view trafodion.hivesch.view_customer$$EXT$$ as
  select * from hive.hive.customer$$EXT$$;
invoke trafodion.hivesch.view_customer$$EXT$$;

