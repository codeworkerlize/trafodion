-- @@@ START COPYRIGHT @@@ 
--
-- Licensed to the Apache Software Foundation (ASF) under one 
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
-- KIND, either express or implied.  See the License for the 
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@ 

-- Tests MEMTABLE

drop schema testmemtable cascade;

log LOG044 clear;

create schema testmemtable;
set schema testmemtable;

cqd TRAF_ENABLE_DATA_LOAD_IN_SHARED_CACHE 'off';
create table tb10( c1 int unique) attributes read_only;
create table tb10( c1 int unique);
alter table tb10 attribute read_only;

cqd TRAF_ENABLE_DATA_LOAD_IN_SHARED_CACHE 'on';
LOAD TRAFODION DATA INTO SHARED CACHE;

-- test create table 
create table tb11( c1 int unique) attributes read_only;
create table tb12( c1 int check(c1 <>0) ) attributes read_only;
create table tb13( c1 int not null) attributes read_only;
create table tb14( c1 int primary key) attributes read_only;
create table tb15( c1 int references tb14(c1)) attributes read_only;
create table tb16( c1 int references tb14(c1));
create table tb17( c1 int ) attributes hbase format read_only;
create table tb18( c1 int primary key, c2 int) salt using 4 partitions on (c1) ATTRIBUTES read_only;

create table salt_tab(c1 int primary key,c2 int,c3 int) salt using 3 partitions;
alter table salt_tab attribute read_only;

create table hb_f_tab (c1 int primary key,c2 int,c3 int) attribute hbase format;
alter table hb_f_tab attribute read_only;

-- testDML

create table tb_read_only (c1 int, c2 int, c3 int);
create index ix1 on tb_read_only(c1);
insert into tb_read_only select element,element,element from udf(series(1,10));
alter table tb_read_only ATTRIBUTES READ_ONLY;
showddl tb_read_only;

-- test NOT ALLOWED SQL
drop index ix1;
cleanup index ix1;
create index ix2 on tb_read_only(c2);
populate index  ix1 on tb_read_only;
truncate tb_read_only;
purgedata tb_read_only;
alter table tb_read_only add column c4 int;
alter table tb_read_only drop c3;
alter table tb_read_only alter column c3 largeint;
alter table tb_read_only add constraint conUnique unique (c3);
alter table tb_read_only rename to tb_read_only1;
alter table tb_read_only ATTRIBUTES stored desc;
alter table tb_read_only ATTRIBUTES incremental backup;
alter table tb_read_only enable index ix2;
alter table tb_read_only disable index ix2;

insert into tb_read_only VALUES(1,2,3);
delete from tb_read_only;
update tb_read_only set c1 = 1;

-- test allowd sql
ALTER TRAFODION DATA SHARED CACHE FOR TABLE tb_read_only disable;
set parserflags 1;
select * from tb_read_only limit 1;
select * from table(index_table ix1) limit 1;
ALTER TRAFODION DATA SHARED CACHE FOR TABLE tb_read_only enable;
set statistics on;
select * from tb_read_only limit 1;
select * from table(index_table ix1) limit 1;
set statistics off;
ALTER TRAFODION DATA SHARED CACHE FOR TABLE tb_read_only delete;
select * from tb_read_only limit 1;
select * from table(index_table ix1) limit 1;
ALTER TRAFODION DATA SHARED CACHE FOR TABLE tb_read_only delete;
ALTER TRAFODION DATA SHARED CACHE FOR TABLE tb_read_only insert;
select * from tb_read_only limit 1;
select * from table(index_table ix1) limit 1;
ALTER TRAFODION DATA SHARED CACHE FOR TABLE tb_read_only update;
select * from tb_read_only limit 1;
select * from table(index_table ix1) limit 1;

select * from tb_read_only where c1 > 10;
select * from tb_read_only where c1 < 0;
select * from tb_read_only where c1 = 10;

select /*+MEMORY_TABLE_SCAN('OFF')*/ * from tb_read_only where c1 > 10;
select /*+MEMORY_TABLE_SCAN('OFF')*/ * from tb_read_only where c1 < 0;
select /*+MEMORY_TABLE_SCAN('OFF')*/ * from tb_read_only where c1 = 10;

drop table tb_read_only;
create table tb_read_only (c1 int, c2 int, c3 int);
create index ix1 on tb_read_only(c1);
select * from tb_read_only limit 1;
select * from table(index_table ix1) limit 1;
insert into tb_read_only select element,element,element from udf(series(1,10));
alter table tb_read_only ATTRIBUTES READ_ONLY;

cleanup table tb_read_only;
create table tb_read_only (c1 int, c2 int, c3 int);
create index ix1 on tb_read_only(c1);
select * from tb_read_only limit 1;
select * from table(index_table ix1) limit 1;
insert into tb_read_only select element,element,element from udf(series(1,10));
alter table tb_read_only ATTRIBUTES READ_ONLY;

create view v1 as select * from tb_read_only;
select * from v1;
insert into v1 VALUES(1,2,3);
delete from v1;
update v1 set c1 = 1;

--M24469
create table m24469(c1 int, c2 int, c3 int);
create index idxm24469_1 on m24469(c1) no populate;
create index idxm24469_2 on m24469(c2);
alter table m24469 attribute read_only;
drop index idxm24469_1;
drop index idxm24469_2;

drop schema testmemtable cascade; 


log;
