-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@

--
-- Test transaction compatibility
--
-- Run the test cases in three conditions:
--
--   1. T2 connection with sp_default_no_transaction_required on
--
--   2. T4 connection with sp_default_no_transaction_required off
--
--   3. T2 connection using the procedures already created, update the
--   transactoin_attribute to 'NO' manually
--

obey TEST311(clean);
obey TEST311(setup);

log LOG311 clear;

obey TEST311(test);

log;

obey TEST311(clean);
exit;

?section setup

alter user db__root set external name trafodion;
create schema t311sch;

-- Creating package need this because the procedures in packages are
-- created within UDR SERVER, which does not inherit the CQD settings
-- in the session, but the CQD written to DEFAULTS can take effect
-- without restart servers.
insert into "_MD_".defaults
  values ('SP_DEFAULT_NO_TRANSACTION_REQUIRED', 'ON', 'udr/TEST311', 0);

?section test

set schema t311sch;

create table t1 (a int);
select * from t1;
create table t8(c1 int unique);

obey TEST311(test_trans_t2);

delete from t1;
delete from t8;
obey TEST311(test_trans_t4);

set parserflags 131072;
update "_MD_".routines set transaction_attributes='NO'
      where udr_type='P'
      and udr_uid in (select object_uid from "_MD_".objects where schema_name='T311SCH'
      and object_name in ('P1', 'P2', 'P5', 'P6', 'P7', 'P8'));
reset parserflags 131072;
EXECUTE //
SET "hplsql.conn.default" = 'default';
//;
delete from t1;
delete from t8;
obey TEST311(trans_call);

?section test_trans_t2

cqd sp_default_no_transaction_required 'on';

EXECUTE //
SET "hplsql.transaction.compatible" = true;
SET "hplsql.use.only.one.connection" = true;
//;

obey TEST311(trans_create);
obey TEST311(trans_call);

?section test_trans_t4

cqd sp_default_no_transaction_required 'off';

EXECUTE //
SET "hplsql.conn.trafodion" = 'org.trafodion.jdbc.t4.T4Driver;jdbc:t4jdbc:/' || '/127.0.0.1:23400/;trafodion;traf123';
SET "hplsql.conn.default" = 'trafodion';
SET "hplsql.transaction.compatible" = true;
SET "hplsql.use.only.one.connection" = true;
//;

obey TEST311(trans_create);
obey TEST311(trans_call);

?section trans_create

create or replace procedure p1() as //
begin
  insert into t1 values (1);
  commit;
  insert into t1 values (2);
  rollback;
  begin work;
  insert into t1 values (3);
  commit;
end//;

create or replace procedure p2(out r int, out errcode varchar(10), out errmsg varchar(200)) as //
declare
  i int;
begin
  insert into t1 values (21);
  declare cursor c1 for select a from t1;
  open c1;
  fetch c1 into i;
  set r := 0;
  while (sqlcode = 0)
  do
    set r := r + i;
    fetch c1 into i;
  end while;
  commit;
  insert into t1 values (22);
  select * from not_exist_table;
exception when others then
  begin
    get diagnostics exception 1 text = MESSAGE_TEXT;
    set errcode := substr(text, instr(text, 'ERROR[') + 6, 4);
    set errmsg := substr(text, instr(text, 'ERROR[') + 12, 200);
    rollback;
    insert into t1 values (23);
  end;
end//;

create or replace procedure p3() transaction required as //
begin
  insert into t1 values (31);
end//;

create or replace procedure p4(out r int) transaction required as //
begin
  select count(*) into r from t1;
end//;

create or replace procedure p5(out r int) as //
begin
  select count(*) into r from t1;
end//;

create or replace procedure p6() as//
begin
  prepare x from 'insert into t1 values(61)';
  exec x;
end//;

create or replace procedure p7() as//
begin
  prepare x from 'insert into t1 values(70)';
  exec x;
  close prepare x;
end//;

create or replace procedure p8() as//
begin
  insert into t8 values(1);
  insert into t8 values(1); /* error */
exception
  when others then
    rollback;
    insert into t8 values(2);
end//;

create or replace package body pkg as //
  procedure p9 is
  begin
    insert into t1 values (101);
    commit;
    insert into t1 values (102);
    rollback;
    insert into t1 values (103);
  end;
end//;

?section trans_call

call p1();
select * from t1;

call p2(?, ?, ?);
select * from t1;

call p3();
select * from t1;

call p4(?);

call p5(?);

call p6();
select * from t1;

call p7();
select * from t1;

call p8();
select * from t8;

call pkg.p9();
select * from t1;

?section clean

drop schema if exists t311sch cascade;
delete from "_MD_".defaults
  where attribute='SP_DEFAULT_NO_TRANSACTION_REQUIRED';
