>>
>>set schema hive.hive;

--- SQL operation complete.
>>set terminal_charset utf8;
>>
>>cqd AUTO_QUERY_RETRY_WARNINGS 'ON';

--- SQL operation complete.
>>cqd HIVE_MAX_STRING_LENGTH_IN_BYTES '32' ;

--- SQL operation complete.
>>cqd hist_missing_stats_warning_level '0';

--- SQL operation complete.
>>cqd HIST_ROWCOUNT_REQUIRING_STATS '50000';

--- SQL operation complete.
>>------------------------------------------------------------
>>-- Testing query plan invalidation in the compiler, but
>>-- not the executor. Perform DML/DDL operations on a
>>-- table and try re-executing the old plan as well as
>>-- getting a query cache hit and updating the changed
>>-- Hive and HDFS metadata
>>------------------------------------------------------------
>>
>>prepare s1 from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_temp_avro
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

--- 0 row(s) selected.
>>-- expect 0 rows
>>
>>prepare s1part from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_p_avro
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1part;

--- 0 row(s) selected.
>>-- expect 0 rows
>>
>>insert into hive.hive.hivenonp_avro
+>values -- partition 1,one
+>       (1,1,1,'one', timestamp '2001-01-01 01:23:45.678901', timestamp '2001-01-01 00:00:00'),
+>       (11,11,1,'one', timestamp '2001-01-01 01:23:45.678901', timestamp '2001-01-01 00:00:00'),
+>       -- partition 2,two
+>       (2,2,2,'two', timestamp '2002-02-02 02:34:56.789012', timestamp '2020-02-29 00:00:00'),
+>       (22,22,2,'two', timestamp '2002-02-02 00:00:00.000000', timestamp '2020-02-29 00:00:00'),
+>       (222,222,2,'two', timestamp '2002-02-02 02:34:56.789012', timestamp '2020-02-29 00:00:00'),
+>       -- partition 3,three
+>       (3,3,3,'three', timestamp '2003-03-03 03:45:57.890123', timestamp '2003-03-31 00:00:00'),
+>       -- partition 3 or partition 3,four
+>       (34,34,3,'four', timestamp '2004-04-04 04:56:18', timestamp '2004-04-04 00:00:00'),
+>       -- partition -5,five
+>       (-55,-55,-5,'five', timestamp '2004-04-04 04:56:18', timestamp '2005-05-05 00:00:00');

--- 8 row(s) inserted.
>>select * from hive.hive.hivenonp_avro;

ID           COL2         P1           P2                                P1T         P1D
-----------  -----------  -----------  --------------------------------  ----------  ----------

          1            1            1  one                               2001-01-01  2001-01-01
         11           11            1  one                               2001-01-01  2001-01-01
          2            2            2  two                               2002-02-02  2020-02-29
         22           22            2  two                               2002-02-02  2020-02-29
        222          222            2  two                               2002-02-02  2020-02-29
          3            3            3  three                             2003-03-03  2003-03-31
         34           34            3  four                              2004-04-04  2004-04-04
        -55          -55           -5  five                              2004-04-04  2005-05-05

--- 8 row(s) selected.
>>
>>insert into hive.hive.hivepis_avro select id, col2, p1, p2 from hive.hive.hivenonp_avro;

--- 8 row(s) inserted.
>>insert into hive.hive.hivepts_avro select id, col2, p1t, p2 from hive.hive.hivenonp_avro;

--- 8 row(s) inserted.
>>insert into hive.hive.hivepi_avro  select id, col2, p1 from hive.hive.hivepis_avro;

--- 8 row(s) inserted.
>>insert overwrite table hive.hive.hivepi_avro  select id, col2, p1 from hive.hive.hivepis_avro;

*** ERROR[4223] INSERT OVERWRITE TABLE into partitioned Hive tables is not supported in this software version or edition.

*** ERROR[8822] The statement was not prepared.

>>-- error, insert overwrite table not allowed for partitioned tables
>>
>>prepare display_rows_accessed from
+>select val4_txt, val4
+>from table(statistics(null,null))
+>where tdb_name like '%_SCAN %';

--- SQL command prepared.
>>
>>select * from hive.hive.hivepis_avro;

ID           COL2         P1           P2                              
-----------  -----------  -----------  --------------------------------

          1            1            1  one                             
         11           11            1  one                             
         34           34            3  four                            
        -55          -55           -5  five                            
          2            2            2  two                             
         22           22            2  two                             
        222          222            2  two                             
          3            3            3  three                           

--- 8 row(s) selected.
>>select * from hive.hive.hivepts_avro;

ID           COL2         P1T         P2                              
-----------  -----------  ----------  --------------------------------

          1            1  2001-01-01  one                             
         11           11  2001-01-01  one                             
          3            3  2003-03-03  three                           
         34           34  2004-04-04  four                            
          2            2  2002-02-02  two                             
         22           22  2002-02-02  two                             
        222          222  2002-02-02  two                             
        -55          -55  2004-04-04  five                            

--- 8 row(s) selected.
>>select * from hive.hive.hivepi_avro;

ID           COL2         P1         
-----------  -----------  -----------

          1            1            1
         11           11            1
         34           34            3
        -55          -55           -5
          2            2            2
         22           22            2
        222          222            2
          3            3            3

--- 8 row(s) selected.
>>
>>control query shape cut;

--- SQL operation complete.
>>
>>-- insert some data and add one more partition
>>sh regrhive.ksh -v -f $REGRTSTDIR/TEST055_b.avro.sql;
>>
>>-- customer_ddl_avro table is about 3 MB, make a plan with >= 2 ESPs
>>cqd HIVE_MIN_BYTES_PER_ESP_PARTITION '1000000';

--- SQL operation complete.
>>cqd hive_max_string_length_in_bytes '32000';

--- SQL operation complete.
>>
>>prepare partinsert from
+>insert into hive.hive.customer_p_avro
+>select 
+>    c_customer_sk,
+>    c_customer_id,
+>    c_current_cdemo_sk,
+>    c_current_hdemo_sk,
+>    c_current_addr_sk,
+>    c_first_shipto_date_sk,
+>    c_first_sales_date_sk,
+>    c_salutation,
+>    c_first_name,
+>    c_last_name,
+>    c_birth_day,
+>    c_birth_month,
+>    c_birth_year,
+>    c_birth_country,
+>    c_login,
+>    c_email_address,
+>    c_last_review_date,
+>    c_preferred_cust_flag
+>from hive.hive.customer_ddl <<+cardinality 2.5e4 >>
+>where c_customer_sk < 20000
+>      -- blank partition column values not yet supported
+>      and char_length(c_preferred_cust_flag) <> 0
+>order by c_customer_sk;

--- SQL command prepared.
>>
>>-- go back to the smaller string length
>>cqd HIVE_MAX_STRING_LENGTH_IN_BYTES '32' ;

--- SQL operation complete.
>>
>>-- verify that we are indeed seeing a parallel plan
>>select count(*)
+>from table(explain(null,'PARTINSERT'))
+>where operator = 'ESP_EXCHANGE';

(EXPR)              
--------------------

                   1

--- 1 row(s) selected.
>>
>>explain options 'f' partinsert;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

4    .    5    root                                                  2.50E+004
3    .    4    esp_exchange                    1:4(hash2)            2.50E+004
1    .    3    avro_insert                     CUSTOMER_P_AVRO       2.50E+004
.    .    1    hive_scan                       CUSTOMER_DDL          2.50E+004

--- SQL operation complete.
>>
>>execute partinsert;

--- 19314 row(s) inserted.
>>
>>insert into customer_temp_avro 
+>select * from customer 
+>where c_customer_sk between 20000 and 39999;

--- 20000 row(s) inserted.
>>
>>-- query cache hit, no validation at all
>>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_ddl_avro 
+>  group by 1 
+>  order by 1
+>  ;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>
>>-- vary query to avoid query cache hit
>>prepare s2 from 
+>  select c_preferred_cust_flag,
+>         count(c_customer_sk) 
+>  from customer_ddl_avro 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>
>>prepare s2part from
+>  select c_preferred_cust_flag,
+>         count(c_customer_sk) -- avoid query cache
+>  from customer_p_avro 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1527199227848, failedModTS = 1527199352069, failedLoc = hdfs://localhost:21200/user/trafodion/hive/exttables/customer_temp_avro

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   699
N                                                 9842
Y                                                 9459

--- 3 row(s) selected.
>>-- because we don't invalidate in the executor,
>>-- this should still return 0 rows
>>
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>-- should get an NATable cache
>>-- hit, we should notice the change in the table
>>-- and return the correct result
>>
>>execute s1part;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1527199251049, failedModTS = 1527199333005, failedLoc = hdfs://localhost:21200/user/hive/warehouse/customer_p_avro

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>-- because we don't invalidate in the executor,
>>-- this should still return 0 rows
>>
>>execute s2part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>-- although this should get an NATable cache
>>-- hit, we should notice the change in the table
>>-- and return the correct result
>>
>>-- add duplicate rows to customer_p_avro
>>insert into customer_p_avro
+>select 
+>    c_customer_sk,
+>    c_customer_id,
+>    c_current_cdemo_sk,
+>    c_current_hdemo_sk,
+>    c_current_addr_sk,
+>    c_first_shipto_date_sk,
+>    c_first_sales_date_sk,
+>    c_salutation,
+>    c_first_name,
+>    c_last_name,
+>    c_birth_day,
+>    c_birth_month,
+>    c_birth_year,
+>    c_birth_country,
+>    c_login,
+>    c_email_address,
+>    c_last_review_date,
+>    c_preferred_cust_flag
+>from customer_ddl
+>where c_customer_sk between 20000 and 24999
+>      -- blank partition column values not yet supported
+>      and char_length(c_preferred_cust_flag) <> 0
+>order by c_customer_sk;

--- 4829 row(s) inserted.
>>
>>-- no query cache hit, but NATable cache hit
>>prepare s3 from 
+>  select count(*) 
+>  from customer_ddl_avro 
+>  ;

--- SQL command prepared.
>>
>>-- no query cache hit, but NATable cache hit
>>prepare s3part from
+>  select c_preferred_cust_flag,
+>         count(c_customer_id) 
+>  from customer_p_avro 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s1;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   699
N                                                 9842
Y                                                 9459

--- 3 row(s) selected.
>>-- s1 should still return 0 rows - for now
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s3;

(EXPR)              
--------------------

               24999

--- 1 row(s) selected.
>>execute s1part;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1527199333005, failedModTS = 1527199365216, failedLoc = hdfs://localhost:21200/user/hive/warehouse/customer_p_avro

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                12265
Y                                                11878

--- 2 row(s) selected.
>>-- s1 should still return 0 rows - for now
>>execute s2part;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1527199333005, failedModTS = 1527199365216, failedLoc = hdfs://localhost:21200/user/hive/warehouse/customer_p_avro

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                12265
Y                                                11878

--- 2 row(s) selected.
>>execute s3part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                12265
Y                                                11878

--- 2 row(s) selected.
>>
>>-- overwrite customer_p_avro with auto-generated partitions
>>sh regrhive.ksh -v -f $REGRTSTDIR/TEST055_d.avro.sql;
>>
>>prepare s4 from 
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_ddl_avro 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>prepare s4part from
+>  select c_preferred_cust_flag,
+>         count(*) 
+>  from customer_p_avro 
+>  group by 1 
+>  order by 1
+>  ;

--- SQL command prepared.
>>execute s2;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s4;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

                                                   856
N                                                12265
Y                                                11878

--- 3 row(s) selected.
>>execute s2part;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1527199365216, failedModTS = 1527199389007, failedLoc = hdfs://localhost:21200/user/hive/warehouse/customer_p_avro

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>-- error 8442 since the files we are trying to open no longer exist
>>execute s4part;

C_PREFERRED_CUST_FLAG             (EXPR)              
--------------------------------  --------------------

N                                                 9789
Y                                                 9525

--- 2 row(s) selected.
>>
>>-- partition elimination on AVRO table
>>select * from hive.hive.hivepio_avro where p1=2;

ID           COL2         P1         
-----------  -----------  -----------

          2            2            2
         22           22            2
        222          222            2

--- 3 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

ActRowsAccessed                      3

--- 1 row(s) selected.
>>select * from hive.hive.hivepio_avro where p1 in (1,3);

ID           COL2         P1         
-----------  -----------  -----------

          1            1            1
         11           11            1
          3            3            3
         34           34            3

--- 4 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

ActRowsAccessed                      4

--- 1 row(s) selected.
>>select * from hive.hive.hivepdo_avro where p1d >= date '2002-12-31';

ID           COL2         P1D       
-----------  -----------  ----------

          3            3  2003-03-31
         34           34  2004-04-04
        -55          -55  2005-05-05
          2            2  2020-02-29
         22           22  2020-02-29
        222          222  2020-02-29

--- 6 row(s) selected.
>>execute display_rows_accessed;

VAL4_TXT          VAL4                
----------------  --------------------

ActRowsAccessed                      6

--- 1 row(s) selected.
>>
>>-- this pred can neither be pushed to AVRO nor used as
>>-- a partition elimination predicate
>>select * from hive.hive.hivepio_avro where p1=1 or col2<10;

ID           COL2         P1         
-----------  -----------  -----------

          1            1            1
         11           11            1
          3            3            3
        -55          -55           -5
          2            2            2

--- 5 row(s) selected.
>>
>>-- tests for avro timestamp mismatch check
>>cqd auto_query_retry_warnings 'ON';

--- SQL operation complete.
>>
>>process hive statement 'drop table tavro';

--- SQL operation complete.
>>process hive statement 'create table tavro(a int) stored as avro';

--- SQL operation complete.
>>
>>select a from hive.hive.tavro;

--- 0 row(s) selected.
>>
>>sh echo "insert into tavro values (1);" > TEST055_junk;
>>sh regrhive.ksh -f TEST055_junk;
>>
>>select a from hive.hive.tavro;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1527199428614, failedModTS = 1527199455365, failedLoc = hdfs://localhost:21200/user/hive/warehouse/tavro

A          
-----------

          1

--- 1 row(s) selected.
>>insert into hive.hive.tavro values (2);

--- 1 row(s) inserted.
>>select a from hive.hive.tavro;

A          
-----------

          1
          2

--- 2 row(s) selected.
>>
>>process hive statement 'drop table tavro';

--- SQL operation complete.
>>process hive statement 'create table tavro(a int, b smallint) stored as avro';

--- SQL operation complete.
>>
>>sh echo "insert into tavro values (1,2);" > TEST055_junk;
>>sh regrhive.ksh -f TEST055_junk;
>>
>>--sh echo "select * from tavro;" > TEST055_junk;
>>--sh regrhive.ksh -f TEST055_junk | tee -a LOG055;
>>
>>select a from hive.hive.tavro;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1527199456969, failedModTS = 1527199475384, failedLoc = hdfs://localhost:21200/user/hive/warehouse/tavro

A          
-----------

          1

--- 1 row(s) selected.
>>select b from hive.hive.tavro;

B     
------

     2

--- 1 row(s) selected.
>>
>>select * from hive.hive.tavro;

A            B     
-----------  ------

          1       2

--- 1 row(s) selected.
>>
>>insert into hive.hive.tavro values (3,4);

--- 1 row(s) inserted.
>>--sh echo "select * from tavro;" > TEST055_junk;
>>--sh regrhive.ksh -f TEST055_junk | tee -a LOG055;
>>select * from hive.hive.tavro;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1527199475384, failedModTS = 1527199477301, failedLoc = hdfs://localhost:21200/user/hive/warehouse/tavro

A            B     
-----------  ------

          1       2
          3       4

--- 2 row(s) selected.
>>
>>-- tests for avro CHAR/VARCHAR/DECIMAL datatypes
>>cqd auto_query_retry_warnings 'ON';

--- SQL operation complete.
>>cqd hive_max_string_length_in_bytes '5';

--- SQL operation complete.
>>
>>-- run against AVRO table
>>drop external table if exists tavro10 for hive.hive.tavro10;

--- SQL operation complete.
>>process hive statement 'drop table tavro10';

--- SQL operation complete.
>>process hive statement 'create table tavro10(a char(2), b varchar(3), c char(5), d varchar(6), e string, f string, g char(2), h varchar(3), i char(3), j varchar(3), k decimal(5,2), l decimal(19,0), m decimal, n boolean, o date) stored as avro';

--- SQL operation complete.
>>
>>obey TEST055(extTabQueries);
>>invoke hive.hive.tavro10;

-- Definition of hive table HIVE.HIVE.TAVRO10
-- Definition current  Thu May 24 22:04:45 2018

  (
    A                                CHAR(2 CHARS) CHARACTER SET UTF8 COLLATE
      DEFAULT
  , B                                VARCHAR(3 CHARS) CHARACTER SET UTF8
      COLLATE DEFAULT
  , C                                CHAR(5 CHARS) CHARACTER SET UTF8 COLLATE
      DEFAULT
  , D                                VARCHAR(6 CHARS) CHARACTER SET UTF8
      COLLATE DEFAULT
  , E                                VARCHAR(5 BYTES) CHARACTER SET UTF8
      COLLATE DEFAULT
  , F                                VARCHAR(5 BYTES) CHARACTER SET UTF8
      COLLATE DEFAULT
  , G                                CHAR(2 CHARS) CHARACTER SET UTF8 COLLATE
      DEFAULT
  , H                                VARCHAR(3 CHARS) CHARACTER SET UTF8
      COLLATE DEFAULT
  , I                                CHAR(3 CHARS) CHARACTER SET UTF8 COLLATE
      DEFAULT
  , J                                VARCHAR(3 CHARS) CHARACTER SET UTF8
      COLLATE DEFAULT
  , K                                NUMERIC(5, 2)
  , L                                NUMERIC(19, 0)
  , M                                NUMERIC(10, 0)
  , N                                BOOLEAN
  , O                                DATE
  )
  /* stored as avro */

--- SQL operation complete.
>>showddl hive.hive.tavro10;

/* Hive DDL */
CREATE TABLE HIVE.HIVE.TAVRO10
  (
    A                                char(2)
  , B                                varchar(3)
  , C                                char(5)
  , D                                varchar(6)
  , E                                string
  , F                                string
  , G                                char(2)
  , H                                varchar(3)
  , I                                char(3)
  , J                                varchar(3)
  , K                                decimal(5,2)
  , L                                decimal(19,0)
  , M                                decimal(10,0)
  , N                                boolean
  , O                                date
  )
  stored as avro
;

/* Trafodion DDL */

--- SQL operation complete.
>>
>>insert into hive.hive.tavro10 values 
+>   ('ab', 'cde', 'ab12345', 'cde', 'ab', 'cde', 'ab', 'cde', '11', '222',
+>   123.24, 1234567890123456789, 123456, true, date '2017-01-02');

--- 1 row(s) inserted.
>>
>>sh echo  "insert into tavro10 values ('ba', 'cde', 'ab54321', 'cde', 'ab', 'cde', 'ab', 'cde', '11', '222', 123.24, 1234567890123456789, 123456, true,'2018-03-04');" > TEST055_junk;
>>sh regrhive.ksh -f TEST055_junk;
>>
>>select * from hive.hive.tavro10 order by 1;

A         B             C                     D                         E      F      G         H             I             J             K             L                     M                     N      O
--------  ------------  --------------------  ------------------------  -----  -----  --------  ------------  ------------  ------------  ------------  --------------------  --------------------  -----  ----------

ab        cde           ab12345               cde                       ab     cde    ab        cde           11            222                 123.24   1234567890123456789                123456  TRUE   2017-01-02
ba        cde           ab543                 cde                       ab     cde    ab        cde           11            222                 123.24   1234567890123456789                123456  TRUE   2018-03-04

--- 2 row(s) selected.
>>
>>drop external table if exists tavro10 for hive.hive.tavro10;

--- SQL operation complete.
>>create external table tavro10 
+>        (a char(2), b varchar(3),
+>         c char(5), d varchar(6), 
+>         e char(2), f varchar(3),
+>         g char(2) character set utf8, h varchar(3) character set utf8,
+>         i tinyint, j int)
+>     for hive.hive.tavro10;

--- SQL operation complete.
>>
>>showddl hive.hive.tavro10;

/* Hive DDL */
CREATE TABLE HIVE.HIVE.TAVRO10
  (
    A                                char(2)
  , B                                varchar(3)
  , C                                char(5)
  , D                                varchar(6)
  , E                                string
  , F                                string
  , G                                char(2)
  , H                                varchar(3)
  , I                                char(3)
  , J                                varchar(3)
  , K                                decimal(5,2)
  , L                                decimal(19,0)
  , M                                decimal(10,0)
  , N                                boolean
  , O                                date
  )
  stored as avro
;

/* Trafodion DDL */

REGISTER /*INTERNAL*/ HIVE TABLE HIVE.HIVE.TAVRO10;
/* ObjectUID = 7883712974750735778 */

CREATE EXTERNAL TABLE TAVRO10
  (
    A                                CHAR(2) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , B                                VARCHAR(3) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , C                                CHAR(5) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , D                                VARCHAR(6) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , E                                CHAR(2) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , F                                VARCHAR(3) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , G                                CHAR(2 CHARS) CHARACTER SET UTF8 COLLATE
      DEFAULT DEFAULT NULL
  , H                                VARCHAR(3 CHARS) CHARACTER SET UTF8
      COLLATE DEFAULT DEFAULT NULL
  , I                                TINYINT DEFAULT NULL
  , J                                INT DEFAULT NULL
  , K                                NUMERIC(5, 2) DEFAULT NULL
  , L                                NUMERIC(19, 0) DEFAULT NULL
  , M                                NUMERIC(10, 0) DEFAULT NULL
  , N                                BOOLEAN DEFAULT NULL
  , O                                DATE DEFAULT NULL
  )
  FOR HIVE.HIVE.TAVRO10
;

--- SQL operation complete.
>>
>>insert into hive.hive.tavro10 values
+>  ('x', 'yz', 'x', 'yz', 'x', 'yz', 'x', 'yz', 33, 444,
+>   123.24, 1234567890123456789, 123456, false , date '1016-01-01');

--- 1 row(s) inserted.
>>
>>sh echo  "insert into tavro10 values ('xx', 'cde', 'ab', 'cde', 'ab', 'cde', 'ab', 'cde', '11', '222', 123.24, 1234567890123456789, 123456, true, null);" > TEST055_junk;
>>sh regrhive.ksh -f TEST055_junk;
>>
>>select * from hive.hive.tavro10 order by 1 desc;

A   B    C      D       E   F    G         H             I     J            K             L                     M                     N      O
--  ---  -----  ------  --  ---  --------  ------------  ----  -----------  ------------  --------------------  --------------------  -----  ----------

xx  cde  ab     cde     ab  cde  ab        cde             11          222        123.24   1234567890123456789                123456  TRUE   ?         
x   yz   x      yz      x   yz   x         yz              33          444        123.24   1234567890123456789                123456  FALSE  1016-01-01
ba  cde  ab543  cde     ab  cde  ab        cde             11          222        123.24   1234567890123456789                123456  TRUE   2018-03-04
ab  cde  ab123  cde     ab  cde  ab        cde             11          222        123.24   1234567890123456789                123456  TRUE   2017-01-02

--- 4 row(s) selected.
>>
>>get avro read schema for table hive.hive.tavro10;


Avro Read schema
==================

Table: HIVE.HIVE.TAVRO10

{
  "type" : "record",
  "name" : "tavro10",
  "namespace" : "default",
  "fields" : [ {
    "name" : "a",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 2
    } ],
    "doc" : "",
    "default" : null
  }, {
    "name" : "b",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "varchar",
      "maxLength" : 3
    } ],
    "default" : null
  }, {
    "name" : "c",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 5
    } ],
    "default" : null
  }, {
    "name" : "d",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "varchar",
      "maxLength" : 6
    } ],
    "default" : null
  }, {
    "name" : "e",
    "type" : [ "null", "string" ],
    "default" : null
  }, {
    "name" : "f",
    "type" : [ "null", "string" ],
    "default" : null
  }, {
    "name" : "g",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 2
    } ],
    "default" : null
  }, {
    "name" : "h",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "varchar",
      "maxLength" : 3
    } ],
    "default" : null
  }, {
    "name" : "i",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ],
    "default" : null
  }, {
    "name" : "j",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "varchar",
      "maxLength" : 3
    } ],
    "default" : null
  }, {
    "name" : "k",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 5,
      "scale" : 2
    } ],
    "default" : null
  }, {
    "name" : "l",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 19,
      "scale" : 0
    } ],
    "default" : null
  }, {
    "name" : "m",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 10,
      "scale" : 0
    } ],
    "default" : null
  }, {
    "name" : "n",
    "type" : [ "null", "boolean" ],
    "default" : null
  }, {
    "name" : "o",
    "type" : [ "null", {
      "type" : "int",
      "logicalType" : "date"
    } ],
    "default" : null
  } ]
}

--- SQL operation complete.
>>get avro write schema for table hive.hive.tavro10;


Avro Write schema
==================

Table: HIVE.HIVE.TAVRO10

{
  "type" : "record",
  "name" : "TAVRO10",
  "namespace" : "HIVE.HIVE",
  "fields" : [ {
    "name" : "a",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 2
    } ]
  }, {
    "name" : "b",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ]
  }, {
    "name" : "c",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 5
    } ]
  }, {
    "name" : "d",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 6
    } ]
  }, {
    "name" : "e",
    "type" : [ "null", "string" ]
  }, {
    "name" : "f",
    "type" : [ "null", "string" ]
  }, {
    "name" : "g",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 2
    } ]
  }, {
    "name" : "h",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ]
  }, {
    "name" : "i",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ]
  }, {
    "name" : "j",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ]
  }, {
    "name" : "k",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 5,
      "scale" : 2
    } ]
  }, {
    "name" : "l",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 19,
      "scale" : 0
    } ]
  }, {
    "name" : "m",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 10,
      "scale" : 0
    } ]
  }, {
    "name" : "n",
    "type" : [ "null", "boolean" ]
  }, {
    "name" : "o",
    "type" : [ "null", {
      "type" : "int",
      "logicalType" : "date"
    } ]
  } ]
}

--- SQL operation complete.
>>get avro schema for table hive.hive.tavro10;


Avro Read schema
==================

Table: HIVE.HIVE.TAVRO10

{
  "type" : "record",
  "name" : "tavro10",
  "namespace" : "default",
  "fields" : [ {
    "name" : "a",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 2
    } ],
    "doc" : "",
    "default" : null
  }, {
    "name" : "b",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "varchar",
      "maxLength" : 3
    } ],
    "default" : null
  }, {
    "name" : "c",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 5
    } ],
    "default" : null
  }, {
    "name" : "d",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "varchar",
      "maxLength" : 6
    } ],
    "default" : null
  }, {
    "name" : "e",
    "type" : [ "null", "string" ],
    "default" : null
  }, {
    "name" : "f",
    "type" : [ "null", "string" ],
    "default" : null
  }, {
    "name" : "g",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 2
    } ],
    "default" : null
  }, {
    "name" : "h",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "varchar",
      "maxLength" : 3
    } ],
    "default" : null
  }, {
    "name" : "i",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ],
    "default" : null
  }, {
    "name" : "j",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "varchar",
      "maxLength" : 3
    } ],
    "default" : null
  }, {
    "name" : "k",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 5,
      "scale" : 2
    } ],
    "default" : null
  }, {
    "name" : "l",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 19,
      "scale" : 0
    } ],
    "default" : null
  }, {
    "name" : "m",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 10,
      "scale" : 0
    } ],
    "default" : null
  }, {
    "name" : "n",
    "type" : [ "null", "boolean" ],
    "default" : null
  }, {
    "name" : "o",
    "type" : [ "null", {
      "type" : "int",
      "logicalType" : "date"
    } ],
    "default" : null
  } ]
}

Avro Write schema
==================

Table: HIVE.HIVE.TAVRO10

{
  "type" : "record",
  "name" : "TAVRO10",
  "namespace" : "HIVE.HIVE",
  "fields" : [ {
    "name" : "a",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 2
    } ]
  }, {
    "name" : "b",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ]
  }, {
    "name" : "c",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 5
    } ]
  }, {
    "name" : "d",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 6
    } ]
  }, {
    "name" : "e",
    "type" : [ "null", "string" ]
  }, {
    "name" : "f",
    "type" : [ "null", "string" ]
  }, {
    "name" : "g",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 2
    } ]
  }, {
    "name" : "h",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ]
  }, {
    "name" : "i",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ]
  }, {
    "name" : "j",
    "type" : [ "null", {
      "type" : "string",
      "logicalType" : "char",
      "maxLength" : 3
    } ]
  }, {
    "name" : "k",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 5,
      "scale" : 2
    } ]
  }, {
    "name" : "l",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 19,
      "scale" : 0
    } ]
  }, {
    "name" : "m",
    "type" : [ "null", {
      "type" : "bytes",
      "logicalType" : "decimal",
      "precision" : 10,
      "scale" : 0
    } ]
  }, {
    "name" : "n",
    "type" : [ "null", "boolean" ]
  }, {
    "name" : "o",
    "type" : [ "null", {
      "type" : "int",
      "logicalType" : "date"
    } ]
  } ]
}

--- SQL operation complete.
>>
>>-- error cases
>>
>>-- overflow error during insert. Not currently detected.
>>insert into hive.hive.tavro10 values
+>  ('x', 'yz', 'x', 'yz', 'x', 'yz', 'x', 'yz', 333, 444, 1, NULL, 1, true);

*** ERROR[4023] The degree of each row value constructor (14) must equal the degree of the target table column list (15).

*** ERROR[8822] The statement was not prepared.

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[4023] The degree of each row value constructor (14) must equal the degree of the target table column list (15).

>>
>>-- incommpatible datatype against external table
>>cqd allow_incompatible_assignment 'OFF';

--- SQL operation complete.
>>insert into hive.hive.tavro10 values 
+>   ('ab', 'cde', 'ab', 'cde', 'ab', 'cde', 'ab', 'cde', '11', '222', 1, 1, 1, true, null);

*** ERROR[4039] Column I is of type TINYINT, incompatible with the value's type, CHAR(2).

*** ERROR[8822] The statement was not prepared.

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[4039] Column I is of type TINYINT, incompatible with the value's type, CHAR(2).

>>cqd allow_incompatible_assignment reset;

--- SQL operation complete.
>>
>>-- number of values less than number of columns
>>insert into hive.hive.tavro10 values 
+>   ('ab', 'cde', 'ab', 'cde', 'ab', 'cde', 'ab', 'cde');

*** ERROR[4023] The degree of each row value constructor (8) must equal the degree of the target table column list (15).

*** ERROR[8822] The statement was not prepared.

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[4023] The degree of each row value constructor (8) must equal the degree of the target table column list (15).

>>
>>-- overflow error detected during select
>>truncate table hive.hive.tavro10;

--- SQL operation complete.
>>sh echo "insert into tavro10 values ('a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', '555', '666', 1, 1, 1, false, null);" > TEST055_junk;
>>sh regrhive.ksh -f TEST055_junk;
>>select * from hive.hive.tavro10 order by 1;

*** ERROR[8411] A numeric overflow occurred during an arithmetic computation or data conversion. Conversion of Source Type:CHAR(REC_BYTE_F_ASCII,12 BYTES,UTF8) Source Value:555          to Target Type:TINYINT SIGNED(REC_BIN8_SIGNED).

--- 0 row(s) selected.
>>
>>-- incompatible values in hive table validated and detected during select
>>truncate table hive.hive.tavro10;

--- SQL operation complete.
>>sh echo "insert into tavro10 values ('a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 1, 1, 1, false, null);" > TEST055_junk;
>>sh regrhive.ksh -f TEST055_junk;
>>select * from hive.hive.tavro10 order by 1;

*** WARNING[8597] Statement was automatically retried 1 time(s). Delay before each retry was 0 seconds. See next entry for the error that caused this retry. 

*** WARNING[8436] Mismatch detected between compiletime and runtime hive table definitions. DataModMismatchDetails: compiledModTS = 1529475501021, failedModTS = 1529475515896, failedLoc = hdfs://localhost:24200/user/hive/warehouse/tavro10

*** ERROR[8413] The string argument contains characters that cannot be converted. Source data(in hex): 612020202020202020202020

--- 0 row(s) selected.
>>
>>-- drop tables
>>drop external table if exists tavro10 for hive.hive.tavro10;

--- SQL operation complete.
>>process hive statement 'drop table tavro10';

--- SQL operation complete.
>>cleanup table hive.hive.tavro10;

--- SQL operation complete.
>>
>>
>>-- test for decimal datatype with precision and scale
>>drop table if exists t_avo;

--- SQL operation complete.
>>create table t_avo (c1 decimal, c2 decimal(10,2)) stored as avro;

--- SQL operation complete.
>>insert into t_avo values (1.0,1.0),(2.0,2.0),(3.0,3.0);

--- 3 row(s) inserted.
>>select * from t_avo;

C1                    C2                   
--------------------  ---------------------

                   1                      1
                   2                      2
                   3                      3

--- 3 row(s) selected.
>>
>>-- get stats
>>process hive statement 'drop table tavro';

--- SQL operation complete.
>>process hive statement 'create table tavro(a int, b smallint) stored as avro';

--- SQL operation complete.
>>insert into tavro values (1,2);

--- 1 row(s) inserted.
>>invoke table(avro stats());

-- Definition of Trafodion table HIVE.HIVE.EXE_UTIL_AVRO_STATS__
-- Definition of hbase table HIVE.HIVE.EXE_UTIL_AVRO_STATS__
-- Definition current  Thu May 24 22:06:56 2018

  (
    CATALOG_NAME                     CHAR(256 BYTES) CHARACTER SET UTF8 COLLATE
      DEFAULT NO DEFAULT NOT NULL NOT DROPPABLE
  , SCHEMA_NAME                      CHAR(256 BYTES) CHARACTER SET UTF8 COLLATE
      DEFAULT NO DEFAULT NOT NULL NOT DROPPABLE
  , OBJECT_NAME                      CHAR(256 BYTES) CHARACTER SET UTF8 COLLATE
      DEFAULT NO DEFAULT NOT NULL NOT DROPPABLE
  , ROOT_DIR                         CHAR(512 BYTES) CHARACTER SET UTF8 COLLATE
      DEFAULT NO DEFAULT NOT NULL NOT DROPPABLE
  , FILE_NUM                         LARGEINT NO DEFAULT NOT NULL NOT DROPPABLE
  , FILE_PATH                        CHAR(512 BYTES) CHARACTER SET UTF8 COLLATE
      DEFAULT NO DEFAULT NOT NULL NOT DROPPABLE
  , FILE_NAME                        CHAR(256 BYTES) CHARACTER SET UTF8 COLLATE
      DEFAULT NO DEFAULT NOT NULL NOT DROPPABLE
  , FILE_SIZE                        LARGEINT NO DEFAULT NOT NULL NOT DROPPABLE
  , FILE_MAX_SIZE                    LARGEINT NO DEFAULT NOT NULL NOT DROPPABLE
  , NUM_BLOCKS                       LARGEINT NO DEFAULT NOT NULL NOT DROPPABLE
  , ROW_COUNT                        LARGEINT NO DEFAULT NOT NULL NOT DROPPABLE
  , MODIFICATION_TIME                CHAR(24 BYTES) CHARACTER SET UTF8 COLLATE
      DEFAULT NO DEFAULT NOT NULL NOT DROPPABLE
  )

--- SQL operation complete.
>>select left(trim(schema_name) || '.' || trim(object_name), 14),
+>  file_num, 'FileSize: ' || cast(file_size as varchar(10)), row_count
+>from table(avro stats(hive.hive.tavro));

(EXPR)                                                    FILE_NUM              (EXPR)                ROW_COUNT
--------------------------------------------------------  --------------------  --------------------  --------------------

HIVE.TAVRO                                                                   1  FileSize: 171                            1

--- 1 row(s) selected.
>>get avro stats for table hive.hive.tavro;


File Stats Details
==================

  ObjectName:        HIVE.HIVE.TAVRO
  FileFormat:        avro
  RootDir:           hdfs://localhost:21200/user/hive/warehouse/tavro

  FileNum:           1
  FilePath:          /user/hive/warehouse/tavro
  FileName:          TAVRO-0-20180524220655404834-21
  FileSize:          171 Bytes
  FileMaxSize:       134217728 Bytes
  NumBlocks:         1
  RowCount:          1
  ModificationTime:  2018-05-24 22:06:56.556 UTC


File Stats Summary
==================

  ObjectName:              HIVE.HIVE.TAVRO
  FileFormat:              avro
  RootDir:                 hdfs://localhost:21200/user/hive/warehouse/tavro
  TotalNumFiles:           1
  TotalFileSize:           171 Bytes
  TotalNumBlocks:          1
  TotalRowCount:           1

--- SQL operation complete.
>>process hive statement 'drop table tavro';

--- SQL operation complete.
>>
>>log;
