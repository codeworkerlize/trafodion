-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@

obey TEST001(clean);
obey TEST001(setup);
log LOG001 clear;
obey TEST001(test);
log;
obey TEST001(clean);
exit;

?section clean
drop schema ccsch001 cascade;

?section setup

create schema ccsch001;
set schema ccsch001;

?section test

CQD TRAF_ALLOW_DISABLE_ENABLE_INDEXES 'ON';

create table t1 (a int, b varchar(20));
sh sqlci -i "TEST001(insert1)";
select * from t1;

alter table t1 add column c varchar(20);
sh sqlci -i "TEST001(insert2)";
select * from t1;

alter table t1 drop column c;
sh sqlci -i "TEST001(insert3)";
select * from t1;

alter table t1 alter column b varchar(30);
sh sqlci -i "TEST001(insert4)";
select * from t1;

alter table t1 alter column b varchar(20);
sh sqlci -i "TEST001(select1)";
invoke t1;

alter table t1 alter column b varchar(50);
sh sqlci -i "TEST001(select1)";
invoke t1;

begin work;
alter table t1 alter column b varchar(70);
sh sqlci -i "TEST001(select1)";
invoke t1;
alter table t1 alter column b varchar(60);
sh sqlci -i "TEST001(select1)";
invoke t1;
commit;
sh sqlci -i "TEST001(select1)";
invoke t1;

alter table t1 alter column b char(30);
sh sqlci -i "TEST001(insert5)";
select * from t1;

-- Add a NULL value so that adding NOT NULL constraint will fail
insert into t1 values (6, NULL);
alter table t1 alter column b char(30) not null;
sh sqlci -i "TEST001(insert6NULL)";
select * from t1;

-- Remove rows with NULL column b so we can add the NOT NULL constraint
delete from t1 where b is NULL;
select * from t1;

alter table t1 alter column b char(30) not null;
sh sqlci -i "TEST001(insert6NULL)";
select * from t1;

alter table t1 add constraint conUnique unique (b);
sh sqlci -i "TEST001(insert6)";
select * from t1;

alter table t1 drop constraint conUnique;
sh sqlci -i "TEST001(insert6)";
select * from t1;

-- This will fail for duplicated rows
alter table t1 add constraint conPK PRIMARY KEY (a);
sh sqlci -i "TEST001(select1)";

-- Remove duplicated rows and try again
delete from t1 where a = 6;
alter table t1 add constraint conPK PRIMARY KEY (a);
sh sqlci -i "TEST001(insert6)";
select * from t1;

-- Add a reference constraint
create table t2 (a int);
sh sqlci -i "TEST001(select2)";
insert into t2 values (1);
select * from t2;
alter table t2 add constraint fk2 foreign key (a) references t1 (a);
sh sqlci -i "TEST001(select2)";
alter table t2 drop constraint fk2;
sh sqlci -i "TEST001(select2)";
drop table t2;
sh sqlci -i "TEST001(select2)";

create index idx1 on t1 (b);
sh sqlci -i "TEST001(select1)";

alter table t1 disable index idx1;
sh sqlci -i "TEST001(select1)";

alter table t1 enable index idx1;
sh sqlci -i "TEST001(select1)";

alter table t1 disable all index;
sh sqlci -i "TEST001(select1)";

alter table t1 enable all index;
sh sqlci -i "TEST001(select1)";

drop index idx1;
sh sqlci -i "TEST001(select1)";

alter table t1 rename to t2;
sh sqlci -i "TEST001(select2)";

-- Drop table cascade with foreign key constraints referencing this
-- table
create table t1 (a int);
alter table t1 add constraint fk1 foreign key (a) references t2 (a);
showddl t1;
drop table t2 cascade;
showddl t1;

-- drop not existing table
showddl t3;
drop table t3;
sh sqlci -i "TEST001(create3)";
insert into t3 values (1);
sh sqlci -i "TEST001(select3)";
select * from t3;

?section create3
set schema ccsch001;
log LOG001;
create table t3 (a int);

?section select3
set schema ccsch001;
log LOG001;
select * from t1;

?section select1
set schema ccsch001;
log LOG001;
select * from t1;

?section select2
set schema ccsch001;
log LOG001;
select * from t2;

?section insert1
set schema ccsch001;
log LOG001;
insert into t1 values (1, 'b');

?section insert2
set schema ccsch001;
log LOG001;
insert into t1 values (2, 'bb', 'cc');

?section insert3
set schema ccsch001;
log LOG001;
insert into t1 values (3, 'bbb');

?section insert4
set schema ccsch001;
log LOG001;
insert into t1 values (4, 'bbbb');

?section insert5
set schema ccsch001;
log LOG001;
insert into t1 values (5, 'bbbbb');

?section insert6NULL
set schema ccsch001;
log LOG001;
insert into t1 values (6, NULL);

?section insert6
set schema ccsch001;
log LOG001;
insert into t1 values (6, 'bbbbbb');
