>>obey TEST164(tests);
>>--------------------------------------------------------------------------
>>SET TERMINAL_CHARSET UTF8;
>>CQD DEFAULT_CHARSET 'UTF8';

--- SQL operation complete.
>>
>>-- test create table
>>CREATE TABLE normal_table(normal_column INT);

--- SQL operation complete.
>>CREATE TABLE normal_table_deliminted("normal_column" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_column_name(中文列名 INT);

--- SQL operation complete.
>>CREATE TABLE chinese_column_name_deliminted("中文列名" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_prefix(中文前缀end INT);

--- SQL operation complete.
>>CREATE TABLE chinese_prefix_deliminted("中文前缀end" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_suffix(pre中文后缀 INT);

--- SQL operation complete.
>>CREATE TABLE chinese_suffix_deliminted("pre中文后缀" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_middle(pre中文end INT);

--- SQL operation complete.
>>CREATE TABLE chinese_middle_deliminted("pre中文end" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_underline(_中文 INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_underline_deliminted("_中文" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_c(c中文 INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_c_deliminted("c中文" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_G(G中文 INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_G_deliminted("G中文" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_n(n中文 INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_n_deliminted("n中文" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_P(P中文 INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_P_deliminted("P中文" INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_Z(Z中文 INT);

--- SQL operation complete.
>>CREATE TABLE chinese_with_prefix_Z_deliminted("Z中文" INT);

--- SQL operation complete.
>>
>>-- test primary key
>>CREATE TABLE table_pk(主键 INT, _主键 INT, 主键_ INT, data VARCHAR(10), PRIMARY KEY(主键, _主键, 主键_));

--- SQL operation complete.
>>INSERT INTO table_pk(主键, _主键, 主键_) VALUES(1,1,1),(2,2,2),(2,2,3),(3,3,3);

--- 4 row(s) inserted.
>>SELECT 主键, _主键, 主键_, data FROM table_pk;

主键       _主键      主键_      DATA      
-----------  -----------  -----------  ----------

          1            1            1  ?         
          2            2            2  ?         
          2            2            3  ?         
          3            3            3  ?         

--- 4 row(s) selected.
>>SELECT * FROM table_pk WHERE 主键 = 2 AND _主键 = 2 AND 主键_ = 2;

主键       _主键      主键_      DATA      
-----------  -----------  -----------  ----------

          2            2            2  ?         

--- 1 row(s) selected.
>>SELECT 主键, _主键, SUM(主键_) FROM table_pk GROUP BY 主键, _主键 HAVING _主键 <> 1;

主键       _主键      (EXPR)              
-----------  -----------  --------------------

          2            2                     5
          3            3                     3

--- 2 row(s) selected.
>>
>>-- test salt
>>CREATE TABLE table_salt(分区 INT, p分区 INT, 分区p INT, data VARCHAR(10)) STORE BY(分区, p分区, 分区p) SALT USING 2 PARTITIONS ON(分区, p分区, 分区p);

--- SQL operation complete.
>>INSERT INTO table_salt(分区, p分区, 分区p) VALUES(1,1,1),(2,2,2),(2,2,3),(3,3,3);

--- 4 row(s) inserted.
>>SELECT * FROM table_salt;

分区       P分区      分区P      DATA      
-----------  -----------  -----------  ----------

          1            1            1  ?         
          2            2            2  ?         
          2            2            3  ?         
          3            3            3  ?         

--- 4 row(s) selected.
>>SELECT * FROM table_salt WHERE 分区 = 2 AND p分区 = 2 AND 分区p = 3;

分区       P分区      分区P      DATA      
-----------  -----------  -----------  ----------

          2            2            3  ?         

--- 1 row(s) selected.
>>
>>-- test store by
>>CREATE TABLE table_store(存储 INT, c存储 INT, 存储c INT, data VARCHAR(10)) STORE BY(存储, c存储, 存储c);

--- SQL operation complete.
>>INSERT INTO table_store(存储, c存储, 存储c) VALUES(1,1,1),(2,2,2),(2,2,3),(3,3,3);

--- 4 row(s) inserted.
>>SELECT * FROM table_store;

存储       C存储      存储C      DATA      
-----------  -----------  -----------  ----------

          1            1            1  ?         
          2            2            2  ?         
          2            2            3  ?         
          3            3            3  ?         

--- 4 row(s) selected.
>>SELECT * FROM table_store WHERE 存储 = 2 AND c存储 = 2 AND 存储c = 3;

存储       C存储      存储C      DATA      
-----------  -----------  -----------  ----------

          2            2            3  ?         

--- 1 row(s) selected.
>>
>>-- test division by
>>CREATE TABLE table_division(区 INT, a区 TIMESTAMP(6) NOT NULL, 区n INT, data VARCHAR(10)) STORE BY(区, a区, 区n) DIVISION BY(date_trunc('day', a区));

--- SQL operation complete.
>>INSERT INTO table_division(区, a区, 区n) VALUES(1,'2018-09-08 23:43:13.663343',1),(2,'2018-09-08 23:43:13.663343',2),(2,'2018-09-08 23:43:13.663343',3),(3,'2018-09-08 23:43:13.663343',3);

--- 4 row(s) inserted.
>>SELECT * FROM table_division;

区          A区                        区N         DATA      
-----------  --------------------------  -----------  ----------

          1  2018-09-08 23:43:13.663343            1  ?         
          2  2018-09-08 23:43:13.663343            2  ?         
          2  2018-09-08 23:43:13.663343            3  ?         
          3  2018-09-08 23:43:13.663343            3  ?         

--- 4 row(s) selected.
>>SELECT * FROM table_division WHERE 区 = 2 AND a区 = '2018-09-08 23:43:13.663343' AND 区n = 3;

区          A区                        区N         DATA      
-----------  --------------------------  -----------  ----------

          2  2018-09-08 23:43:13.663343            3  ?         

--- 1 row(s) selected.
>>
>>-- test check
>>CREATE TABLE  chinese_constraint_test_1 (标志 CHAR(40) CHECK (标志 = 'test'));

--- SQL operation complete.
>>CREATE TABLE  chinese_constraint_test_2 ("标志" CHAR(40) CHECK ("标志" = 'test'));

--- SQL operation complete.
>>
>>-- test view
>>CREATE TABLE tb_view(c1 VARCHAR(10) CHARACTER SET UTF8, c2 int, c3 int);

--- SQL operation complete.
>>INSERT INTO tb_view VALUES('测试十', 1, 1);

--- 1 row(s) inserted.
>>INSERT INTO tb_view VALUES('测试九', 2, 2);

--- 1 row(s) inserted.
>>
>>CREATE OR REPLACE VIEW test_view_1(列一,列二,列三) AS SELECT * FROM tb_view WHERE c1 = '测试十' ORDER BY c3 WITH CHECK OPTION;

--- SQL operation complete.
>>SELECT * FROM test_view_1;

列一                                    列二       列三     
----------------------------------------  -----------  -----------

测试十                                           1            1

--- 1 row(s) selected.
>>SHOWDDL test_view_1;

CREATE OR REPLACE VIEW TRAFODION.SCH.TEST_VIEW_1 (列一,列二,列三) AS
  SELECT TRAFODION.SCH.TB_VIEW.C1, TRAFODION.SCH.TB_VIEW.C2,
    TRAFODION.SCH.TB_VIEW.C3 FROM TRAFODION.SCH.TB_VIEW WHERE
    TRAFODION.SCH.TB_VIEW.C1 = '测试十' ORDER BY TRAFODION.SCH.TB_VIEW.C3
    WITH CHECK OPTION ;

--- SQL operation complete.
>>
>>CREATE OR REPLACE VIEW test_view_2("列一","列二","列三") AS SELECT * FROM tb_view WHERE c1 = '测试九' ORDER BY c3 WITH CHECK OPTION;

--- SQL operation complete.
>>SELECT * FROM test_view_2;

列一                                    列二       列三     
----------------------------------------  -----------  -----------

测试九                                           2            2

--- 1 row(s) selected.
>>SHOWDDL test_view_2;

CREATE OR REPLACE VIEW TRAFODION.SCH.TEST_VIEW_2 ("列一", "列二", "列三")
  AS
    SELECT TRAFODION.SCH.TB_VIEW.C1, TRAFODION.SCH.TB_VIEW.C2,
      TRAFODION.SCH.TB_VIEW.C3 FROM TRAFODION.SCH.TB_VIEW WHERE
      TRAFODION.SCH.TB_VIEW.C1 = '测试九' ORDER BY TRAFODION.SCH.TB_VIEW.C3
      WITH CHECK OPTION ;

--- SQL operation complete.
>>
>>INSERT INTO tb_view VALUES('测试十', 1, 0);

--- 1 row(s) inserted.
>>INSERT INTO tb_view VALUES('测试九', 2, 1);

--- 1 row(s) inserted.
>>
>>SELECT * FROM test_view_1;

列一                                    列二       列三     
----------------------------------------  -----------  -----------

测试十                                           1            0
测试十                                           1            1

--- 2 row(s) selected.
>>
>>SELECT * FROM test_view_2;

列一                                    列二       列三     
----------------------------------------  -----------  -----------

测试九                                           2            1
测试九                                           2            2

--- 2 row(s) selected.
>>
>>obey TEST164(clean_up);
>>--------------------------------------------------------------------------
>>
>>DROP TABLE normal_table;

--- SQL operation complete.
>>DROP TABLE normal_table_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_column_name;

--- SQL operation complete.
>>DROP TABLE chinese_column_name_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_prefix;

--- SQL operation complete.
>>DROP TABLE chinese_prefix_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_suffix;

--- SQL operation complete.
>>DROP TABLE chinese_suffix_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_middle;

--- SQL operation complete.
>>DROP TABLE chinese_middle_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_with_underline;

--- SQL operation complete.
>>DROP TABLE chinese_with_underline_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_c;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_c_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_G;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_G_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_n;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_n_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_P;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_P_deliminted;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_Z;

--- SQL operation complete.
>>DROP TABLE chinese_with_prefix_Z_deliminted;

--- SQL operation complete.
>>DROP TABLE table_pk;

--- SQL operation complete.
>>DROP TABLE table_salt;

--- SQL operation complete.
>>DROP TABLE table_store;

--- SQL operation complete.
>>DROP TABLE table_division;

--- SQL operation complete.
>>DROP TABLE chinese_constraint_test_1;

--- SQL operation complete.
>>DROP TABLE chinese_constraint_test_2;

--- SQL operation complete.
>>
>>DROP VIEW test_view_1;

--- SQL operation complete.
>>DROP VIEW test_view_2;

--- SQL operation complete.
>>DROP TABLE tb_view;

--- SQL operation complete.
>>log;
