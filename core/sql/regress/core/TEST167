-- Test: TEST167 (Core)
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
--
-- Functionality: count(*) hbase_aggr
-- 
-- Expected files: EXPECTED167
-- Table created: t167t1
-- Limitations:
-- To do: 
-- Revision history:

--obey TEST167(clnup);
--obey TEST167(tests);
--exit;
cqd traf_object_encryption '';
?section tests
log LOG167 clear;
-- CREATE database
cqd AGGR_PUSHDOWN_THRESHOLD '1';
drop table if exists t167t1 cascade;
create table t167t1(c1 int primary key, c2 int not null, c3 int, c4 int, c5 int);
upsert using load into t167t1 select element, element+1, element*3, element*5, element*7 from udf(series(1,10000));
insert into t167t1 values(-1,-1,'','','');
insert into t167t1 values(-2,-1,-1,'','');
insert into t167t1 values(-3,-1,-1,'',-1);
create index t167idx1 on t167t1(c4);
create index t167idx2 on t167t1(c2,c3);
UPDATE STATISTICS FOR TABLE t167t1 on EVERY COLUMN;

--check cqd settings
cqd HBASE_FILTER_PREDS '0';
cqd showcontrol_show_all 'on';
showcontrol default;

prepare s from select count(*) from t167t1;
explain options 'f' s;
execute s;

-- for M-13765
select * from (select count(*) cnt from t167t1) t where t.cnt >20000;

prepare s from select count(*) from t167t1 where c1>1 and c1<100;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c1>99 and c1<100;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c1>101 and c1<100;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c1>98 and c1<100;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c1>1 and c1<100 and c1=5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c1=5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c1>5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c1<5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c2>1 and c2<100;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c2=5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c2!=5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c2 is null;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c2 is not null;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where (c2 > 5) is true;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where (c2 < 10) is false;
explain options 'f' s;
execute s;

prepare s from select * from t167t1 where c1=(select count(*) from t167t1);
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c2>10;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c3>1 and c3<100;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c3=5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c4>1 and c2<100;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c4=5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c4>10;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c4 is null;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c4 is not null;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c5>1 and c5<100;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c5=5;
explain options 'f' s;
execute s;

prepare s from select count(*) from t167t1 where c5>10;
explain options 'f' s;
execute s;

prepare s from select count(c1) from t167t1 where c1>1 and c1<100;
explain options 'f' s;
execute s;

-- do not support push down
prepare s from select max(c1) from t167t1 where c1>1 and c1<100;
explain options 'f' s;
execute s;

cqd AGGR_PUSHDOWN_THRESHOLD reset;
set parserflags 1;
explain options 'f' select count(*) from t167t1;
explain options 'f' select count(*) from table(index_table t167idx1);

cqd HBASE_FILTER_PREDS '2';
-- do not push down count(*) to hbasewhen cqd HBASE_FILTER_PREDS is not OFF
prepare s from select count(*) from t167t1 where c1>1 and c1<100;
explain options 'f' s;
execute s;
cqd HBASE_FILTER_PREDS reset;

log;
?section clnup
-- CLEANUP database
drop table t167t1 cascade;

