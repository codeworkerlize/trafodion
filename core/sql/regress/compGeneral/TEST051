-- Test: TEST051 (CompGeneral)
-- Functionality: Support for resource groups
--                Simulates support for multiple nodes with cqd NODE_ALLOCATIONS
--
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@

-- 'nodename:nodeid|units' 
cqd NODE_ALLOCATIONS 'edevxx:0|2 node1:1|3 node2:2|2 node3:3|6 node4:4|3 node5:5|5 node6:6|3 node7:7|8 node8:8|3 node9:9|1 node10:10|2 ';
cqd TENANT_OVERSUBSCRIBE_ERR_NODE_RATIO '60.1';

obey TEST051(clean_up);
log LOG051 clear;
obey TEST051(set_up);
obey TEST051(create_env);
obey TEST051(test_options);
obey TEST051(test_add_drop);
obey TEST051(test_node_add_drop);
log;
obey TEST051(clean_up);
exit;

?section clean_up
drop tenant t051_tenant1;
drop tenant t051_tenant2;
drop tenant t051_tenant3;
drop tenant t051_tenant4;
drop tenant t051_tenant5;
drop tenant t051_tenant6;
get tenants;

drop resource group t051_group1;
drop resource group t051_group2;
drop resource group t051_group3;
drop resource group t051_group4;
drop resource group t051_group5;
get resource groups;

?section set_up

-- Resource group details
prepare rgInfo from
select cast (resource_name as char (20) character set iso88591) as resource_name,
       resource_type
from "_TENANT_MD_".resources
order by resource_type, resource_name;

-- nodes assigned to resource groups
prepare rgNodes from
SELECT
       cast (resource_name as char(15) character set iso88591) as rgroupname,
       cast (usage_name as char(15) character set iso88591) as nodename
       FROM TRAFODION."_TENANT_MD_".resource_usage u
       WHERE usage_type = 'N' and resource_name like 'T051%'
       ORDER BY 1, 2;

-- unit allocations for each node
prepare unitAlloc from
SELECT
       cast (resource_name as char(15) character set iso88591) as nodename,
       sum(usage_value) as numunits
       FROM TRAFODION."_TENANT_MD_".resource_usage u
       WHERE usage_type = 'T'
         AND usage_value >= 0
      GROUP BY resource_name
      ORDER BY resource_name ;

-- Tenant details
prepare tenantInfo from
SELECT cast (a.auth_db_name as char(20) character set iso88591) as tenant_name,
       affinity,
       tenant_size,
       default_schema_uid,
       cluster_size
FROM TRAFODION."_TENANT_MD_".tenants t, TRAFODION."_MD_".auths a
WHERE t.tenant_id = a.auth_id and a.auth_db_name like 'T051%'
order by 1;

-- resource groups for tenant
prepare tenantRG from
select usage_type,
       cast (auth_db_name as char (15) character set iso88591) as tname,
       cast (resource_name as char (25) character set iso88591) as rname
from "_TENANT_MD_".tenants t, "_TENANT_MD_".tenant_usage u,
     "_TENANT_MD_".resources r, "_MD_".auths a
where t.tenant_id = u.tenant_id
  and u.usage_uid = r.resource_uid
  and t.tenant_id = a.auth_id
  and r.resource_name like 'T051%'
order by 2, 3
;

-- nodes for tenant
prepare tenantNodes from
select
       cast (resource_name as char (15) character set iso88591) as rname,
       cast (usage_name as char(15) character set iso88591) as uname,
       usage_type,
       usage_value as units
from "_TENANT_MD_".resource_usage
where usage_type = 'T' and usage_name like 'T051%'
order by 2, 1;

?section create_env
create resource group t051_group1 nodes ('node1');
create resource group t051_group2 nodes ('node2', 'node3');
create resource group t051_group3 nodes ('node4', 'node5', 'node6');
create resource group t051_group4 nodes ('node4', 'node5', 'node7');
create resource group t051_group5 nodes ('node4', 'node8');
execute rgInfo;
execute rgNodes;

showddl resource group t051_group1;
showddl resource group t051_group2;
showddl resource group t051_group3;
showddl resource group t051_group4;
showddl resource group t051_group5;

create tenant t051_tenant1 admin role tenant1_admin;
create tenant t051_tenant2 admin role tenant2_admin, resource groups (t051_group1, t051_group2, t051_group3, t051_group4, t051_group5);
create tenant t051_tenant3 admin role tenant3_admin, resource groups (t051_group2, t051_group3);
create tenant t051_tenant4 admin role tenant4_admin, resource groups (t051_group3, t051_group4);
create tenant t051_tenant5 admin role tenant5_admin, resource groups (t051_group4, t051_group5);
create tenant t051_tenant6 admin role tenant6_admin, resource groups (t051_group1);
execute tenantInfo;
execute tenantRG;
execute tenantNodes;

-- should match results from tenantNodes
get nodes for tenant t051_tenant1;
get nodes for tenant t051_tenant2;
get nodes for tenant t051_tenant3;
get nodes for tenant t051_tenant4;
get nodes for tenant t051_tenant5;
get nodes for tenant t051_tenant6;

?section test_options
-- ** tenant size
alter tenant t051_tenant1 tenant size 8;
alter tenant t051_tenant3 tenant size 20;
execute tenantNodes;
execute tenantInfo;
execute unitAlloc;

-- ** affinity and cluster size
alter tenant t051_tenant1 affinity 2;
alter tenant t051_tenant1 cluster size 1;
-- these error - invalid operations
alter tenant t051_tenant4 affinity 4;
alter tenant t051_tenant4 cluster size 5;
execute tenantInfo;

-- ** affinity, cluster size and tenant size
alter tenant t051_tenant1 affinity 4, cluster size 2, tenant size 10;
-- this errors
alter tenant t051_tenant2 affinity 4, cluster size 2, tenant size 10;
execute tenantInfo;

?section test_add_drop
-- fails
alter tenant t051_tenant1 add resource groups (t051_group2);

alter tenant t051_tenant3 add resource groups (t051_group5);
alter tenant t051_tenant6 add resource groups (t051_group2, t051_group4);
execute tenantNodes;
execute tenantRG;
get nodes for tenant t051_tenant1;
get nodes for tenant t051_tenant3;
get nodes for tenant t051_tenant6;

alter tenant t051_tenant3 balance;
alter tenant t051_tenant6 balance;
execute tenantNodes;
get nodes for tenant t051_tenant3;
get nodes for tenant t051_tenant6;

-- fails
alter tenant t051_tenant1 drop resource groups (t051_group2);

alter tenant t051_tenant3 drop resource groups (t051_group5);
alter tenant t051_tenant6 drop resource groups (t051_group2, t051_group4);
execute tenantNodes;
execute tenantRG;
get nodes for tenant t051_tenant3;
get nodes for tenant t051_tenant6;

?section test_node_add_drop
-- fails
alter resource group t051_group1 drop nodes ('node1');

-- drop node that does not affect any sizings
execute tenantNodes;
alter resource group t051_group5 drop nodes ('node4');
execute tenantNodes;
-- this displays a warning but can probably eliminate it
alter resource group t051_group5 add nodes ('node4');

-- drop node that reduces size for tenants 2 and 3
execute tenantNodes;
alter resource group t051_group2 drop nodes ('node3');
execute rgNodes;
-- node3 no longer shows up
execute tenantNodes;

-- add back-in: warning 1103 for tenants 2 and 3
alter resource group t051_group2 add nodes ('node3');
execute tenantNodes;
execute rgNodes;
alter tenant t051_tenant2 balance;
alter tenant t051_tenant3 balance;
execute tenantNodes;

-- drop node5 from groups 3 and 4
-- affects tenants 2 and 3
alter resource group t051_group3 drop nodes ('node5');
alter resource group t051_group4 drop nodes ('node5');
execute rgNodes;
get nodes for tenant t051_tenant2;
get nodes for tenant t051_tenant3;
execute tenantNodes;

alter resource group t051_group3 add nodes ('node5');
alter resource group t051_group4 add nodes ('node5');
alter tenant t051_tenant2 balance;
alter tenant t051_tenant3 balance;
get nodes for tenant t051_tenant2;
get nodes for tenant t051_tenant3;
execute rgNodes;
execute tenantNodes;

-- remove multiple nodes
-- affects tenants 2, 3, 4, and 5
-- node4 remains by node7 is gone
execute unitAlloc;
alter resource group t051_group4 drop nodes ('node4', 'node7');
execute tenantNodes;
execute unitAlloc;
execute rgNodes;

alter resource group t051_group3 drop nodes ('node4');
execute tenantNodes;
execute unitAlloc;
alter resource group t051_group5 drop nodes ('node4');
execute tenantNodes;
execute unitAlloc;

alter resource group t051_group4 add nodes ('node4', 'node7');
alter resource group t051_group3 add nodes ('node4');
alter resource group t051_group5 add nodes ('node4');
execute tenantNodes;
execute unitAlloc;
alter tenant t051_tenant2 balance;
alter tenant t051_tenant3 balance;
alter tenant t051_tenant4 balance;
alter tenant t051_tenant5 balance;
execute tenantNodes;
execute unitAlloc;
execute rgNodes;

-- session limit
alter tenant t051_tenant1 sessions 10;
alter tenant t051_tenant6 sessions 6;

