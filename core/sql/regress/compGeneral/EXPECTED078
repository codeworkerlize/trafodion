>>obey TEST078(create_table);
>>
>>create schema testpartition;

--- SQL operation complete.
>>set schema testpartition;

--- SQL operation complete.
>>
>>create table pt_range_test1(
+>  pid   numeric(10),
+>  pname varchar(30)
+>) partition by range(pid)(
+>  partition p1 values less than(1000),
+>  partition p2 values less than(2000)
+>);

--- SQL operation complete.
>>create index idx1 on pt_range_test1(pid) local;

--- SQL operation complete.
>>
>>create table pt_range_test2(
+>  pid   numeric(10),
+>  pname varchar(30)
+>) partition by range(pid)(
+>  partition p1 values less than(1000),
+>  partition p2 values less than(2000)
+>);

--- SQL operation complete.
>>create index idx2 on pt_range_test2(pid) local;

--- SQL operation complete.
>>
>>create table pt_range_test3(
+>  pid   numeric(10),
+>  pname varchar(30)
+>) partition by range(pid)(
+>  partition p1 values less than(1000),
+>  partition p2 values less than(2000),
+>  partition p3 values less than(MAXVALUE)
+>);

--- SQL operation complete.
>>
>>showddl pt_range_test1;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST1
  (
    PID                              NUMERIC(10, 0) DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  )
  PARTITION BY RANGE (PID)
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION P2 VALUES LESS THAN (2000)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX IDX1 ON TRAFODION.TESTPARTITION.PT_RANGE_TEST1
  (
    PID ASC
  )
 LOCAL
;

--- SQL operation complete.
>>showddl pt_range_test2;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST2
  (
    PID                              NUMERIC(10, 0) DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  )
  PARTITION BY RANGE (PID)
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION P2 VALUES LESS THAN (2000)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX IDX2 ON TRAFODION.TESTPARTITION.PT_RANGE_TEST2
  (
    PID ASC
  )
 LOCAL
;

--- SQL operation complete.
>>showddl pt_range_test3;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST3
  (
    PID                              NUMERIC(10, 0) DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  )
  PARTITION BY RANGE (PID)
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION P2 VALUES LESS THAN (2000)
  , PARTITION P3 VALUES LESS THAN (MAXVALUE)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>create table ta078 like  pt_range_test1;

--- SQL operation complete.
>>create table tb078 like  pt_range_test2;

--- SQL operation complete.
>>create table tc078 like  pt_range_test3;

--- SQL operation complete.
>>
>>showddl ta078;

CREATE TABLE TRAFODION.TESTPARTITION.TA078
  (
    PID                              NUMERIC(10, 0) DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  )
  PARTITION BY RANGE (PID)
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION P2 VALUES LESS THAN (2000)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX INDEX_IDX1_TA078 ON TRAFODION.TESTPARTITION.TA078
  (
    PID ASC
  )
 LOCAL
;

--- SQL operation complete.
>>showddl tb078;

CREATE TABLE TRAFODION.TESTPARTITION.TB078
  (
    PID                              NUMERIC(10, 0) DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  )
  PARTITION BY RANGE (PID)
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION P2 VALUES LESS THAN (2000)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX INDEX_IDX2_TB078 ON TRAFODION.TESTPARTITION.TB078
  (
    PID ASC
  )
 LOCAL
;

--- SQL operation complete.
>>showddl tc078;

CREATE TABLE TRAFODION.TESTPARTITION.TC078
  (
    PID                              NUMERIC(10, 0) DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  )
  PARTITION BY RANGE (PID)
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION P2 VALUES LESS THAN (2000)
  , PARTITION P3 VALUES LESS THAN (MAXVALUE)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>
>>create table pt_NOrange_test(
+>  pid   numeric(10),
+>  pname varchar(30)
+>);

--- SQL operation complete.
>>
>>create table if not exists pt_range_test_normal(c1 int);

--- SQL operation complete.
>>create table if not exists pt_range_partition (c1 int,c2 int,c3 int, c4 varchar(10),primary key(c1,c2,c3))
+>partition by range(c1,c2,c3)
+>(partition p1 values less than (10,10,10),
+>partition p2 values less than (20,20,20),
+>partition p3 values less than (30,30,30));

--- SQL operation complete.
>>create table if not exists partition1 (c1 int,c2 int,c3 int, c4 varchar(10),primary key(c1,c2));

--- SQL operation complete.
>>create table if not exists partition2 (c1 int,c2 int,c3 int, c4 varchar(10),primary key(c1,c2,c3));

--- SQL operation complete.
>>
>>-- =====================alter table add partition=====================
>>-- wrong keywords, should be syntax error
>>alter table pt_range_partition add partitionn p4 values less than (40,40);

*** ERROR[15001] A syntax error occurred at or before: 
alter table pt_range_partition add partitionn p4 values less than (40,40);
                                            ^ (45 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>alter table pt_range_test_none add partition p1 values less than(1);

*** ERROR[1127] The specified table TRAFODION.TESTPARTITION.PT_RANGE_TEST_NONE does not exist, is inaccessible or is not a base table. Please verify that the correct table was specified.

--- SQL operation failed with errors.
>>alter table pt_range_test_normal add partition p1 values less than (1);

*** ERROR[8304] Object TRAFODION.TESTPARTITION.PT_RANGE_TEST_NORMAL is not partition table.

--- SQL operation failed with errors.
>>alter table pt_range_partition add partition p4 values less than (40,40);

*** ERROR[1129] The partition boundary is invalid, Partition P4 boundary value count does not equal to partition column count.

--- SQL operation failed with errors.
>>alter table pt_range_partition add partition p4 values less than (40,40,40,40);

*** ERROR[1129] The partition boundary is invalid, Partition P4 boundary value count does not equal to partition column count.

--- SQL operation failed with errors.
>>alter table pt_range_partition add partition p4 values less than (40,40,'abc');

*** ERROR[8413] The string argument contains characters that cannot be converted. Source data(in hex): 616263

--- SQL operation failed with errors.
>>alter table pt_range_partition add partition p4 values less than ('40',40,40);

--- SQL operation complete.
>>alter table pt_range_partition add partition p4 values less than (40,40,40);

*** ERROR[8307] New partition name:P4 must differ from that of any other partition of the object.

--- SQL operation failed with errors.
>>alter table pt_range_partition add partition p5 values less than (50,50,50);

--- SQL operation complete.
>>alter table pt_range_partition add partition p6 values less than (50,50,50);

*** ERROR[1129] The partition boundary is invalid, Partition P5 has higher boundary.

--- SQL operation failed with errors.
>>alter table pt_range_partition add partition p5 values less than (50,50,60);

*** ERROR[8307] New partition name:P5 must differ from that of any other partition of the object.

--- SQL operation failed with errors.
>>alter table pt_range_partition add partition p6 values less than (50,50,60);

--- SQL operation complete.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P1 VALUES LESS THAN (10,10,10)
  , PARTITION P2 VALUES LESS THAN (20,20,20)
  , PARTITION P3 VALUES LESS THAN (30,30,30)
  , PARTITION P4 VALUES LESS THAN ('40',40,40)
  , PARTITION P5 VALUES LESS THAN (50,50,50)
  , PARTITION P6 VALUES LESS THAN (50,50,60)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>--alter table add mutiple partitions
>>create table part_test_alter1(c1 int, c2 int, c3 int)
+>  partition by range(c1, c2, c3) (
+>  partition p1 values less than (10, 10, 10),
+>  partition p2 values less than (20, 20, maxvalue));

--- SQL operation complete.
>>alter table part_test_alter1 add partition p3 values less than (30, 30, maxvalue),
+>  partition p4 values less than (40, maxvalue, maxvalue);

--- SQL operation complete.
>>
>>-- =====================alter table unmount partition=====================
>>alter table pt_range_test_none unmount partition p1;

*** ERROR[1127] The specified table TRAFODION.TESTPARTITION.PT_RANGE_TEST_NONE does not exist, is inaccessible or is not a base table. Please verify that the correct table was specified.

--- SQL operation failed with errors.
>>alter table pt_range_test_normal unmount partition p1;

*** ERROR[8304] Object PT_RANGE_TEST_NORMAL is not partition table.

--- SQL operation failed with errors.
>>alter table pt_range_partition unmount partition p1;

--- SQL operation complete.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P2 VALUES LESS THAN (20,20,20)
  , PARTITION P3 VALUES LESS THAN (30,30,30)
  , PARTITION P4 VALUES LESS THAN ('40',40,40)
  , PARTITION P5 VALUES LESS THAN (50,50,50)
  , PARTITION P6 VALUES LESS THAN (50,50,60)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>showddl part_pt_range_partition_p1_;

CREATE TABLE TRAFODION.TESTPARTITION.PART_PT_RANGE_PARTITION_P1_
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>alter table pt_range_partition unmount partition p2,p3,p4;

--- SQL operation complete.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P5 VALUES LESS THAN (50,50,50)
  , PARTITION P6 VALUES LESS THAN (50,50,60)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>alter table pt_range_partition unmount partition p5,p6;

*** ERROR[8306] Operation is not allowed, reason: No partition exists after unmount.

--- SQL operation failed with errors.
>>alter table pt_range_partition unmount partition for (1,1,1);

--- SQL operation complete.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P6 VALUES LESS THAN (50,50,60)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>alter table pt_range_partition unmount partition for (100,100,100);

*** ERROR[8306] Operation is not allowed, reason: The partition number is invalid or out-of-range.

--- SQL operation failed with errors.
>>alter table pt_range_partition unmount partition for (20,20,20);

*** ERROR[8306] Operation is not allowed, reason: Unmounting the only partition of an object is not allowed.

--- SQL operation failed with errors.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P6 VALUES LESS THAN (50,50,60)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>
>>-- =====================alter table mount partition=====================
>>alter table pt_range_test_none mount partition part_pt_range_partition_p1_ values less than(100,100,100);

*** ERROR[1127] The specified table TRAFODION.TESTPARTITION.PT_RANGE_TEST_NONE does not exist, is inaccessible or is not a base table. Please verify that the correct table was specified.

--- SQL operation failed with errors.
>>alter table pt_range_test_normal mount partition part_pt_range_partition_p1_ values less than(100,100,100);

*** ERROR[8304] Object TRAFODION.TESTPARTITION.PT_RANGE_TEST_NORMAL is not partition table.

--- SQL operation failed with errors.
>>alter table pt_range_partition mount partition part_pt_range_partition_p1_ values less than(100,100,100) into partition p1;

--- SQL operation complete.
>>alter table pt_range_partition unmount partition p1;

--- SQL operation complete.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P6 VALUES LESS THAN (50,50,60)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>alter table pt_range_partition mount partition partition1 values less than(100,100,100);

*** ERROR[8306] Operation is not allowed, reason: DDLs of two table must be the same.

--- SQL operation failed with errors.
>>alter table pt_range_partition mount partition partition2 values less than(1,1,1);

*** ERROR[1129] The partition boundary is invalid, Partition P6 has higher boundary.

--- SQL operation failed with errors.
>>insert into partition2 values(100,100,100,'a');

--- 1 row(s) inserted.
>>alter table pt_range_partition mount partition partition2 values less than(100,100,100);

*** ERROR[8306] Operation is not allowed, reason: please check if the data is in range.

--- SQL operation failed with errors.
>>alter table pt_range_partition mount partition partition2 values less than(100,100,100) without validation;

--- SQL operation complete.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P6 VALUES LESS THAN (50,50,60)
  , PARTITION PARTITION2 VALUES LESS THAN (100,100,100)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>alter table pt_range_partition unmount partition partition2;

--- SQL operation complete.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P6 VALUES LESS THAN (50,50,60)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>showddl partition2;

CREATE TABLE TRAFODION.TESTPARTITION.PARTITION2
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>insert into partition2 values(10,10,10,'b'),(11,11,11,'c');

--- 2 row(s) inserted.
>>select * from partition2;

C1           C2           C3           C4        
-----------  -----------  -----------  ----------

         10           10           10  b         
         11           11           11  c         
        100          100          100  a         

--- 3 row(s) selected.
>>alter table pt_range_partition mount partition partition2 values less than(200,200,200);

*** ERROR[8306] Operation is not allowed, reason: please check if the data is in range.

--- SQL operation failed with errors.
>>showddl pt_range_partition;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_PARTITION
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C3                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C4                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC, C2 ASC, C3 ASC)
  )
  PARTITION BY RANGE (C1, C2, C3)
  (
    PARTITION P6 VALUES LESS THAN (50,50,60)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>
>>-- =====================alter table drop partition=====================
>>create table pt_range_test4 (c1 int,c2 int,c3 int)
+>partition by range(c1)(
+>  partition p1 values less than (10),
+>  partition p2 values less than (20),
+>  partition p3 values less than (30),
+>  partition p4 values less than (40),
+>  partition p5 values less than (50),
+>  partition p6 values less than (60),
+>  partition p7 values less than (70),
+>  partition p8 values less than (80),
+>  partition pmax values less than (MAXVALUE)
+>);

--- SQL operation complete.
>>showddl pt_range_test4;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C1                               INT DEFAULT NULL
  , C2                               INT DEFAULT NULL
  , C3                               INT DEFAULT NULL
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION P4 VALUES LESS THAN (40)
  , PARTITION P5 VALUES LESS THAN (50)
  , PARTITION P6 VALUES LESS THAN (60)
  , PARTITION P7 VALUES LESS THAN (70)
  , PARTITION P8 VALUES LESS THAN (80)
  , PARTITION PMAX VALUES LESS THAN (MAXVALUE)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>alter table pt_range_test4 drop partition pmax;

--- SQL operation complete.
>>showddl pt_range_test4;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C1                               INT DEFAULT NULL
  , C2                               INT DEFAULT NULL
  , C3                               INT DEFAULT NULL
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION P4 VALUES LESS THAN (40)
  , PARTITION P5 VALUES LESS THAN (50)
  , PARTITION P6 VALUES LESS THAN (60)
  , PARTITION P7 VALUES LESS THAN (70)
  , PARTITION P8 VALUES LESS THAN (80)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>
>>-- ERROR: The specified partition <partName> does not exist
>>alter table pt_range_test4 drop partition p10;

*** ERROR[8306] Operation is not allowed, reason: The specified partition P10 does not exist.

--- SQL operation failed with errors.
>>alter table pt_range_test4 drop partition p1, p10;

*** ERROR[8306] Operation is not allowed, reason: The specified partition P10 does not exist.

--- SQL operation failed with errors.
>>alter table pt_range_test4 drop partition p10, for(5);

*** ERROR[8306] Operation is not allowed, reason: The specified partition P10 does not exist.

--- SQL operation failed with errors.
>>
>>-- ERROR: The partition number is invalid or out-of-range
>>alter table pt_range_test4 drop partition for(100);

*** ERROR[8306] Operation is not allowed, reason: The partition number is invalid or out-of-range.

--- SQL operation failed with errors.
>>alter table pt_range_test4 drop partition for(5), for(100);

*** ERROR[8306] Operation is not allowed, reason: The partition number is invalid or out-of-range.

--- SQL operation failed with errors.
>>alter table pt_range_test4 drop partition p1, for(100);

*** ERROR[8306] Operation is not allowed, reason: The partition number is invalid or out-of-range.

--- SQL operation failed with errors.
>>alter table pt_range_test4 drop partition for(100), p10;

*** ERROR[8306] Operation is not allowed, reason: The partition number is invalid or out-of-range.

--- SQL operation failed with errors.
>>
>>-- ERROR: The DDL request has duplicate references to partition name P1.
>>alter table pt_range_test4 drop partition p1,p1;

*** ERROR[8305] The DDL request has duplicate references to partition name P1.

--- SQL operation failed with errors.
>>alter table pt_range_test4 drop partition p1, for(5);

*** ERROR[8305] The DDL request has duplicate references to partition name P1.

--- SQL operation failed with errors.
>>-- ERROR: The DDL request has duplicate references to partition name .
>>alter table pt_range_test4 drop partition for(5), for(6);

*** ERROR[8305] The DDL request has duplicate references to partition name .

--- SQL operation failed with errors.
>>
>>-- ERROR: No partition exists after drop.
>>alter table pt_range_test4 drop partition p1, p2, p3, p4, p5, p6, p7, p8;

*** ERROR[8306] Operation is not allowed, reason: No partition exists after drop.

--- SQL operation failed with errors.
>>alter table pt_range_test4 drop partition for(5), for(15), for(25), for(35), for(45), for(55), for(65), for(75);

*** ERROR[8306] Operation is not allowed, reason: No partition exists after drop.

--- SQL operation failed with errors.
>>alter table pt_range_test4 drop partition p1, p2, p3, for(35), for(45), p6, p7, p8;

*** ERROR[8306] Operation is not allowed, reason: No partition exists after drop.

--- SQL operation failed with errors.
>>
>>create index idx_test4 on pt_range_test4(c3) partition (p5);

--- SQL operation complete.
>>showddl pt_range_test4;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C1                               INT DEFAULT NULL
  , C2                               INT DEFAULT NULL
  , C3                               INT DEFAULT NULL
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION P4 VALUES LESS THAN (40)
  , PARTITION P5 VALUES LESS THAN (50)
  , PARTITION P6 VALUES LESS THAN (60)
  , PARTITION P7 VALUES LESS THAN (70)
  , PARTITION P8 VALUES LESS THAN (80)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX IDX_TEST4 ON TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C3 ASC
  )
  PARTITION (P5)
;

--- SQL operation complete.
>>explain options 'f' select c3 from pt_range_test4;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

15   .    16   root                                                  8.00E+002
13   14   15   merge_union                                           8.00E+002
.    .    14   trafodion_scan                  PART_PT_RANGE_TEST4_  1.00E+002
11   12   13   merge_union                                           7.00E+002
.    .    12   trafodion_scan                  PART_PT_RANGE_TEST4_  1.00E+002
9    10   11   merge_union                                           6.00E+002
.    .    10   trafodion_scan                  PART_PT_RANGE_TEST4_  1.00E+002
7    8    9    merge_union                                           5.00E+002
.    .    8    trafodion_index_scan            IDX_TEST4             1.00E+002
5    6    7    merge_union                                           4.00E+002
.    .    6    trafodion_scan                  PART_PT_RANGE_TEST4_  1.00E+002
3    4    5    merge_union                                           3.00E+002
.    .    4    trafodion_scan                  PART_PT_RANGE_TEST4_  1.00E+002
1    2    3    merge_union                                           2.00E+002
.    .    2    trafodion_scan                  PART_PT_RANGE_TEST4_  1.00E+002
.    .    1    trafodion_scan                  PART_PT_RANGE_TEST4_  1.00E+002

--- SQL operation complete.
>>alter table pt_range_test4 drop partition p5,p7;

--- SQL operation complete.
>>showddl pt_range_test4;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C1                               INT DEFAULT NULL
  , C2                               INT DEFAULT NULL
  , C3                               INT DEFAULT NULL
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION P4 VALUES LESS THAN (40)
  , PARTITION P6 VALUES LESS THAN (60)
  , PARTITION P8 VALUES LESS THAN (80)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>
>>create index idx_test4 on pt_range_test4(c3) local;

--- SQL operation complete.
>>showddl pt_range_test4;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C1                               INT DEFAULT NULL
  , C2                               INT DEFAULT NULL
  , C3                               INT DEFAULT NULL
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION P4 VALUES LESS THAN (40)
  , PARTITION P6 VALUES LESS THAN (60)
  , PARTITION P8 VALUES LESS THAN (80)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX IDX_TEST4 ON TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C3 ASC
  )
 LOCAL
;

--- SQL operation complete.
>>explain options 'f' select c3 from pt_range_test4;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

11   .    12   root                                                  6.00E+002
9    10   11   merge_union                                           6.00E+002
.    .    10   trafodion_index_scan            INDEX_IDX_TEST4_PAR   1.00E+002
7    8    9    merge_union                                           5.00E+002
.    .    8    trafodion_index_scan            INDEX_IDX_TEST4_PAR   1.00E+002
5    6    7    merge_union                                           4.00E+002
.    .    6    trafodion_index_scan            INDEX_IDX_TEST4_PAR   1.00E+002
3    4    5    merge_union                                           3.00E+002
.    .    4    trafodion_index_scan            INDEX_IDX_TEST4_PAR   1.00E+002
1    2    3    merge_union                                           2.00E+002
.    .    2    trafodion_index_scan            INDEX_IDX_TEST4_PAR   1.00E+002
.    .    1    trafodion_index_scan            INDEX_IDX_TEST4_PAR   1.00E+002

--- SQL operation complete.
>>
>>alter table pt_range_test4 drop partition for(15), for(35);

--- SQL operation complete.
>>showddl pt_range_test4;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C1                               INT DEFAULT NULL
  , C2                               INT DEFAULT NULL
  , C3                               INT DEFAULT NULL
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION P6 VALUES LESS THAN (60)
  , PARTITION P8 VALUES LESS THAN (80)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX IDX_TEST4 ON TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C3 ASC
  )
 LOCAL
;

--- SQL operation complete.
>>alter table pt_range_test4 drop partition p3, for(55), p8;

--- SQL operation complete.
>>showddl pt_range_test4;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C1                               INT DEFAULT NULL
  , C2                               INT DEFAULT NULL
  , C3                               INT DEFAULT NULL
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX IDX_TEST4 ON TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C3 ASC
  )
 LOCAL
;

--- SQL operation complete.
>>
>>-- ERROR: Dropping the only partition of an object is not allowed.
>>alter table pt_range_test4 drop partition p1;

*** ERROR[8306] Operation is not allowed, reason: Dropping the only partition of an object is not allowed.

--- SQL operation failed with errors.
>>showddl pt_range_test4;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C1                               INT DEFAULT NULL
  , C2                               INT DEFAULT NULL
  , C3                               INT DEFAULT NULL
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

CREATE INDEX IDX_TEST4 ON TRAFODION.TESTPARTITION.PT_RANGE_TEST4
  (
    C3 ASC
  )
 LOCAL
;

--- SQL operation complete.
>>
>>-- ========================== TRUNCATE =================================
>>create table if not exists pt1(c1 int, c2 int, c3 varchar(10), primary key(c1))
+>partition by range(c1)
+>(
+>partition p1 values less than (10),
+>partition p2 values less than (20),
+>partition p3 values less than (30)
+>);

--- SQL operation complete.
>>insert into pt1 partition (p1) values(1,1,'hahaha');

--- 1 row(s) inserted.
>>insert into pt1 partition (p2) values(11,11,'hehehe');

--- 1 row(s) inserted.
>>insert into pt1 partition (p3) values(21,21,'heiheihei');

--- 1 row(s) inserted.
>>select * from pt1;

C1           C2           C3
-----------  -----------  ----------

         21           21  heiheihei
         11           11  hehehe
          1            1  hahaha

--- 3 row(s) selected.
>>alter table pt1 truncate partition p1;

--- SQL operation complete.
>>alter table pt1 truncate partition for(11);

--- SQL operation complete.
>>alter table pt1 truncate partition p3;

--- SQL operation complete.
>>select * from pt1;

--- 0 row(s) selected.
>>insert into pt1 partition (p1) values(1,1,'hahaha');

--- 1 row(s) inserted.
>>insert into pt1 partition (p2) values(11,11,'hehehe');

--- 1 row(s) inserted.
>>insert into pt1 partition (p3) values(21,21,'heiheihei');

--- 1 row(s) inserted.
>>truncate pt1;

--- SQL operation complete.
>>select * from pt1;

--- 0 row(s) selected.
>>create table if not exists pt2(c1 int, c2 numeric(10,2), c3 varchar(10), c4 date, primary key(c1)) attribute stored desc
+>partition by range(c1)
+>(
+>partition p1 values less than (10),
+>partition p2 values less than (20),
+>partition p3 values less than (30),
+>partition pmax values less than (maxvalue)
+>);

--- SQL operation complete.
>>insert into pt2 partition(p1) values(4, 10.5, 'pt1', '2021-04-23');

--- 1 row(s) inserted.
>>insert into pt2 partition(p2) values(14, 10.5, 'pt2', '2021-04-23');

--- 1 row(s) inserted.
>>insert into pt2 partition(p3) values(24, 10.5, 'pt3', '2021-04-23');

--- 1 row(s) inserted.
>>insert into pt2 partition(pmax) values(200, 10.5, 'maxvalue', '2021-04-23');

--- 1 row(s) inserted.
>>select * from pt2;

C1           C2                     C3          C4
-----------  ---------------------  ----------  ----------

        200                   10.5  maxvalue    2021-04-23
         24                   10.5  pt3         2021-04-23
         14                   10.5  pt2         2021-04-23
          4                   10.5  pt1         2021-04-23

--- 4 row(s) selected.
>>alter table pt2 truncate partition pmax;

--- SQL operation complete.
>>select * from pt2;

C1           C2                     C3          C4
-----------  ---------------------  ----------  ----------

         24                   10.5  pt3         2021-04-23
         14                   10.5  pt2         2021-04-23
          4                   10.5  pt1         2021-04-23

--- 3 row(s) selected.
>>truncate pt2;

--- SQL operation complete.
>>select * from pt2;

--- 0 row(s) selected.
>>insert into pt2 partition(p1) values(4, 10.5, 'pt1', '2021-04-23');

--- 1 row(s) inserted.
>>insert into pt2 partition(p2) values(14, 10.5, 'pt2', '2021-04-23');

--- 1 row(s) inserted.
>>insert into pt2 partition(p3) values(24, 10.5, 'pt3', '2021-04-23');

--- 1 row(s) inserted.
>>insert into pt2 partition(pmax) values(200, 10.5, 'maxvalue', '2021-04-23');

--- 1 row(s) inserted.
>>alter table pt2 truncate partitions p1,p2;

--- SQL operation complete.
>>alter table pt2 truncate partition for(24),pmax;

--- SQL operation complete.
>>select * from pt2;

--- 0 row(s) selected.
>>
>>-- ========================== RENAME ===================================
>>showddl pt1;

CREATE TABLE TRAFODION.TESTPARTITION.PT1
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT DEFAULT NULL
  , C3                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC)
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>--three error test case should report error
>>alter table pt1 rename partition p1 to p1;

*** ERROR[8307] New partition name:P1 must differ from the old partition name:.

--- SQL operation failed with errors.
>>alter table pt1 rename partition p1 to p2;

*** ERROR[8307] New partition name:P2 must differ from that of any other partition of the object.

--- SQL operation failed with errors.
>>alter table pt1 rename partition p4 to p4_temp;

*** ERROR[2301] Specified partition P4 does not exist.

--- SQL operation failed with errors.
>>
>>alter table pt1 rename partition p1 to p1_temp;

--- SQL operation complete.
>>alter table pt1 rename partition for(11) to p2_temp;

--- SQL operation complete.
>>alter table pt1 rename partition for(21) to p3_temp;

--- SQL operation complete.
>>showddl pt1;

CREATE TABLE TRAFODION.TESTPARTITION.PT1
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               INT DEFAULT NULL
  , C3                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY (C1 ASC)
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1_TEMP VALUES LESS THAN (10)
  , PARTITION P2_TEMP VALUES LESS THAN (20)
  , PARTITION P3_TEMP VALUES LESS THAN (30)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>
>>showddl pt2;

CREATE TABLE TRAFODION.TESTPARTITION.PT2
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               NUMERIC(10, 2) DEFAULT NULL
  , C3                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , C4                               DATE DEFAULT NULL
  , PRIMARY KEY (C1 ASC)
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION PMAX VALUES LESS THAN (MAXVALUE)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>alter table pt2 rename partition pmax to pmax_temp;

--- SQL operation complete.
>>showddl pt2;

CREATE TABLE TRAFODION.TESTPARTITION.PT2
  (
    C1                               INT NO DEFAULT NOT NULL NOT DROPPABLE
  , C2                               NUMERIC(10, 2) DEFAULT NULL
  , C3                               VARCHAR(10) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , C4                               DATE DEFAULT NULL
  , PRIMARY KEY (C1 ASC)
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION PMAX_TEMP VALUES LESS THAN (MAXVALUE)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>
>>alter table pt2 rename to pt2_new;

--- SQL operation complete.
>>showddl pt2_new;

CREATE TABLE TRAFODION.TESTPARTITION.PT2_NEW
 (
 C1 INT NO DEFAULT NOT NULL NOT DROPPABLE
 , C2 NUMERIC(10, 2) DEFAULT NULL
 , C3 VARCHAR(10) CHARACTER SET ISO88591 COLLATE
 DEFAULT DEFAULT NULL
 , C4 DATE DEFAULT NULL
 , PRIMARY KEY (C1 ASC)
 )
 PARTITION BY RANGE (C1)
 (
 PARTITION P1 VALUES LESS THAN (10)
 , PARTITION P2 VALUES LESS THAN (20)
 , PARTITION P3 VALUES LESS THAN (30)
 , PARTITION PMAX_TEMP VALUES LESS THAN (MAXVALUE)
 )
 ATTRIBUTES ALIGNED FORMAT
;

--- SQL operation complete.
>>
>>--============================add/drop column===============================
>>create table pt3 (c1 int ,c2 int)
+>partition by range(c1)
+>(
+>partition p1 values less than (10),
+>partition p2 values less than (20)
+>);

--- SQL operation complete.
>>alter table pt3 add column c3 int;

--- SQL operation complete.
>>showddl pt3;

CREATE TABLE TRAFODION.SCH.PT3
  (
    C1                               INT DEFAULT NULL NOT SERIALIZED
  , C2                               INT DEFAULT NULL NOT SERIALIZED
  , C3                               INT DEFAULT NULL NOT SERIALIZED
      /*added_col*/
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  )
 ATTRIBUTES ALIGNED FORMAT
;

-- GRANT SELECT, INSERT, DELETE, UPDATE, REFERENCES, ALTER, DROP ON TRAFODION.SCH.PT3 TO DB__ROOT WITH GRANT OPTION;

--- SQL operation complete.
>>alter table pt3 drop column c3;

--- SQL operation complete.
>>showddl pt3;

CREATE TABLE TRAFODION.SCH.PT3
  (
    C1                               INT DEFAULT NULL NOT SERIALIZED
  , C2                               INT DEFAULT NULL NOT SERIALIZED
  )
  PARTITION BY RANGE (C1)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  )
 ATTRIBUTES ALIGNED FORMAT
;

-- GRANT SELECT, INSERT, DELETE, UPDATE, REFERENCES, ALTER, DROP ON TRAFODION.SCH.PT3 TO DB__ROOT WITH GRANT OPTION;

--- SQL operation complete.
>>
>>obey TEST078(test_DML);
>>
>>-- ========================== INSERT ===================================
>>
>>insert into pt_range_test1(pid, pname) values(1, 'aaa');

--- 1 row(s) inserted.
>>insert into pt_range_test1 partition(p1) values(1, 'aaa');

--- 1 row(s) inserted.
>>insert into pt_range_test1 partition for(10) values(1, 'aaa');

--- 1 row(s) inserted.
>>insert into pt_range_test1 partition for(10) select * from pt_range_test2;

--- 0 row(s) inserted.
>>insert into pt_range_test1 partition for(10) select * from pt_range_test2 partition(p1);

--- 0 row(s) inserted.
>>insert into pt_range_test1 partition for(10) select * from pt_range_test2 partition(p2);

--- 0 row(s) inserted.
>>insert into pt_range_test1 partition for(10) select * from pt_range_test2 partition for (1000);

--- 0 row(s) inserted.
>>insert into pt_range_test1 partition for(1050)  select * from pt_range_test2 partition(p1);

--- 0 row(s) inserted.
>>
>>
>>-- negetive test, all of follow SQL shoule be error.
>>insert into pt_range_test1 partition values(1, 'aaa');

*** ERROR[15001] A syntax error occurred at or before: 
insert into pt_range_test1 partition values(1, 'aaa');
                                          ^ (43 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>insert into pt_range_test1 partition(p2) values(1, 'aaa');

*** ERROR[4403] insert partition key is outside specified partition

--- 0 row(s) inserted.
>>insert into pt_range_test1 partition(p1) values(10000, 'aaa');

*** ERROR[4403] insert partition key is outside specified partition

--- 0 row(s) inserted.
>>insert into pt_range_test1 partition for(1) t values(10000, 'aaa');

*** ERROR[15001] A syntax error occurred at or before: 
insert into pt_range_test1 partition for(1) t values(10000, 'aaa');
                                                   ^ (52 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>insert into pt_range_test1 partition for(10000) t values(1, 'aaa');

*** ERROR[15001] A syntax error occurred at or before: 
insert into pt_range_test1 partition for(10000) t values(1, 'aaa');
                                                       ^ (56 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>insert into pt_range_test1 partition for(10) select * from pt_range_test2 partition;

*** ERROR[15001] A syntax error occurred at or before: 
insert into pt_range_test1 partition for(10) select * from pt_range_test2 parti
tion;
    ^ (84 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>insert into pt_range_test1 partition for(10) t select * from pt_range_test2 partition for (10000);

*** ERROR[15001] A syntax error occurred at or before: 
insert into pt_range_test1 partition for(10) t select * from pt_range_test2 par
                                                    ^ (53 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>insert into pt_range_test1 partition(p1) select element, element from udf(series(1,2002));

*** ERROR[4403] insert partition key is outside specified partition

--- 0 row(s) inserted.
>>insert into pt_range_test1 select element, element from udf(series(1,2002));

*** ERROR[4403] insert partition key is outside specified partition

--- 0 row(s) inserted.
>>create table testc as select * from pt_range_test1 partition(p3);

*** ERROR[2301] Specified partition P3 does not exist.

*** ERROR[8822] The statement was not prepared.

>>
>>-- ========================== UPDATE ===================================
>>create table pt_range_test5(
+>  pid numeric(10),
+>  pname varchar(30),
+>  primary key(pid)
+>) partition by range(pid)(
+>  partition p1 values less than(1000),
+>  partition p2 values less than(2000)
+>);

--- SQL operation complete.
>>
>>update pt_range_test1 set pid = 10;

--- 3 row(s) updated.
>>update pt_range_test1 partition(p1) set pid = 10;

--- 3 row(s) updated.
>>update pt_range_test1 partition(p1) t set pid = 10;

--- 3 row(s) updated.
>>update pt_range_test1 partition for (1) t set pid = 10;

--- 3 row(s) updated.
>>update pt_range_test1 partition for (1001) t set pid = 10;

--- 0 row(s) updated.
>>insert into pt_range_test1 values(1001, 'aaa');

--- 1 row(s) inserted.
>>update pt_range_test1 set pid=1010 where pid=1001;

--- 1 row(s) updated.
>>update pt_range_test1 set pid=(select 1001 from dual) where pid=1010;

--- 1 row(s) updated.
>>update pt_range_test1 set pid=3 where pid=10 or pid = 1001;

*** ERROR[8640] updating partition key column would cause a partition change.

--- 0 row(s) updated.
>>
>>insert into pt_range_test5 values(1, 'hello');

--- 1 row(s) inserted.
>>update pt_range_test5 set pid=2 where pid=1;

--- 1 row(s) updated.
>>update pt_range_test5 set pid=(select 1 from dual) where pid=2;

--- 1 row(s) updated.
>>update pt_range_test5 set pid=1001 where pid=1;

*** ERROR[8640] updating partition key column would cause a partition change.

--- 0 row(s) updated.
>>insert into pt_range_test5 values(1001, 'hello1');

--- 1 row(s) inserted.
>>update pt_range_test5 set pid=3 where pid=1 or pid = 1001;

*** ERROR[8640] updating partition key column would cause a partition change.

--- 0 row(s) updated.
>>update pt_range_test5 set pid=pid+3;

--- 2 row(s) updated.
>>
>>insert into pt_range_test2 values (1, 'hello'),(2, 'hello'),(3, 'hello'),(1001, 'hello');

--- 4 row(s) inserted.
>>select * from (update pt_range_test2 partition (p1) set pname = 'try' return "NEW".pname) t(pname);

PNAME                         
------------------------------

try                           
try                           
try                           

--- 3 row(s) selected.
>>select * from (update pt_range_test2 set pname='try_try' where pid=1 return "OLD".pname) t(pname);

PNAME                         
------------------------------

try                           

--- 1 row(s) selected.
>>select * from (update pt_range_test2 set pname='try_try' where pid=2 return "NEW".pname) t(pname);

PNAME                         
------------------------------

try_try                       

--- 1 row(s) selected.
>>select * from (update pt_range_test2 set pname = 'try_try_try' return "OLD".pname) t(pname);

PNAME                         
------------------------------

hello                         
try_try                       
try_try                       
try                           

--- 4 row(s) selected.
>>
>>-- negetive test, all of follow SQL shoule be error.
>>update pt_range_test1 partition set pid = 10;

*** ERROR[15001] A syntax error occurred at or before: 
update pt_range_test1 partition set pid = 10;
                                  ^ (35 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>update pt_range_test1 partition(p1, p2) set pid = 10;

*** ERROR[15001] A syntax error occurred at or before: 
update pt_range_test1 partition(p1, p2) set pid = 10;
                                  ^ (35 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>update pt_range_test1 partition(p1) t set pid = 10000;

*** ERROR[4403] insert partition key is outside specified partition

--- 0 row(s) updated.
>>update pt_range_test1 partition for (1, 2) t set pid = 10;

*** ERROR[2300] Number of expressions is not equal to the number of partitioning columns.

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>update pt_range_test1 partition for (10000) t set pid = 10;

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>
>>
>>-- ========================== SELECT ===================================
>>
>>select * from pt_range_test1;

PID                   PNAME                         
--------------------  ------------------------------

                1001  aaa                           
                  10  aaa                           
                  10  aaa                           
                  10  aaa                           

--- 4 row(s) selected.
>>select * from pt_range_test1 partition(p1);

PID                   PNAME                         
--------------------  ------------------------------

                  10  aaa                           
                  10  aaa                           
                  10  aaa                           

--- 3 row(s) selected.
>>select * from pt_range_test1 partition(p1) t;

PID                   PNAME                         
--------------------  ------------------------------

                  10  aaa                           
                  10  aaa                           
                  10  aaa                           

--- 3 row(s) selected.
>>select * from pt_range_test1 partition for (100);

PID                   PNAME                         
--------------------  ------------------------------

                  10  aaa                           
                  10  aaa                           
                  10  aaa                           

--- 3 row(s) selected.
>>select * from pt_range_test1 partition for (1000);

PID                   PNAME                         
--------------------  ------------------------------

                1001  aaa                           

--- 1 row(s) selected.
>>select * from pt_range_test1 partition(p1) where pid > 1001;

--- 0 row(s) selected.
>>select * from pt_range_test1 partition(p1) t1 join pt_range_test2 t2 on (t1.pid = t2.pid);

*** ERROR[4002] Column T1.PID is not found.  Table T1 not exposed.  Tables in scope: TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST1_P1_, TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST2_P1_.  Default schema: TRAFODION.TESTPARTITION.

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition(p1) t1 join pt_range_test2 partition(p1) t2 on (t1.pid = t2.pid);

*** ERROR[4002] Column T1.PID is not found.  Table T1 not exposed.  Tables in scope: TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST1_P1_, TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST2_P1_.  Default schema: TRAFODION.TESTPARTITION.

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition(p1) t1 join pt_range_test2 partition for (100) t2 on (t1.pid = t2.pid);

*** ERROR[4002] Column T1.PID is not found.  Table T1 not exposed.  Tables in scope: TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST1_P1_, TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST2_P1_.  Default schema: TRAFODION.TESTPARTITION.

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition for (10) t1 join pt_range_test2 partition for (100) t2 on (t1.pid = t2.pid);

*** ERROR[4002] Column T1.PID is not found.  Table T1 not exposed.  Tables in scope: TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST1_P1_, TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST2_P1_.  Default schema: TRAFODION.TESTPARTITION.

*** ERROR[8822] The statement was not prepared.

>>create table testc as select * from pt_range_test1 partition(p1);

--- 3 row(s) inserted.
>>
>>-- negetive test, all of follow SQL shoule be error.
>>select * from pt_range_test1 partition;

*** ERROR[15001] A syntax error occurred at or before: 
select * from pt_range_test1 partition;
                                      ^ (39 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition t;

*** ERROR[15001] A syntax error occurred at or before: 
select * from pt_range_test1 partition t;
                                       ^ (40 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition for (2000) t;

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition for ('asd');

*** ERROR[2304] Unable to resolve FOR VALUES clause to a partition number.

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition(p3);

*** ERROR[2301] Specified partition P3 does not exist.

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 t partition(p1);

*** ERROR[15001] A syntax error occurred at or before: 
select * from pt_range_test1 t partition(p1);
                                       ^ (40 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition(p1, p2) t;

*** ERROR[15001] A syntax error occurred at or before: 
select * from pt_range_test1 partition(p1, p2) t;
                                         ^ (42 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition for (400, 1000);

*** ERROR[2300] Number of expressions is not equal to the number of partitioning columns.

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>select * from pt_range_test1 partition(p1) t1 join pt_range_test2 partition for (10, 1000) t2 on (t1.pid = t2.pid);

*** ERROR[2300] Number of expressions is not equal to the number of partitioning columns.

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>create table testc as select * from pt_range_test1 partition(p3);

*** ERROR[2301] Specified partition P3 does not exist.

*** ERROR[8822] The statement was not prepared.

>>
>>-- for(null) test.
>>create table t1 (c1 int ,c2 int ,c3 int ,c4 int )
+>partition by range(c1,c2,c3)
+>(
+>partition p1 values less than (1,1,1),
+>partition p2 values less than (11,11,11),
+>partition p3 values less than (21,21,21)
+>);

--- SQL operation complete.
>>select * from t1 partition for(null,1,1);

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>select * from t1 partition for(1,null,null);

--- 0 row(s) selected.
>>select * from t1 partition for(null,null,null);

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>drop table t1;

--- SQL operation complete.
>>create table pt_null2 (c1 int ,c2 int ,c3 int ,c4 int )
+>partition by range(c1,c2)
+>(
+>partition p1 values less than (10,10),
+>partition p2 values less than (20,20),
+>partition pmax values less than (maxvalue,maxvalue)
+>);

--- SQL operation complete.
>>insert into pt_null2 values(1,null,null,null),(11,null,null,null),(null,null,null,null);

--- 3 row(s) inserted.
>>select * from pt_null2 partition for(1,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

          1            ?            ?            ?

--- 1 row(s) selected.
>>select * from pt_null2 partition for(11,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         11            ?            ?            ?

--- 1 row(s) selected.
>>select * from pt_null2 partition for(null,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

          ?            ?            ?            ?

--- 1 row(s) selected.
>>drop table pt_null2;

--- SQL operation complete.
>>create table s2 (c1 int ,c2 int ,c3 int ,c4 int )
+>partition by range(c1,c2,c3)
+>(
+>partition p1 values less than (1,1,1),
+>partition p2 values less than (11,11,11),
+>partition p3 values less than (21,21,21),
+>partition pmax values less than (31,maxvalue,maxvalue)
+>);

--- SQL operation complete.
>>insert into s2 values(30,30,30,30);

--- 1 row(s) inserted.
>>select * from s2 partition for(30,30,30);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         30           30           30           30

--- 1 row(s) selected.
>>select * from s2 partition for(31,31,31);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         30           30           30           30

--- 1 row(s) selected.
>>select * from s2 partition for(31,31,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         30           30           30           30

--- 1 row(s) selected.
>>select * from s2 partition for(31,null,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         30           30           30           30

--- 1 row(s) selected.
>>select * from s2 partition for(null,null,null);

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>drop table s2;

--- SQL operation complete.
>>create table s4 (c1 int ,c2 int ,c3 int ,c4 int )
+>partition by range(c1,c2,c3)
+>(
+>partition p1 values less than (1,1,1),
+>partition p2 values less than (11,maxvalue,11),
+>partition p3 values less than (21,21,21),
+>partition pmax values less than (31,maxvalue,maxvalue)
+>);

--- SQL operation complete.
>>insert into s4 values(0,1,1,1),(1,1,1,1),(11,11,11,11),(20,20,20,20),(21,21,21,21);

--- 5 row(s) inserted.
>>select * from s4 partition for(1,null,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

          1            1            1            1
         11           11           11           11

--- 2 row(s) selected.
>>select * from s4 partition for(11,null,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

          1            1            1            1
         11           11           11           11

--- 2 row(s) selected.
>>select * from s4 partition for(11,null,12);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

          1            1            1            1
         11           11           11           11

--- 2 row(s) selected.
>>select * from s4 partition for(11,11,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

          1            1            1            1
         11           11           11           11

--- 2 row(s) selected.
>>select * from s4 partition for(20,20,20);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         20           20           20           20

--- 1 row(s) selected.
>>select * from s4 partition for(21,null,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         21           21           21           21

--- 1 row(s) selected.
>>select * from s4 partition for(21,21,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         21           21           21           21

--- 1 row(s) selected.
>>select * from s4 partition for(31,null,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         21           21           21           21

--- 1 row(s) selected.
>>select * from s4 partition for(31,31,null);

C1           C2           C3           C4         
-----------  -----------  -----------  -----------

         21           21           21           21

--- 1 row(s) selected.
>>drop table s4;

--- SQL operation complete.
>>
>> -- =====================UPDATE STATISTICS =============================
>>update statistics for table pt_range_test1 partition(p1) on every column;

--- SQL operation complete.
>>update statistics for table pt_range_test1 partition(p1) on every column if not exists;

*** ERROR[9264] UPDATE STATISTICS: Specified option IF NOT EXISTS is not supported for PARTITION TABLE.

--- SQL operation failed with errors.
>>update statistics for table pt_range_test2 like pt_range_test1;

*** ERROR[9255] UPDATE STATISTICS: No histogram for TRAFODION.TESTPARTITION.PT_RANGE_TEST1.

--- SQL operation failed with errors.
>>update statistics for table pt_range_test1 partition for(10) on every column;

--- SQL operation complete.
>>showstats for table pt_range_test1 partition(p1) on existing column detail;

Detailed Histogram data for Partition TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST1_P1_
Partition ID: 3884045420490099660

Hist ID:    1271038822
Column(s):  PNAME
Total Rows: 3
Total UEC:  1
Low Value:  ('aaa')
High Value: ('aaa')
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 ('aaa')
     1           3           1 ('aaa')


Hist ID:    1271038827
Column(s):  PID
Total Rows: 3
Total UEC:  1
Low Value:  (10)
High Value: (10)
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (10)
     1           3           1 (10)


Hist ID:    1271038832
Column(s):  SYSKEY
Total Rows: 3
Total UEC:  3
Low Value:  (3757381681223787416)
High Value: (3757381681223874348)
Intervals:  3

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (3757381681223787416)
     1           1           1 (3757381681223787416)
     2           1           1 (3757381681223859795)
     3           1           1 (3757381681223874348)


Hist ID:    1271038837
Column(s):  PID, SYSKEY
Total Rows: 3
Total UEC:  3
Low Value:  (10,3757381681223787416)
High Value: (10,3757381681223874348)
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (10,3757381681223787416)
     1           3           3 (10,3757381681223874348)


--- SQL operation complete.
>>update statistics for table pt_range_test1 partition(p1) clear;

--- SQL operation complete.
>>update statistics for table pt_range_test1  on every column;

--- SQL operation complete.
>>showstats for table pt_range_test1 on existing column detail;

Detailed Histogram data for Table TRAFODION.TESTPARTITION.PT_RANGE_TEST1
Table ID:  3757381680965304317
Row Count: 4

Detailed Histogram data for Partition TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST1_P1_
Partition ID: 3884045420490099660

Hist ID:    1295278335
Column(s):  PNAME
Total Rows: 3
Total UEC:  1
Low Value:  ('aaa')
High Value: ('aaa')
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 ('aaa')
     1           3           1 ('aaa')


Hist ID:    1295278340
Column(s):  PID
Total Rows: 3
Total UEC:  1
Low Value:  (10)
High Value: (10)
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (10)
     1           3           1 (10)


Hist ID:    1295278345
Column(s):  SYSKEY
Total Rows: 3
Total UEC:  3
Low Value:  (3757381681223787416)
High Value: (3757381681223874348)
Intervals:  3

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (3757381681223787416)
     1           1           1 (3757381681223787416)
     2           1           1 (3757381681223859795)
     3           1           1 (3757381681223874348)


Hist ID:    1295278350
Column(s):  PID, SYSKEY
Total Rows: 3
Total UEC:  3
Low Value:  (10,3757381681223787416)
High Value: (10,3757381681223874348)
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (10,3757381681223787416)
     1           3           3 (10,3757381681223874348)


Detailed Histogram data for Partition TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST1_P2_
Partition ID: 3884045420490100021

Hist ID:    1300915058
Column(s):  PNAME
Total Rows: 1
Total UEC:  1
Low Value:  ('aaa')
High Value: ('aaa')
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 ('aaa')
     1           1           1 ('aaa')


Hist ID:    1300915063
Column(s):  PID
Total Rows: 1
Total UEC:  1
Low Value:  (1001)
High Value: (1001)
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (1001)
     1           1           1 (1001)


Hist ID:    1300915068
Column(s):  SYSKEY
Total Rows: 1
Total UEC:  1
Low Value:  (@syskey@)
High Value: (@syskey@)
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (@syskey@)
     1           1           1 (@syskey@)


Hist ID:    1300915073
Column(s):  PID, SYSKEY
Total Rows: 1
Total UEC:  1
Low Value:  (1001,@syskey@)
High Value: (1001,@syskey@)
Intervals:  1

Number    Rowcount         UEC Boundary
====== =========== =========== ======================================
     0           0           0 (1001,@syskey@)
     1           1           1 (1001,@syskey@)


--- SQL operation complete.
>>update statistics for table pt_range_test1 create sample random 100 percent;

--- SQL operation complete.
>>update statistics for table pt_range_test1 remove sample;

--- SQL operation complete.
>>update statistics for table pt_range_test1 partition(p1) create sample random 100 percent;

--- SQL operation complete.
>>update statistics for table pt_range_test1 partition(p1) remove sample;

--- SQL operation complete.
>>update statistics for table pt_range_test1 clear;

--- SQL operation complete.
>>
>>-- ========================== DELETE ===================================
>>
>>delete from pt_range_test1;

--- 4 row(s) deleted.
>>delete from pt_range_test1 partition (p1);

--- 0 row(s) deleted.
>>delete from pt_range_test1 partition (p1) t;

--- 0 row(s) deleted.
>>delete from pt_range_test1 partition (p1) t where pid = 10;

--- 0 row(s) deleted.
>>delete from pt_range_test1 partition (p1) t where pid = 100000;

--- 0 row(s) deleted.
>>delete from pt_range_test1 partition for (1);

--- 0 row(s) deleted.
>>delete from pt_range_test1 partition for (1) t;

--- 0 row(s) deleted.
>>delete from pt_range_test1 partition for (1) t where pid = 10;

--- 0 row(s) deleted.
>>
>>select * from (delete from pt_range_test2 where pid = 1) x;

PID                   PNAME                         
--------------------  ------------------------------

                   1  try_try_try                   

--- 1 row(s) selected.
>>select * from (delete from pt_range_test2 partition (p1)) x;

PID                   PNAME                         
--------------------  ------------------------------

                   2  try_try_try                   
                   3  try_try_try                   

--- 2 row(s) selected.
>>insert into pt_range_test2 values (1, 'hello'),(1001, 'hello');

--- 2 row(s) inserted.
>>select * from (delete from pt_range_test2) x;

PID                   PNAME                         
--------------------  ------------------------------

                1001  try_try_try                   
                1001  hello                         
                   1  hello                         

--- 3 row(s) selected.
>>insert into pt_range_test2 values (1, 'hello'),(1001, 'hello');

--- 2 row(s) inserted.
>>select * from (delete from pt_range_test2 return "OLD".pname) x(pname);

PNAME                         
------------------------------

hello                         
hello                         

--- 2 row(s) selected.
>>
>>
>>-- negetive test, all of follow SQL shoule be error.
>>delete from pt_range_test1 partition;

*** ERROR[15001] A syntax error occurred at or before: 
delete from pt_range_test1 partition;
                                    ^ (37 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>delete from pt_range_test1 partition (p3) t;

*** ERROR[2301] Specified partition P3 does not exist.

*** ERROR[8822] The statement was not prepared.

>>delete from pt_range_test1 partition (p1, p2);

*** ERROR[15001] A syntax error occurred at or before: 
delete from pt_range_test1 partition (p1, p2);
                                        ^ (41 characters from start of SQL statement)

*** ERROR[8822] The statement was not prepared.

>>delete from pt_range_test1 partition for (1, 2);

*** ERROR[2300] Number of expressions is not equal to the number of partitioning columns.

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>delete from pt_range_test1 partition for (10000) t where pid = 10;

*** ERROR[2302] The partition number is invalid or out-of-range.

*** ERROR[8822] The statement was not prepared.

>>
>>
>>obey TEST078(test_DDL);
>>drop index INDEX_IDX1_PART_PT_RANGE_TEST1_P1_;

*** ERROR[4265] Object TRAFODION.TESTPARTITION.INDEX_IDX1_PART_PT_RANGE_TEST1_P1_ is partition base object and cannot use drop directly. Please drop the partition object. 

--- SQL operation failed with errors.
>>drop index idx1;

--- SQL operation complete.
>>drop table PART_PT_RANGE_TEST1_P1_;

*** ERROR[4265] Object TRAFODION.TESTPARTITION.PART_PT_RANGE_TEST1_P1_ is partition base object and cannot use drop directly. Please drop the partition object. 

--- SQL operation failed with errors.
>>drop table pt_range_test1;

--- SQL operation complete.
>>drop table pt_range_test_normal;

--- SQL operation complete.
>>drop table pt_range_partition;

--- SQL operation complete.
>>drop table pt_range_test4;

--- SQL operation complete.
>>
>>create table pt_range_test_split(
+>  id    int,
+>  pid   numeric(10),
+>  pname varchar(30)
+>) partition by range(id)(
+>  partition p1 values less than(1000),
+>  partition p2 values less than(2000),
+>  partition p3 values less than(5000)
+>);

--- SQL operation complete.
>>
>>insert into pt_range_test_split values(1,1,'a');

--- 1 row(s) inserted.
>>insert into pt_range_test_split values(500,500,'b');

--- 1 row(s) inserted.
>>insert into pt_range_test_split values(1000,1000,'b');

--- 1 row(s) inserted.
>>insert into pt_range_test_split values(2000,2000,'b');

--- 1 row(s) inserted.
>>insert into pt_range_test_split values(3000,3000,'b');

--- 1 row(s) inserted.
>>insert into pt_range_test_split values(4000,4000,'b');

--- 1 row(s) inserted.
>>
>>select * from pt_range_test_split partition (p1);

ID           PID                   PNAME                         
-----------  --------------------  ------------------------------

          1                     1  a                             
        500                   500  b                             

--- 2 row(s) selected.
>>select * from pt_range_test_split partition (p2);

ID           PID                   PNAME                         
-----------  --------------------  ------------------------------

       1000                  1000  b                             

--- 1 row(s) selected.
>>select * from pt_range_test_split partition (p3);

ID           PID                   PNAME                         
-----------  --------------------  ------------------------------

       2000                  2000  b                             
       3000                  3000  b                             
       4000                  4000  b                             

--- 3 row(s) selected.
>>
>>-- negetive test
>>alter table pt_range_test_splitxx split partition p1 at (500) into (partition p11, partition p12);

*** ERROR[4082] Object TRAFODION.TESTPARTITION.PT_RANGE_TEST_SPLITXX does not exist or is inaccessible.

--- SQL operation failed with errors.
>>alter table pt_range_test_split split partition p11 at (500) into (partition p11, partition p12);

*** ERROR[1097] The specified partition P11 does not exist.

--- SQL operation failed with errors.
>>alter table pt_range_test_split split partition p1 at (1500) into (partition p41, partition p15);

*** ERROR[8306] Operation is not allowed, reason: The partition number is invalid or out-of-range.

--- SQL operation failed with errors.
>>alter table pt_range_test_split split partition p4 at (4000) into (partition p4, partition p4);

*** ERROR[1097] The specified partition P4 does not exist.

--- SQL operation failed with errors.
>>alter table pt_range_test_split split partition for(109) at (4000) into (partition p41, partition p51);

*** ERROR[8306] Operation is not allowed, reason: The partition number is invalid or out-of-range.

--- SQL operation failed with errors.
>>
>>alter table pt_range_test_split split partition p3 at (3000) into (partition p31, partition p4);

--- SQL operation complete.
>>select * from pt_range_test_split partition (p31);

ID           PID                   PNAME                         
-----------  --------------------  ------------------------------

       2000                  2000  b                             

--- 1 row(s) selected.
>>select * from pt_range_test_split partition (p4);

ID           PID                   PNAME                         
-----------  --------------------  ------------------------------

       3000                  3000  b                             
       4000                  4000  b                             

--- 2 row(s) selected.
>>showddl pt_range_test_split;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST_SPLIT
  (
    ID                               INT DEFAULT NULL
  , PID                              NUMERIC(10, 0) DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  )
  PARTITION BY RANGE (ID)
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION P2 VALUES LESS THAN (2000)
  , PARTITION P31 VALUES LESS THAN (3000)
  , PARTITION P4 VALUES LESS THAN (5000)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>alter table pt_range_test_split split partition for(500) at (500) into (partition p0, partition p11);

--- SQL operation complete.
>>select * from pt_range_test_split partition (p0);

ID           PID                   PNAME                         
-----------  --------------------  ------------------------------

          1                     1  a                             

--- 1 row(s) selected.
>>select * from pt_range_test_split partition (p11);

ID           PID                   PNAME                         
-----------  --------------------  ------------------------------

        500                   500  b                             

--- 1 row(s) selected.
>>showddl pt_range_test_split;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST_SPLIT
  (
    ID                               INT DEFAULT NULL
  , PID                              NUMERIC(10, 0) DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  )
  PARTITION BY RANGE (ID)
  (
    PARTITION P0 VALUES LESS THAN (500)
  , PARTITION P11 VALUES LESS THAN (1000)
  , PARTITION P2 VALUES LESS THAN (2000)
  , PARTITION P31 VALUES LESS THAN (3000)
  , PARTITION P4 VALUES LESS THAN (5000)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>
>>-- with view
>>create table part_tab (c1 int,c2 int,c3 int)
+>partition by range(c1)
+>(
+>partition p1 values less than (10),
+>partition p2 values less than (20),
+>partition p3 values less than (30)
+>);

--- SQL operation complete.
>>upsert using load into part_tab select element,element,element from udf(series(1,20));

--- 20 row(s) inserted.
>>create view v_part_tab as select * from part_tab;

--- SQL operation complete.
>>create view v_part_tab2 as select c2,c3 from part_tab;

--- SQL operation complete.
>>create view v_part_tab3 as select c1,c2,c3 from part_tab;

--- SQL operation complete.
>>drop table part_tab ;

*** ERROR[1047] Request failed. Dependent view TRAFODION.TESTPARTITION.V_PART_TAB exists.

*** ERROR[4266] Drop partition base object TRAFODION.TESTPARTITION.PART_TAB failed. Because drop partition base table data clean failed.

--- SQL operation failed with errors.
>>drop table part_tab cascade;

--- SQL operation complete.
>>
>>create table test_sch (c1 int ,c2 int,c3 int)
+>partition by range(c1)
+>(
+>partition p1 values less than (10),
+>partition p2 values less than (20),
+>partition p3 values less than (30)
+>);

--- SQL operation complete.
>>set schema seabase;

--- SQL operation complete.
>>select * from trafodion.testpartition.test_sch;

--- 0 row(s) selected.
>>insert into trafodion.testpartition.test_sch values(1,1,1);

--- 1 row(s) inserted.
>>delete from trafodion.testpartition.test_sch;

--- 1 row(s) deleted.
>>alter table trafodion.testpartition.test_sch drop partition p1;

--- SQL operation complete.
>>set schema testpartition;

--- SQL operation complete.
>>
>>-- mantis 20848, convert numeric to varchar
>>create table pt_range_test6 (
+>   c_char char(50),
+>   c_char_upshift char(50) upshift,
+>   c_char_not_casespecific char(50) not casespecific,
+>   c_char_varying char varying(50),
+>   c_char_varying_upshift char varying(50) upshift,
+>   c_char_varying_not_casespecific char varying(50) not casespecific,
+>   c_varchar varchar(50), ---not null unique,
+>   c_varchar_upshift varchar(50) upshift,
+>   c_varchar_not_casespecific varchar(50) not casespecific,
+>   c_nchar nchar(50),
+>   c_nchar_upshift nchar(50) upshift,
+>   c_nchar_not_casespecific nchar(50) not casespecific,
+>   c_nchar_varying nchar varying(50),
+>   c_nchar_varying_upshift nchar varying(50) upshift,
+>   c_nchar_varying_not_casespecific nchar varying(50) not casespecific,
+>   c_numeric numeric(9,2),
+>   c_numeric_unsigned numeric(9,2) unsigned,
+>   c_decimal decimal(9,2),
+>   c_decimal_unsigned decimal(9,2) unsigned,
+>   c_integer integer,
+>   c_integer_unsigned integer unsigned,
+>   c_largeint largeint,
+>   c_smallint smallint,
+>   c_smallint_unsigned smallint unsigned,
+>   c_float float(10),
+>   c_real real,
+>   c_double_precision double precision,
+>   c_date date,
+>   c_time time, -- default is (0)
+>   c_time5 time(5),
+>   c_timestamp timestamp, -- default is (6)
+>   c_timestamp5 timestamp(5),
+>   c_interval interval year to month,
+>   "c_name,with_comma" int, -- reserved word
+>   "YEAR" int, -- reserved word
+>   c_sequence LARGEINT GENERATED ALWAYS AS IDENTITY
+>                                   (START WITH 1
+>                                   INCREMENT BY 3
+>                                   MAXVALUE 99999999999
+>                                   MINVALUE 1
+>                                   NO CYCLE
+>                                   CACHE 30
+>                                   ),
+>   c_clob clob,
+>   c_blob blob,
+>   primary key (c_varchar,c_date)
+>   )
+>   partition by range(c_varchar)
+>   (
+>    partition p1 values less than (10),
+>    partition p2 values less than (20),
+>    partition p3 values less than (30),
+>    partition pmax values less than (maxvalue)
+>   );

--- SQL operation complete.
>>showddl pt_range_test6;

CREATE TABLE TRAFODION.TESTPARTITION.PT_RANGE_TEST6
  (
    C_CHAR                           CHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , C_CHAR_UPSHIFT                   CHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT UPSHIFT DEFAULT NULL
  , C_CHAR_NOT_CASESPECIFIC          CHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , C_CHAR_VARYING                   VARCHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , C_CHAR_VARYING_UPSHIFT           VARCHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT UPSHIFT DEFAULT NULL
  , C_CHAR_VARYING_NOT_CASESPECIFIC  VARCHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , C_VARCHAR                        VARCHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT NO DEFAULT NOT NULL NOT DROPPABLE
  , C_VARCHAR_UPSHIFT                VARCHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT UPSHIFT DEFAULT NULL
  , C_VARCHAR_NOT_CASESPECIFIC       VARCHAR(50) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , C_NCHAR                          CHAR(50) CHARACTER SET UCS2 COLLATE
      DEFAULT DEFAULT NULL
  , C_NCHAR_UPSHIFT                  CHAR(50) CHARACTER SET UCS2 COLLATE
      DEFAULT UPSHIFT DEFAULT NULL
  , C_NCHAR_NOT_CASESPECIFIC         CHAR(50) CHARACTER SET UCS2 COLLATE
      DEFAULT DEFAULT NULL
  , C_NCHAR_VARYING                  VARCHAR(50) CHARACTER SET UCS2 COLLATE
      DEFAULT DEFAULT NULL
  , C_NCHAR_VARYING_UPSHIFT          VARCHAR(50) CHARACTER SET UCS2 COLLATE
      DEFAULT UPSHIFT DEFAULT NULL
  , C_NCHAR_VARYING_NOT_CASESPECIFIC VARCHAR(50) CHARACTER SET UCS2 COLLATE
      DEFAULT DEFAULT NULL
  , C_NUMERIC                        NUMERIC(9, 2) DEFAULT NULL
  , C_NUMERIC_UNSIGNED               NUMERIC(9, 2) UNSIGNED DEFAULT NULL
  , C_DECIMAL                        DECIMAL(9, 2) DEFAULT NULL
  , C_DECIMAL_UNSIGNED               DECIMAL(9, 2) UNSIGNED DEFAULT NULL
  , C_INTEGER                        INT DEFAULT NULL
  , C_INTEGER_UNSIGNED               INT UNSIGNED DEFAULT NULL
  , C_LARGEINT                       LARGEINT DEFAULT NULL
  , C_SMALLINT                       SMALLINT DEFAULT NULL
  , C_SMALLINT_UNSIGNED              SMALLINT UNSIGNED DEFAULT NULL
  , C_FLOAT                          DOUBLE PRECISION DEFAULT NULL
  , C_REAL                           REAL DEFAULT NULL
  , C_DOUBLE_PRECISION               DOUBLE PRECISION DEFAULT NULL
  , C_DATE                           DATE NO DEFAULT NOT NULL NOT DROPPABLE
  , C_TIME                           TIME(0) DEFAULT NULL
  , C_TIME5                          TIME(5) DEFAULT NULL
  , C_TIMESTAMP                      TIMESTAMP(6) DEFAULT NULL
  , C_TIMESTAMP5                     TIMESTAMP(5) DEFAULT NULL
  , C_INTERVAL                       INTERVAL YEAR(2) TO MONTH DEFAULT NULL
  , "c_name,with_comma"              INT DEFAULT NULL
  , "YEAR"                           INT DEFAULT NULL
  , C_SEQUENCE                       LARGEINT GENERATED ALWAYS AS IDENTITY (
      START WITH 1  INCREMENT BY 3  MAXVALUE 99999999999  MINVALUE 1  CACHE 30
       NOORDER  NO CYCLE  LARGEINT  ) NOT NULL NOT DROPPABLE
  , C_CLOB                           CLOB( 5368709120 bytes) CHARACTER SET
      ISO88591 DEFAULT NULL
  , C_BLOB                           BLOB( 5368709120 bytes) DEFAULT NULL
  , PRIMARY KEY (C_VARCHAR ASC, C_DATE ASC)
  )
  PARTITION BY RANGE (C_VARCHAR)
  (
    PARTITION P1 VALUES LESS THAN (10)
  , PARTITION P2 VALUES LESS THAN (20)
  , PARTITION P3 VALUES LESS THAN (30)
  , PARTITION PMAX VALUES LESS THAN (MAXVALUE)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>select * from pt_range_test6;

--- 0 row(s) selected.
>>drop table if exists pt_range_test6 cascade;

--- SQL operation complete.
>>
>>drop table if exists part_tab cascade;

--- SQL operation complete.
>>create table part_tab (c1 int primary key,c2 int,c3 int)
+>partition by range(c1)
+>(
+>partition p1 values less than (10),
+>partition p2 values less than (20),
+>partition p3 values less than (30),
+>partition pmax values less than (maxvalue)
+>);

--- SQL operation complete.
>>upsert using load into part_tab select element,element,element from udf(series(1,2000));

--- 2000 row(s) inserted.
>>
>>explain options 'f' delete from part_tab where c1=21;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               1.00E+000
.    .    1    trafodion_delete      r         PART_PART_TAB_P3_     1.00E+000

--- SQL operation complete.
>>explain options 'f' delete from part_tab where c1=31;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               1.00E+000
.    .    1    trafodion_delete      r         PART_PART_TAB_PMAX_   1.00E+000

--- SQL operation complete.
>>explain options 'f' delete from part_tab where c1=2;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               1.00E+000
.    .    1    trafodion_delete      r         PART_PART_TAB_P1_     1.00E+000

--- SQL operation complete.
>>drop table if exists part_tab cascade;

--- SQL operation complete.
>>
>>drop table if exists part_tab2 cascade;

--- SQL operation complete.
>>create table part_tab2 (c1 int,c2 int,c3 int,primary key(c1,c2))
+>partition by range(c1,c2)
+>(
+>partition p1 values less than (10,15),
+>partition p2 values less than (20,25),
+>partition p3 values less than (30,35),
+>partition pmax values less than (maxvalue,45)
+>);

--- SQL operation complete.
>>upsert using load into part_tab2 select element,element,element from udf(series(1,2000));

--- 2000 row(s) inserted.
>>
>>explain options 'f' delete from part_tab2 where c1=21 and c2=27;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               2.50E+001
.    .    1    trafodion_delete      r         PART_PART_TAB2_P3_    2.50E+001

--- SQL operation complete.
>>explain options 'f' delete from part_tab2 where c1=31 and c2=15;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               2.50E+001
.    .    1    trafodion_delete      r         PART_PART_TAB2_PMAX_  2.50E+001

--- SQL operation complete.
>>explain options 'f' delete from part_tab2 where c1=2 and c2=10;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               2.50E+001
.    .    1    trafodion_delete      r         PART_PART_TAB2_P1_    2.50E+001

--- SQL operation complete.
>>explain options 'f' delete from part_tab2 where c1=10 and c2=25;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               2.50E+001
.    .    1    trafodion_delete      r         PART_PART_TAB2_P2_    2.50E+001

--- SQL operation complete.
>>explain options 'f' delete from part_tab2 where c1=10 and c2=30;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               2.50E+001
.    .    1    trafodion_delete      r         PART_PART_TAB2_P2_    2.50E+001

--- SQL operation complete.
>>drop table if exists part_tab2 cascade;

--- SQL operation complete.
>>
>>drop table if exists part_tab3 cascade;

--- SQL operation complete.
>>create table part_tab3 (c1 int,c2 int,c3 int,primary key(c1,c2))
+>partition by range(c1,c2)
+>(
+>partition p1 values less than (10,15),
+>partition p2 values less than (20,25),
+>partition p3 values less than (30,35),
+>partition pmax values less than (40, maxvalue)
+>);

--- SQL operation complete.
>>upsert using load into part_tab3 select element,element,element from udf(series(1,2000));

*** ERROR[4403] insert partition key is outside specified partition

--- 0 row(s) inserted.
>>
>>explain options 'f' delete from part_tab3 where c1=41 and c2=27;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o         x                     1.00E+000
.    .    1    trafodion_delete                PART_TAB3             1.00E+000

--- SQL operation complete.
>>explain options 'f' delete from part_tab3 where c1=31 and c2=155;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               2.50E+001
.    .    1    trafodion_delete      r         PART_PART_TAB3_PMAX_  2.50E+001

--- SQL operation complete.
>>explain options 'f' delete from part_tab3 where c1=40 and c2=1550;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

1    .    2    root                  o                               2.50E+001
.    .    1    trafodion_delete      r         PART_PART_TAB3_PMAX_  2.50E+001

--- SQL operation complete.
>>drop table if exists part_tab3 cascade;

--- SQL operation complete.
>>
>>drop table if exists part_tab4 cascade;

--- SQL operation complete.
>>drop table if exists tmp1 cascade;

--- SQL operation complete.
>>create table part_tab4 (c1 int ,c2 int,c3 int)
+>partition by range(c1)
+>(
+>partition p1 values less than (10),
+>partition p2 values less than (20),
+>partition p3 values less than (30)
+>);

--- SQL operation complete.
>>upsert using load into part_tab4 select element,element,element from udf(series(1,29));

--- 29 row(s) inserted.
>>create table tmp1(id int ,value int);

--- SQL operation complete.
>>upsert into tmp1 select element,element from udf(series(1,200));

--- 200 row(s) inserted.
>>select count(*) from part_tab4 where c1 in (select id from tmp1);

(EXPR)
--------------------

                  29

--- 1 row(s) selected.
>>select count(*) from part_tab4 where c1 not in (select id from tmp1);

(EXPR)
--------------------

                   0

--- 1 row(s) selected.
>>update part_tab4 set c2=1 where c1 not in(-1,1,4,5,6,7,8,4000);

--- 23 row(s) updated.
>>delete from part_tab4 where c1 not in(-1,1,4,5,6,7,8,4000);

--- 23 row(s) deleted.
>>drop table if exists part_tab4 cascade;

--- SQL operation complete.
>>drop table if exists tmp1 cascade;

--- SQL operation complete.
>>
>>create table pt_range_test7(c1 int, c2 int, c3 int )
+>partition by range(c1,c2)
+>(
+>  partition p1 values less than (10,maxvalue),
+>  partition p2 values less than (20,maxvalue),
+>  partition p3 values less than (30, 50),
+>  partition p4 values less than (40,maxvalue)
+>);

--- SQL operation complete.
>>-- insert into p1
>>insert into pt_range_test7 values(5, 100, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 values(10, 200, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(5, 10) values(6, 40, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(10, 150) values(9, 60, 10);

--- 1 row(s) inserted.
>>
>>-- insert into p2
>>insert into pt_range_test7 values(15, 300, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 values(20, 400, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(15, 10) values(16, 55, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(20, 350) values(19, 70, 10);

--- 1 row(s) inserted.
>>
>>-- insert into p3
>>insert into pt_range_test7 values(25, 30, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 values(30, 40, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(25, 40) values(21, 80, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(30, 45) values(29, 88, 10);

--- 1 row(s) inserted.
>>
>>-- insert into p4
>>insert into pt_range_test7 values(35, 50, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 values(40, 500, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(30, 50) values(30, 55, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(35, 48) values(40, 65, 10);

--- 1 row(s) inserted.
>>insert into pt_range_test7 partition for(40, 550) values(40, 600, 10);

--- 1 row(s) inserted.
>>
>>-- insert 0 row
>>insert into pt_range_test7 partition for(40, 550) values(41, 650, 10);

*** ERROR[4403] insert partition key is outside specified partition

--- 0 row(s) inserted.
>>
>>-- select p1
>>select * from pt_range_test7 partition(p1);

C1           C2           C3         
-----------  -----------  -----------

          5          100           10
         10          200           10
          6           40           10
          9           60           10

--- 4 row(s) selected.
>>select * from pt_range_test7 partition for(5, 200);

C1           C2           C3         
-----------  -----------  -----------

          5          100           10
         10          200           10
          6           40           10
          9           60           10

--- 4 row(s) selected.
>>select * from pt_range_test7 partition for(10, 300);

C1           C2           C3         
-----------  -----------  -----------

          5          100           10
         10          200           10
          6           40           10
          9           60           10

--- 4 row(s) selected.
>>
>>-- select p2
>>select * from pt_range_test7 partition(p2);

C1           C2           C3         
-----------  -----------  -----------

         15          300           10
         20          400           10
         16           55           10
         19           70           10

--- 4 row(s) selected.
>>select * from pt_range_test7 partition for(15, 400);

C1           C2           C3         
-----------  -----------  -----------

         15          300           10
         20          400           10
         16           55           10
         19           70           10

--- 4 row(s) selected.
>>select * from pt_range_test7 partition for(20, 500);

C1           C2           C3         
-----------  -----------  -----------

         15          300           10
         20          400           10
         16           55           10
         19           70           10

--- 4 row(s) selected.
>>
>>-- select p3
>>select * from pt_range_test7 partition(p3);

C1           C2           C3         
-----------  -----------  -----------

         25           30           10
         30           40           10
         21           80           10
         29           88           10

--- 4 row(s) selected.
>>select * from pt_range_test7 partition for(25, 60);

C1           C2           C3         
-----------  -----------  -----------

         25           30           10
         30           40           10
         21           80           10
         29           88           10

--- 4 row(s) selected.
>>select * from pt_range_test7 partition for(30, 49);

C1           C2           C3         
-----------  -----------  -----------

         25           30           10
         30           40           10
         21           80           10
         29           88           10

--- 4 row(s) selected.
>>
>>-- select p4
>>select * from pt_range_test7 partition(p4);

C1           C2           C3         
-----------  -----------  -----------

         35           50           10
         40          500           10
         30           55           10
         40           65           10
         40          600           10

--- 5 row(s) selected.
>>select * from pt_range_test7 partition for(30, 50);

C1           C2           C3         
-----------  -----------  -----------

         35           50           10
         40          500           10
         30           55           10
         40           65           10
         40          600           10

--- 5 row(s) selected.
>>select * from pt_range_test7 partition for(35, 100);

C1           C2           C3         
-----------  -----------  -----------

         35           50           10
         40          500           10
         30           55           10
         40           65           10
         40          600           10

--- 5 row(s) selected.
>>select * from pt_range_test7 partition for(40, 700);

C1           C2           C3         
-----------  -----------  -----------

         35           50           10
         40          500           10
         30           55           10
         40           65           10
         40          600           10

--- 5 row(s) selected.
>>
>>drop table pt_range_test7;

--- SQL operation complete.
>>
>>create table "p1"(
+>  "pid"   numeric(10),
+>  "pname" varchar(30),
+>  pname   varchar(30),
+>  primary key ("pid")
+>) partition by range("pid")(
+>  partition p1 values less than(1000),
+>  partition "p2" values less than(2000),
+>  partition p2 values less than(MAXVALUE)
+>);

--- SQL operation complete.
>>showddl "p1";

CREATE TABLE TRAFODION.TESTPARTITION."p1"
  (
    "pid"                            NUMERIC(10, 0) NO DEFAULT NOT NULL NOT
      DROPPABLE
  , "pname"                          VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY ("pid" ASC)
  )
  PARTITION BY RANGE ("pid")
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION "p2" VALUES LESS THAN (2000)
  , PARTITION P2 VALUES LESS THAN (MAXVALUE)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>insert into "p1" values(1001, '1001', '1001');

--- 1 row(s) inserted.
>>insert into "p1" values(1999, '1999', '1999');

--- 1 row(s) inserted.
>>insert into "p1" values(2001, '2001', '2001');

--- 1 row(s) inserted.
>>select * from "p1" partition ("p2");

pid                   pname                           PNAME
--------------------  ------------------------------  ------------------------------

                1001  1001                            1001                          
                1999  1999                            1999                          

--- 2 row(s) selected.
>>alter table "p1" split partition "p2" at (1500) into (partition "p21", partition "p22");

--- SQL operation complete.
>>select * from "p1" partition ("p21");

pid                   pname                           PNAME
--------------------  ------------------------------  ------------------------------

                1001  1001                            1001                          

--- 1 row(s) selected.
>>select * from "p1" partition ("p22");

pid                   pname                           PNAME
--------------------  ------------------------------  ------------------------------

                1999  1999                            1999                          

--- 1 row(s) selected.
>>showddl "p1";

CREATE TABLE TRAFODION.TESTPARTITION."p1"
  (
    "pid"                            NUMERIC(10, 0) NO DEFAULT NOT NULL NOT
      DROPPABLE
  , "pname"                          VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PNAME                            VARCHAR(30) CHARACTER SET ISO88591 COLLATE
      DEFAULT DEFAULT NULL
  , PRIMARY KEY ("pid" ASC)
  )
  PARTITION BY RANGE ("pid")
  (
    PARTITION P1 VALUES LESS THAN (1000)
  , PARTITION "p21" VALUES LESS THAN (1500)
  , PARTITION "p22" VALUES LESS THAN (2000)
  , PARTITION P2 VALUES LESS THAN (MAXVALUE)
  )
 ATTRIBUTES ALIGNED FORMAT NAMESPACE 'TRAF_1500000'
;

--- SQL operation complete.
>>select * from "p1" partition (p2);

pid                   pname                           PNAME
--------------------  ------------------------------  ------------------------------

                2001  2001                            2001                          

--- 1 row(s) selected.
>>drop table "p1";

--- SQL operation complete.
>>
>>create table part_tab_test_in_not_in (c1 int primary key,c2 int,c3 int)
+>partition by range(c1)
+>(
+>partition p1 values less than (10),
+>partition p2 values less than (20),
+>partition p3 values less than (30),
+>partition pmax values less than (maxvalue)
+>);

--- SQL operation complete.
>>upsert using load into part_tab_test_in_not_in select element,element,element from udf(series(1,200));

--- 200 row(s) inserted.
>>delete from part_tab_test_in_not_in where c1 in(1,2,3) and c2 not in(1,2,3);

--- 0 row(s) deleted.
>>select * from part_tab_test_in_not_in where c1 in(1,2,3) and c1 not in(5,6,7);

C1           C2           C3         
-----------  -----------  -----------

          1            1            1
          2            2            2
          3            3            3

--- 3 row(s) selected.
>>select * from part_tab_test_in_not_in where c1 in(1,2,3) and c2 not in(5,6,7);

C1           C2           C3         
-----------  -----------  -----------

          1            1            1
          2            2            2
          3            3            3

--- 3 row(s) selected.
>>delete from part_tab_test_in_not_in where c1 in(1,2,3) and c2 not in(5,6,7);

--- 3 row(s) deleted.
>>select * from part_tab_test_in_not_in where c1 <10 and not exists(select * from part_tab_test_in_not_in);

--- 0 row(s) selected.
>>delete from part_tab_test_in_not_in where c1 <10 and not exists(select * from part_tab_test_in_not_in);

--- 0 row(s) deleted.
>>select * from part_tab_test_in_not_in where c1 not in(40,55,70,34,46) and c1 in(5);

C1           C2           C3         
-----------  -----------  -----------

          5            5            5

--- 1 row(s) selected.
>>delete from part_tab_test_in_not_in where c1 not in(40,55,70,34,46) and c1 in(5);

--- 1 row(s) deleted.
>>drop table part_tab_test_in_not_in;
>>
>>log;
