>>-- create a tenant
>>obey TEST049(create_tenant);
>>
>>-- run without a tenant
>>cqd TENANT_OVERSUBSCRIBE_WARN_NODE_RATIO '1e6';

--- SQL operation complete.
>>cqd TENANT_OVERSUBSCRIBE_ERR_NODE_RATIO  '1e6';

--- SQL operation complete.
>>
>>create tenant osim_tenant admin role t_admin, tenant size 6, cluster size 2, affinity 3;

--- SQL operation complete.
>>
>>-- log on under the tenant and create a table
>>log;
>>-- run under the tenant
>>create schema t049_osim_tenant_sch;

--- SQL operation complete.
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>create table t049_osim(a int not null primary key, b int) salt using 4 partitions;

--- SQL operation complete.
>>insert into t049_osim values (1,1), (2,2), (3,3);

--- 3 row(s) inserted.
>>
>>exit;

End of MXCI Session

>>-- explain and run the query as the tenant
>>log;
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>explain options 'f' s;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

4    .    5    root                                                  2.00E+000
3    .    4    hash_partial_groupby                                  2.00E+000
2    .    3    esp_exchange                    1:4(hash2)            2.00E+000
1    .    2    hash_partial_groupby                                  2.00E+000
.    .    1    trafodion_scan                  T049_OSIM             1.00E+009

--- SQL operation complete.
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (-1(4 times))                                                   

--- 1 row(s) selected.
>>execute s;

B          
-----------

          3
          2
          1

--- 3 row(s) selected.
>>exit;

End of MXCI Session

>>-- all nodes -1 (we can use all nodes and AS is off)
>>-- create an osim, running as the tenant
>>log;
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>sh rm -rf t049_tenant_osim;
>>control osim capture location 't049_tenant_osim';

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>explain options 'f' s;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

4    .    5    root                                                  2.00E+000
3    .    4    hash_partial_groupby                                  2.00E+000
2    .    3    esp_exchange                    1:4(hash2)            2.00E+000
1    .    2    hash_partial_groupby                                  2.00E+000
.    .    1    trafodion_scan                  T049_OSIM             1.00E+009

--- SQL operation complete.
>>control osim capture stop;

--- SQL operation complete.
>>
>>exit;

End of MXCI Session

>>-- back as the db__root user, prepare the query without a tenant and without osim
>>-- default, AS is -2 (off)
>>obey TEST049(run_query);
>>log LOG049;
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>explain options 'f' s;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

4    .    5    root                                                  2.00E+000
3    .    4    hash_partial_groupby                                  2.00E+000
2    .    3    esp_exchange                    1:4(hash2)            2.00E+000
1    .    2    hash_partial_groupby                                  2.00E+000
.    .    1    trafodion_scan                  T049_OSIM             1.00E+009

--- SQL operation complete.
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (-1(4 times))                                                   

--- 1 row(s) selected.
>>execute s;

B          
-----------

          1
          2
          3

--- 3 row(s) selected.
>>-- all nodes -1
>>cqd AS_AFFINITY_VALUE '-4';

--- SQL operation complete.
>>obey TEST049(run_query);
>>log LOG049;
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>explain options 'f' s;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

4    .    5    root                                                  2.00E+000
3    .    4    hash_partial_groupby                                  2.00E+000
2    .    3    esp_exchange                    1:4(hash2)            2.00E+000
1    .    2    hash_partial_groupby                                  2.00E+000
.    .    1    trafodion_scan                  T049_OSIM             1.00E+009

--- SQL operation complete.
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (0,1,0,1)                                                       

--- 1 row(s) selected.
>>execute s;

B          
-----------

          2
          3
          1

--- 3 row(s) selected.
>>-- nodes 0, 1, 0, 1
>>cqd AS_AFFINITY_VALUE '5';

--- SQL operation complete.
>>obey TEST049(run_query);
>>log LOG049;
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>explain options 'f' s;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

4    .    5    root                                                  2.00E+000
3    .    4    hash_partial_groupby                                  2.00E+000
2    .    3    esp_exchange                    1:4(hash2)            2.00E+000
1    .    2    hash_partial_groupby                                  2.00E+000
.    .    1    trafodion_scan                  T049_OSIM             1.00E+009

--- SQL operation complete.
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (1,0,1,0)                                                       

--- 1 row(s) selected.
>>execute s;

B          
-----------

          2
          1
          3

--- 3 row(s) selected.
>>-- nodes 1, 0, 1, 0
>>cqd AS_AFFINITY_VALUE reset;

--- SQL operation complete.
>>
>>-- still as the db__root user, load the osim and explain the query
>>log;
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>control osim load from './t049_tenant_osim';

--- SQL operation complete.
>>
>>exit;

End of MXCI Session

>>control osim simulate continue './t049_tenant_osim';

--- SQL operation complete.
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (-1(4 times))                                                   

--- 1 row(s) selected.
>>
>>exit;

End of MXCI Session

>>-- all nodes -1 (we can use all nodes and AS is off)
>>
>>-- now manipulate the OSIM to fake a bigger cluster and simulate
>>-- different kinds of tenants
>>sh cp -f $$scriptsdir$$/compGeneral/TEST049_fake_NAClusterInfo.txt t049_tenant_osim/NAClusterInfo.txt;
>>-- tenant of size 6 on a 12 node cluster, odd nodes
>>sh echo 'OSIM_TENANT' >t049_tenant_osim/TENANT.txt;
>>sh echo 'A|6|12|15' >>t049_tenant_osim/TENANT.txt;
>>log;
>>control osim simulate continue './t049_tenant_osim';

--- SQL operation complete.
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (1+3+5,8)                                                       

--- 1 row(s) selected.
>>
>>exit;

End of MXCI Session

>>-- nodes 1, 3, 5, 8 (node 7 doesn't exist)
>>
>>-- tenant of size 6 on a 12 node cluster, even nodes
>>sh echo 'OSIM_TENANT' >t049_tenant_osim/TENANT.txt;
>>sh echo 'A|6|12|4' >>t049_tenant_osim/TENANT.txt;
>>log;
>>control osim simulate continue './t049_tenant_osim';

--- SQL operation complete.
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (0+2+...+6)                                                     

--- 1 row(s) selected.
>>
>>exit;

End of MXCI Session

>>-- nodes 0, 2, 4, 6
>>
>>-- tenant of size 4 on 8 nodes of a 12 node cluster, even nodes
>>sh echo 'OSIM_TENANT' >t049_tenant_osim/TENANT.txt;
>>sh echo 'A|4|8|6' >>t049_tenant_osim/TENANT.txt;
>>-- get a real affinity 6, not affinity 0, based on the master executor,
>>-- as is the default
>>log;
>>cqd AS_AFFINITY_VALUE '6';

--- SQL operation complete.
>>log;
>>control osim simulate continue './t049_tenant_osim';

--- SQL operation complete.
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (6,0+2+4)                                                       

--- 1 row(s) selected.
>>
>>cqd AS_AFFINITY_VALUE reset;

--- SQL operation complete.
>>
>>exit;

End of MXCI Session

>>-- expect to run on nodes 6, 0, 2, 4, using only lower 8 nodes
>>
>>-- tenant of size 4, one unit on node 3 the other three on node 8
>>sh echo 'OSIM_TENANT' >t049_tenant_osim/TENANT.txt;
>>sh echo 'L|4|2|3*1|8*3' >>t049_tenant_osim/TENANT.txt;
>>-- get a real affinity 6, not affinity 0, based on the master executor,
>>-- as is the default
>>log;
>>control osim simulate continue './t049_tenant_osim';

--- SQL operation complete.
>>set schema t049_osim_tenant_sch;

--- SQL operation complete.
>>prepare s from select distinct b from t049_osim <<+ cardinality 1e9>>;

--- SQL command prepared.
>>
>>select cast(substring(description,
+>                      position('_node_map: ' in description) - 5,
+>                      position(' statement: ' in description) -
+>                      (position('_node_map: ' in description) - 5)) as char(80) character set iso88591)
+>from table(explain(null,'S'))
+>where operator = 'ROOT';

(EXPR)
--------------------------------------------------------------------------------

esp_2_node_map: (-1(4 times))                                                   

--- 1 row(s) selected.
>>
>>exit;

End of MXCI Session

>>-- -1(4 times), nodes are assigned at runtime
>>
>>log;
