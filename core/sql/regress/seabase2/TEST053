-- ============================================================================
-- TEST053 - Test privileges for backup/restore
--
--  Everyone has privs
--    get all locked objects
--    get all backup tags (snapshots)
--    get backup tag (snapshot)
--
--  Elevated users, backup owner, or users with SHOW component privilege
--    get all backup metadata 
--    restore subset with "show objects" 
--
--  Elevated users or users who own the object
--    Backup subset 
--    Restore subset
--
--  Elevated users or backup owner
--    import backup
--    export backup
--    drop backup tag (snapshot)
--    get version of backup
--    cleanup locked object
--
--  Elevated users only 
--    backup system
--    restore system
--    export all backups
--    drop all backups
--    drop obsolete backup metadata
--
--  user1 - has only select privilege, cannot backup or restore
--  user2 - has select/insert privilege on 
--    "test053sch-2".t3, and "test053sch-2".t4
--  user3 - has select/insert on schema test053sch1;
--          can backup and restore all tables in this schema
-- 
-- ============================================================================

obey TEST053(clean_up);
log LOG053 clear;
obey TEST053(create_db);

sh sqlci -i "TEST053(user1_tests)" -u sql_user1;
sh sqlci -i "TEST053(user2_tests)" -u sql_user2;
sh sqlci -i "TEST053(user3_tests)" -u sql_user3;

-- verify user can see info if granted SHOW privilege
grant component privilege "SHOW" on sql_operations to sql_user1;
sh sqlci -i "TEST053(user1_show_tests)" -u sql_user1;
revoke component privilege "SHOW" on sql_operations from sql_user1;

obey TEST053(test_version);

log;
obey TEST053(clean_up);
exit;

?section clean_up
-- ============================================================================
drop all backup tags, match 'test053%';

drop schema test053sch1 cascade;
drop schema "test053sch-2" cascade;

grant component privilege "SHOW" on sql_operations to public;
revoke component privilege "SHOW" on sql_operations from sql_user1;

?section create_db
-- ============================================================================
create schema test053sch1;
set schema test053sch1;
grant select, insert on schema test053sch1 to sql_user3;
create table t1 (a int, b int);
create index ndx1 on t1 (a);
create table t2 (a int, b int);
insert into t1 values (1,1), (1,2), (1,3), (1,4), (1,5),(1,6);
insert into t2 values (2,1), (2,2), (2,3), (2,4), (2,5),(2,6);
create view v1 as select * from t1;
create view v2 as select * from t2;
create procedure p1(in a varchar(100), out b varchar(100)) as //
begin
  set b = 'Hello ' || a || '!';
end//;
call p1 ('kitty', ?);

grant select on t1 to sql_user1;
grant select, insert on t1 to sql_user2;
grant all on v1 to sql_user2;

create schema "test053sch-2";
set schema "test053sch-2";
create table t3 (a int, b int);
create table t4 (a int, b int);
create index ndx4 on t4 (b);
insert into t3 values (3,1), (3,2), (3,3), (3,4), (3,5),(3,6);
insert into t4 values (4,1), (4,2), (4,3), (4,4), (4,5),(4,6);
grant select, insert on "test053sch-2".t3 to sql_user2;
grant select, insert on "test053sch-2".t4 to sql_user2;

get privileges for user sql_user1, match '%53%';
get privileges for user sql_user2, match 'SI--%';
get privileges for user sql_user3, match 'SI--%';

backup trafodion, tag 'test053-all-sch', schemas (test053sch1, "test053sch-2"), override;
get all backup snapshots, match 'test053%';
get version of backup, tag 'test053-all-sch';
get all locked objects;

revoke component privilege "SHOW" on sql_operations from public;

?section user1_tests
-- ============================================================================
log LOG053;
values (current_user);

-- all succeed
get privileges for user sql_user1, match '%53%';
get privileges on component sql_operations for sql_user1;
get all locked objects;
get all backup snapshots, match 'test053%';
get all backup tags, match 'test053%';
get backup tag, tag 'test053-all-sch';
get backup snapshot, tag 'test053-all-sch';

-- succeeds but no rows returned
get all backup metadata, match '%test053%';

-- all fail with no priv
backup trafodion, tag 'test053-u1-sch', override, schemas(test053sch1);
backup trafodion, tag 'test053-u1-sch', override, tables(test053sch1.t1);
restore trafodion, tag 'test053-all-sch';
restore trafodion, tag 'test053-all-sch', tables (somefunnytable);
restore trafodion, tag 'test053-all-sch', show objects;
drop backup tag, tag 'test053-all-sch';
drop backup snapshot, tag 'test053-all-sch';
cleanup backup, tag 'test053-all-sch';

-- verify no backups/restores/drops actually occurred
get all backup snapshots, match 'test053%';

?section user2_tests
-- ============================================================================
-- run as sql_user2
-- sql_user2 can backup/restore "test053sch-2".t3, and "test053sch-2".t4
--    (all tables in schema "test053sch-2")
log LOG053;
values (current_user);
get privileges for user sql_user2, match 'SI--%';

select count(*) from "test053sch-2".t3 order by a, b;
select count(*) from "test053sch-2".t4 order by a, b;

-- the following commands fail with no priv
backup trafodion, tag 'test053-u2-sch', override, schemas (test053sch1);
backup trafodion, tag 'test053-u2-sch', override;
backup trafodion, tag 'test053-u2-t2', override, tables (test053sch1.t2);
restore trafodion, tag 'test053-all-sch';

-- verify that data was not changed
select count(*) from "test053sch-2".t3 order by a, b;
select count(*) from "test053sch-2".t4 order by a, b;

-- verify that backups were not successful
get all backup snapshots, match 'test053%';

-- these succeed
backup trafodion, tag 'test053-u2-t3', override, tables ("test053sch-2".t3);
backup trafodion, tag 'test053-u2-sch', override, schemas ("test053sch-2");
get all backup tags, match 'test053%';
get all backup metadata, match '%test053%';
get version of backup, tag 'test053-u2-t3';
get version of backup, tag 'test053-u2-sch';

-- change existing contents, restore should put back to previous state
insert into "test053sch-2".t3 values (3,7), (3,8);
sh sqlci -i "TEST053(drop_user2_tbls)";

-- restore table t3
select * from "test053sch-2".t3 order by a, b;
restore trafodion, tag 'test053-u2-t3';
-- t3 should not contain rows (3,7) and (3,8)
select * from "test053sch-2".t3 order by a, b;

-- restore table t4
-- table not exist
select * from "test053sch-2".t4 order by a, b;
restore trafodion, tag 'test053-u2-sch', tables ("test053sch-2".t4);
-- t4 should now exist
select * from "test053sch-2".t4 order by a, b;

get all locked objects;
get all backup metadata, match '%test053%';

-- drops/cleanups fail with no priv
drop backup tag, tag 'test053-all-sch';
drop backup snapshot, tag 'test053-all-sch';
cleanup backup, tag 'test053-all-sch';

-- these work
drop backup tag, tag 'test053-u2-t3';
drop backup snapshot, tag 'test053-u2-sch';
drop backup tag, tag 'test053-u2-sch';
get all backup snapshots, match 'test053%';
get all backup metadata, match '%test053%';
get all locked objects;

?section drop_user2_tbls
-- ============================================================================
log LOG053;
values (current_user);
drop table "test053sch-2".t4;

?section user3_tests
-- ============================================================================
log LOG053;
values (current_user);

get all backup snapshots, match 'test053%';
get privileges for user sql_user3, match 'SI--%';

showddl test053sch1.t1;
select * from test053sch1.t1 order by a, b;

-- the following fail with no priv
backup trafodion, tag 'test053-u3-all-sch', override;
backup trafodion, tag 'test053-u3-sch', override,  schemas (test053sch1);
restore trafodion, tag 'test053-all-sch', tables (test053sch1.t1);
drop all backup tags;
drop all backup snapshots;
drop obsolete backup metadata;

-- the following work
backup trafodion, tag 'test053-u3-sch', override, tables(test053sch1.t1);
get version of backup, tag 'test053-u3-sch';

insert into test053sch1.t1 values (1,7), (1,8);
select * from test053sch1.t1 order by a,b;
restore trafodion, tag 'test053-u3-sch';
select * from test053sch1.t1 order by a,b;

drop backup tag, tag 'test053-u3-sch';

get all backup snapshots, match 'test053%';
get all locked objects;

?section user1_show_tests
-- ============================================================================
log LOG053;
values (current_user);

get privileges for user sql_user1, match '%53%';
get privileges on component sql_operations for sql_user1;

-- succeed
get all backup metadata, match '%test053%';
restore trafodion, tag 'test053-all-sch', show objects;

-- fail with no priv
backup trafodion, tag 'test053-u1-sch', override, schemas(test053sch1);
backup trafodion, tag 'test053-u1-sch', override, tables(test053sch1.t1);

?section test_version
-- ============================================================================
get version of backup, tag 'test053-all-sch';
set envvar BR_TESTPOINT_DBV 'EsgynDB Enterprise';
-- fails with database version mismatch
get version of backup, tag 'test053-all-sch';
reset envvar BR_TESTPOINT_DBV;

get version of backup, tag 'test053-all-sch';
set envvar BR_TESTPOINT_MDV 'Metadata Version 2.4.0';
-- Version less than current metadata version, okay
get version of backup, tag 'test053-all-sch';
reset envvar BR_TESTPOINT_MDV;
set envvar BR_TESTPOINT_MDV 'Metadata Version 3.4.0';
-- fails with metadata version mismatch
get version of backup, tag 'test053-all-sch';
reset envvar BR_TESTPOINT_MDV;

get version of backup, tag 'test053-all-sch';
set envvar BR_TESTPOINT_PRV 'Core Banking 1.1.0';
-- fails with product version mismatch
get version of backup, tag 'test053-all-sch';
reset envvar BR_TESTPOINT_PRV;
set envvar BR_TESTPOINT_PRV 'EsgynDB 1.1.0';
-- Currently don't check product version
get version of backup, tag 'test053-all-sch';
reset envvar BR_TESTPOINT_PRV;



