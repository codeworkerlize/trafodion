>>obey stdcqds;
>>
>>set schema hive.tpcds_sf1000;

--- SQL operation complete.
>>
>>control osim simulate continue './osim.all.sf1000.09022016';

--- SQL operation complete.
>>
>>cqd orc_njs 'on';

--- SQL operation complete.
>>cqd parallel_num_esps '48';

--- SQL operation complete.
>>cqd QUERY_CACHE '200000';

--- SQL operation complete.
>>cqd HIVE_METADATA_REFRESH_INTERVAL '-1';

--- SQL operation complete.
>>cqd  HIVE_LOCALITY_BALANCE_LEVEL '-1';

--- SQL operation complete.
>>cqd  METADATA_CACHE_SIZE '200';

--- SQL operation complete.
>>cqd partitioning_scheme_sharing '2';

--- SQL operation complete.
>>cqd COMP_BOOL_208 'ON';

--- SQL operation complete.
>>obey q66;
>>
>>--==QID: 66
>>
>>prepare xx from
+>select   
+>         w_warehouse_name
+>        ,w_warehouse_sq_ft
+>        ,w_city
+>        ,w_county
+>        ,w_state
+>        ,w_country
+>        ,ship_carriers
+>        ,year_d
+>        ,sum(jan_sales) as jan_sales
+>        ,sum(feb_sales) as feb_sales
+>        ,sum(mar_sales) as mar_sales
+>        ,sum(apr_sales) as apr_sales
+>        ,sum(may_sales) as may_sales
+>        ,sum(jun_sales) as jun_sales
+>        ,sum(jul_sales) as jul_sales
+>        ,sum(aug_sales) as aug_sales
+>        ,sum(sep_sales) as sep_sales
+>        ,sum(oct_sales) as oct_sales
+>        ,sum(nov_sales) as nov_sales
+>        ,sum(dec_sales) as dec_sales
+>        ,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot
+>        ,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot
+>        ,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot
+>        ,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot
+>        ,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot
+>        ,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot
+>        ,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot
+>        ,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot
+>        ,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot
+>        ,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot
+>        ,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot
+>        ,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot
+>        ,sum(jan_net) as jan_net
+>        ,sum(feb_net) as feb_net
+>        ,sum(mar_net) as mar_net
+>        ,sum(apr_net) as apr_net
+>        ,sum(may_net) as may_net
+>        ,sum(jun_net) as jun_net
+>        ,sum(jul_net) as jul_net
+>        ,sum(aug_net) as aug_net
+>        ,sum(sep_net) as sep_net
+>        ,sum(oct_net) as oct_net
+>        ,sum(nov_net) as nov_net
+>        ,sum(dec_net) as dec_net
+> from (
+>     select 
+>        w_warehouse_name
+>        ,w_warehouse_sq_ft
+>        ,w_city
+>        ,w_county
+>        ,w_state
+>        ,w_country
+>        ,'BARIAN' || ',' || 'DHL' as ship_carriers
+>       ,d_year as year_d
+>        ,sum(case when d_moy = 1 
+>                then ws_ext_list_price* ws_quantity else 0 end) as jan_sales
+>        ,sum(case when d_moy = 2 
+>                then ws_ext_list_price* ws_quantity else 0 end) as feb_sales
+>        ,sum(case when d_moy = 3 
+>                then ws_ext_list_price* ws_quantity else 0 end) as mar_sales
+>        ,sum(case when d_moy = 4 
+>                then ws_ext_list_price* ws_quantity else 0 end) as apr_sales
+>        ,sum(case when d_moy = 5 
+>                then ws_ext_list_price* ws_quantity else 0 end) as may_sales
+>        ,sum(case when d_moy = 6 
+>                then ws_ext_list_price* ws_quantity else 0 end) as jun_sales
+>        ,sum(case when d_moy = 7 
+>                then ws_ext_list_price* ws_quantity else 0 end) as jul_sales
+>        ,sum(case when d_moy = 8 
+>                then ws_ext_list_price* ws_quantity else 0 end) as aug_sales
+>        ,sum(case when d_moy = 9 
+>                then ws_ext_list_price* ws_quantity else 0 end) as sep_sales
+>        ,sum(case when d_moy = 10 
+>                then ws_ext_list_price* ws_quantity else 0 end) as oct_sales
+>        ,sum(case when d_moy = 11
+>                then ws_ext_list_price* ws_quantity else 0 end) as nov_sales
+>        ,sum(case when d_moy = 12
+>                then ws_ext_list_price* ws_quantity else 0 end) as dec_sales
+>        ,sum(case when d_moy = 1 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as jan_net
+>        ,sum(case when d_moy = 2
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as feb_net
+>        ,sum(case when d_moy = 3 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as mar_net
+>        ,sum(case when d_moy = 4 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as apr_net
+>        ,sum(case when d_moy = 5 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as may_net
+>        ,sum(case when d_moy = 6 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as jun_net
+>        ,sum(case when d_moy = 7 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as jul_net
+>        ,sum(case when d_moy = 8 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as aug_net
+>        ,sum(case when d_moy = 9 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as sep_net
+>        ,sum(case when d_moy = 10 
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as oct_net
+>        ,sum(case when d_moy = 11
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as nov_net
+>        ,sum(case when d_moy = 12
+>                then ws_net_paid_inc_ship * ws_quantity else 0 end) as dec_net
+>     from
+>          web_sales
+>         ,warehouse
+>         ,date_dim
+>         ,time_dim
+>          ,ship_mode
+>     where
+>            ws_warehouse_sk =  w_warehouse_sk
+>        and ws_sold_date_sk = d_date_sk
+>        and ws_sold_time_sk = t_time_sk
+>        and ws_ship_mode_sk = sm_ship_mode_sk
+>        and d_year = 1999
+>        and t_time between 20066 and 20066+28800 
+>        and sm_carrier in ('BARIAN','DHL')
+>     group by 
+>        w_warehouse_name
+>        ,w_warehouse_sq_ft
+>        ,w_city
+>        ,w_county
+>        ,w_state
+>        ,w_country
+>       ,d_year
+> union all
+>     select 
+>        w_warehouse_name
+>        ,w_warehouse_sq_ft
+>        ,w_city
+>        ,w_county
+>        ,w_state
+>        ,w_country
+>        ,'BARIAN' || ',' || 'DHL' as ship_carriers
+>       ,d_year as year_d
+>        ,sum(case when d_moy = 1 
+>                then cs_ext_list_price* cs_quantity else 0 end) as jan_sales
+>        ,sum(case when d_moy = 2 
+>                then cs_ext_list_price* cs_quantity else 0 end) as feb_sales
+>        ,sum(case when d_moy = 3 
+>                then cs_ext_list_price* cs_quantity else 0 end) as mar_sales
+>        ,sum(case when d_moy = 4 
+>                then cs_ext_list_price* cs_quantity else 0 end) as apr_sales
+>        ,sum(case when d_moy = 5 
+>                then cs_ext_list_price* cs_quantity else 0 end) as may_sales
+>        ,sum(case when d_moy = 6 
+>                then cs_ext_list_price* cs_quantity else 0 end) as jun_sales
+>        ,sum(case when d_moy = 7 
+>                then cs_ext_list_price* cs_quantity else 0 end) as jul_sales
+>        ,sum(case when d_moy = 8 
+>                then cs_ext_list_price* cs_quantity else 0 end) as aug_sales
+>        ,sum(case when d_moy = 9 
+>                then cs_ext_list_price* cs_quantity else 0 end) as sep_sales
+>        ,sum(case when d_moy = 10 
+>                then cs_ext_list_price* cs_quantity else 0 end) as oct_sales
+>        ,sum(case when d_moy = 11
+>                then cs_ext_list_price* cs_quantity else 0 end) as nov_sales
+>        ,sum(case when d_moy = 12
+>                then cs_ext_list_price* cs_quantity else 0 end) as dec_sales
+>        ,sum(case when d_moy = 1 
+>                then cs_net_profit * cs_quantity else 0 end) as jan_net
+>        ,sum(case when d_moy = 2 
+>                then cs_net_profit * cs_quantity else 0 end) as feb_net
+>        ,sum(case when d_moy = 3 
+>                then cs_net_profit * cs_quantity else 0 end) as mar_net
+>        ,sum(case when d_moy = 4 
+>                then cs_net_profit * cs_quantity else 0 end) as apr_net
+>        ,sum(case when d_moy = 5 
+>                then cs_net_profit * cs_quantity else 0 end) as may_net
+>        ,sum(case when d_moy = 6 
+>                then cs_net_profit * cs_quantity else 0 end) as jun_net
+>        ,sum(case when d_moy = 7 
+>                then cs_net_profit * cs_quantity else 0 end) as jul_net
+>        ,sum(case when d_moy = 8 
+>                then cs_net_profit * cs_quantity else 0 end) as aug_net
+>        ,sum(case when d_moy = 9 
+>                then cs_net_profit * cs_quantity else 0 end) as sep_net
+>        ,sum(case when d_moy = 10 
+>                then cs_net_profit * cs_quantity else 0 end) as oct_net
+>        ,sum(case when d_moy = 11
+>                then cs_net_profit * cs_quantity else 0 end) as nov_net
+>        ,sum(case when d_moy = 12
+>                then cs_net_profit * cs_quantity else 0 end) as dec_net
+>     from
+>          catalog_sales
+>         ,warehouse
+>         ,date_dim
+>         ,time_dim
+>         ,ship_mode
+>     where
+>            cs_warehouse_sk =  w_warehouse_sk
+>        and cs_sold_date_sk = d_date_sk
+>        and cs_sold_time_sk = t_time_sk
+>        and cs_ship_mode_sk = sm_ship_mode_sk
+>        and d_year = 1999
+>        and t_time between 20066 AND 20066+28800 
+>        and sm_carrier in ('BARIAN','DHL')
+>     group by 
+>        w_warehouse_name
+>        ,w_warehouse_sq_ft
+>        ,w_city
+>        ,w_county
+>        ,w_state
+>        ,w_country
+>       ,d_year
+> ) x
+> group by 
+>        w_warehouse_name
+>        ,w_warehouse_sq_ft
+>        ,w_city
+>        ,w_county
+>        ,w_state
+>        ,w_country
+>        ,ship_carriers
+>       ,year_d
+> order by w_warehouse_name
+> limit 100;

--- SQL command prepared.
>>obey explains;
>>explain options 'f' xx;

LC   RC   OP   OPERATOR              OPT       DESCRIPTION           CARD
---- ---- ---- --------------------  --------  --------------------  ---------

37   .    38   root                                                  4.00E+001
36   .    37   firstn                                                4.00E+001
35   .    36   sort_groupby                                          4.00E+001
17   34   35   merge_union                                           4.00E+001
33   .    34   sort_partial_groupby                                  2.00E+001
32   .    33   esp_exchange                    1:48(hash2) (m)       2.00E+001
31   .    32   sort                                                  2.00E+001
30   .    31   hash_partial_groupby                                  2.00E+001
29   19   30   hybrid_hash_join                                      9.78E+006
28   21   29   hybrid_hash_join                                      9.78E+006
27   23   28   hybrid_hash_join                                      4.81E+007
26   25   27   hybrid_hash_join                                      1.42E+008
.    .    26   orc_scan                        CATALOG_SALES         1.42E+009
24   .    25   esp_exchange                    48(rep-b):2(hash2)    2.00E+000
.    .    24   orc_scan                        SHIP_MODE             2.00E+000
22   .    23   esp_exchange                    48(rep-b):2(hash2)    2.91E+004
.    .    22   orc_scan                        TIME_DIM              2.91E+004
20   .    21   esp_exchange                    48(rep-b):2(hash2)    3.73E+002
.    .    20   orc_scan                        DATE_DIM              3.73E+002
18   .    19   esp_exchange                    48(rep-b):2(hash2)    2.00E+001
.    .    18   orc_scan                        WAREHOUSE             2.00E+001
16   .    17   sort_partial_groupby                                  2.00E+001
15   .    16   esp_exchange                    1:48(hash2) (m)       2.00E+001
14   .    15   sort                                                  2.00E+001
13   .    14   hash_partial_groupby                                  2.00E+001
12   2    13   hybrid_hash_join                                      4.96E+006
11   4    12   hybrid_hash_join                                      4.96E+006
10   6    11   hybrid_hash_join                                      2.42E+007
9    8    10   hybrid_hash_join                                      7.19E+007
.    .    9    orc_scan                        WEB_SALES             7.19E+008
7    .    8    esp_exchange                    48(rep-b):2(hash2)    2.00E+000
.    .    7    orc_scan                        SHIP_MODE             2.00E+000
5    .    6    esp_exchange                    48(rep-b):2(hash2)    2.91E+004
.    .    5    orc_scan                        TIME_DIM              2.91E+004
3    .    4    esp_exchange                    48(rep-b):2(hash2)    3.73E+002
.    .    3    orc_scan                        DATE_DIM              3.73E+002
1    .    2    esp_exchange                    48(rep-b):2(hash2)    2.00E+001
.    .    1    orc_scan                        WAREHOUSE             2.00E+001

--- SQL operation complete.
>>exit;

End of MXCI Session

