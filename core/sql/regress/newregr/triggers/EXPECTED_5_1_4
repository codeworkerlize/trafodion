>>
>>set schema CAT1.SCHM;

--- SQL operation complete.
>>obey TEST_5_1_4(set_up);
>>INSERT INTO tab1A VALUES (1,2,3,4);

--- 1 row(s) inserted.
>>INSERT INTO tab1A VALUES (2,3,4,5);

--- 1 row(s) inserted.
>>
>>---------------------------------
>>-- DEFINE TRIGGER atrig41
>>---------------------------------
>>
>>CREATE TRIGGER atrig41
+>AFTER INSERT ON tab1B
+>REFERENCING NEW AS newT
+>UPDATE tab1B SET b=a WHERE a NOT IN (SELECT a FROM newT);

--- SQL operation complete.
>>
>>---------------------------------
>>-- DEFINE TRIGGER atrig42
>>---------------------------------
>>
>>CREATE TRIGGER atrig42
+>AFTER UPDATE ON tab1B
+>insert into tab1a values (0,0,0,0);

--- SQL operation complete.
>>
>>obey TEST_5_1_4(tests);
>>
>>------------------------------------------------------------------
>>--          TEST CASE
>>------------------------------------------------------------------
>>
>>INSERT INTO tab1B (SELECT a, b FROM tab1A);

--- 2 row(s) inserted.
>>
>>------------------------------------------------------------------
>>--          CHECK RSULTS
>>-------------------------------------------------------------------
>>SELECT * FROM tab1a;

A            B            C            D            
-----------  -----------  -----------  -----------  

          0            0            0            0  
          1            2            3            4  
          2            3            4            5  

--- 3 row(s) selected.
>> -- check result
>>
>>SELECT * FROM tab1B;

A            B            
-----------  -----------  

          1            2  
          2            3  

--- 2 row(s) selected.
>> -- check result
>>
>>
>>------------------------------------------------------------------
>>obey TEST_5_1_4(clean_up);
>>
>>DROP TRIGGER atrig41;

--- SQL operation complete.
>>DROP TRIGGER atrig42;

--- SQL operation complete.
>>obey clearTables;
>>SET SCHEMA cat1.schm;

--- SQL operation complete.
>>DELETE FROM tab1A;

--- 3 row(s) deleted.
>>DELETE FROM tab1B;

--- 2 row(s) deleted.
>>
>>DELETE FROM cat2.schm.tab2A;

--- 0 row(s) deleted.
>>DELETE FROM cat2.schm.tab2B;

--- 0 row(s) deleted.
>>DELETE FROM cat3.schm.tab3A;

--- 0 row(s) deleted.
>>
>>SET SCHEMA cat1.schm_alt;

--- SQL operation complete.
>>DELETE FROM tab1A;

--- 0 row(s) deleted.
>>DELETE FROM tab1B;

--- 0 row(s) deleted.
>>
>>SET SCHEMA cat1.schm;

--- SQL operation complete.
>>
>>
>>-- switch schemas
>>set schema CAT1.SCHM_ALT;

--- SQL operation complete.
>>obey TEST_5_1_4(set_up);
>>INSERT INTO tab1A VALUES (1,2,3,4);

--- 1 row(s) inserted.
>>INSERT INTO tab1A VALUES (2,3,4,5);

--- 1 row(s) inserted.
>>
>>---------------------------------
>>-- DEFINE TRIGGER atrig41
>>---------------------------------
>>
>>CREATE TRIGGER atrig41
+>AFTER INSERT ON tab1B
+>REFERENCING NEW AS newT
+>UPDATE tab1B SET b=a WHERE a NOT IN (SELECT a FROM newT);

--- SQL operation complete.
>>
>>---------------------------------
>>-- DEFINE TRIGGER atrig42
>>---------------------------------
>>
>>CREATE TRIGGER atrig42
+>AFTER UPDATE ON tab1B
+>insert into tab1a values (0,0,0,0);

--- SQL operation complete.
>>
>>obey TEST_5_1_4(tests);
>>
>>------------------------------------------------------------------
>>--          TEST CASE
>>------------------------------------------------------------------
>>
>>INSERT INTO tab1B (SELECT a, b FROM tab1A);

--- 2 row(s) inserted.
>>
>>------------------------------------------------------------------
>>--          CHECK RSULTS
>>-------------------------------------------------------------------
>>SELECT * FROM tab1a;

A            B            C            D            
-----------  -----------  -----------  -----------  

          0            0            0            0  
          1            2            3            4  
          2            3            4            5  

--- 3 row(s) selected.
>> -- check result
>>
>>SELECT * FROM tab1B;

A            B            
-----------  -----------  

          1            2  
          2            3  

--- 2 row(s) selected.
>> -- check result
>>
>>
>>------------------------------------------------------------------
>>
>>-- end logging
>>LOG;
