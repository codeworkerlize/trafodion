>>obey TEST_2_1_1(test1);
>>
>>CREATE TRIGGER tr1 AFTER UPDATE
+>	ON tab1A
+>	REFERENCING OLD AS oldrow, NEW AS newrow
+>	FOR EACH ROW
+>		WHEN (oldrow.a > newrow.b)
+>		INSERT INTO tab1B VALUES (oldrow.b, 0);

--- SQL operation complete.
>>
>>set schema cat1.HP_DEFINITION_SCHEMA;

--- SQL operation complete.
>>
>>-------------------------
>>-- cat1, TRIGGERS      --
>>-------------------------
>>select activation_time,operation,granularity,columns_implicit,enabled 
+>from triggers where
+>trigger_uid in (select object_uid from objects where object_name='TR1');

ACTIVATION_TIME  OPERATION  GRANULARITY  COLUMNS_IMPLICIT  ENABLED
---------------  ---------  -----------  ----------------  -------

A                U          R            Y                 Y      

--- 1 row(s) selected.
>>
>>------------------------------
>>-- cat1, TRIGGERS_CAT_USAGE --
>>------------------------------
>>select count(*) from triggers_cat_usage where
+>trigger_uid in (select object_uid from objects where object_name='TR1');

(EXPR)              
--------------------

                   1

--- 1 row(s) selected.
>>
>>-------------------------
>>-- cat1, TRIGGER_USED  --
>>-------------------------
>>select 	SUBSTRING( obj1.object_name FROM 1 FOR 8 ) TRIGGER_NAME, 
+>       	SUBSTRING( obj2.object_name FROM 1 FOR 8 ) OBJ_NAME, 
+>	used_col_num, operation, is_subject_table
+>from trigger_used, objects obj1, objects obj2
+>where trigger_uid = obj1.object_uid and used_object_uid = obj2.object_uid;

TRIGGER_NAME  OBJ_NAME  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  --------  ------------  ---------  ----------------

TR1           TAB1A               -1  S          N               
TR1           TAB1A               -1  U          Y               
TR1           TAB1B               -1  I          N               

--- 3 row(s) selected.
>>
>>-------------------------
>>-- OBJECTS --
>>-------------------------
>>select 	SUBSTRING( object_name FROM 1 FOR 8 ) TRIGGER_NAME
+>from objects, triggers
+>where object_uid = trigger_uid;

TRIGGER_NAME
------------

TR1         

--- 1 row(s) selected.
>>
>>-------------------------
>>-- TEXT --
>>-------------------------
>>select SUBSTRING( text FROM 1 FOR 220 ) TEXT
+>from text, triggers
+>where object_uid = trigger_uid;

TEXT
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TRIGGER CAT1.SCHM.TR1 AFTER UPDATE ON CAT1.SCHM.TAB1A REFERENCING OLD AS OLDROW, NEW AS NEWROW FOR EACH ROW WHEN (OLDROW.A > NEWROW.B) INSERT INTO CAT1.SCHM.TAB1B VALUES (OLDROW.B, 0)                              

--- 1 row(s) selected.
>>
>>------------------------------------------------------------------
>>-- 	TEST CASE  2.1.2  "Used object is in another catalog"
>>------------------------------------------------------------------
>>obey TEST_2_1_1(test2);
>>
>>SET SCHEMA cat2.schm;

--- SQL operation complete.
>>
>>CREATE TRIGGER tr2 AFTER DELETE ON tab2A
+>REFERENCING OLD AS oldrow 
+>FOR EACH ROW
+>INSERT INTO cat1.schm.tab1B VALUES (oldrow.a, oldrow.b);

--- SQL operation complete.
>>
>>set schema cat2.HP_DEFINITION_SCHEMA;

--- SQL operation complete.
>>
>>-- Some sanity checks in local catalog
>>
>>select activation_time,operation,granularity,columns_implicit,enabled 
+>from triggers where
+>trigger_uid in (select object_uid from objects where object_name='TR2');

ACTIVATION_TIME  OPERATION  GRANULARITY  COLUMNS_IMPLICIT  ENABLED
---------------  ---------  -----------  ----------------  -------

A                D          R            Y                 Y      

--- 1 row(s) selected.
>>
>>select count(*) from triggers_cat_usage where
+>trigger_uid in (select object_uid from objects where object_name='TR2');

(EXPR)              
--------------------

                   2

--- 1 row(s) selected.
>>
>>select SUBSTRING( object_name FROM 1 FOR 8 ) TRIGGER_NAME
+>from objects, triggers
+>where object_uid = trigger_uid;

TRIGGER_NAME
------------

TR2         

--- 1 row(s) selected.
>>
>>select SUBSTRING( text FROM 1 FOR 156 ) TEXT
+>from text, triggers
+>where object_uid = trigger_uid;

TEXT
------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TRIGGER CAT2.SCHM.TR2 AFTER DELETE ON CAT2.SCHM.TAB2A REFERENCING OLD AS OLDROW FOR EACH ROW INSERT INTO CAT1.SCHM.TAB1B VALUES (OLDROW.A, OLDROW.B) 

--- 1 row(s) selected.
>>
>>select 	SUBSTRING( obj1.object_name FROM 1 FOR 8 ) TRIGGER_NAME, 
+>	SUBSTRING( obj2.object_name FROM 1 FOR 8 ) OBJ_NAME, 
+>	used_col_num, operation, is_subject_table
+>from trigger_used, objects obj1, objects obj2
+>where trigger_uid = obj1.object_uid and used_object_uid = obj2.object_uid;

TRIGGER_NAME  OBJ_NAME  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  --------  ------------  ---------  ----------------

TR2           TAB2A               -1  D          Y               
TR2           TAB2A               -1  S          N               

--- 2 row(s) selected.
>>
>>-- Check the "other catalog" (cat1) where the "used object" is located
>>
>>select 	SUBSTRING( obj1.object_name FROM 1 FOR 8 ) OBJ_NAME,
+>	SUBSTRING( obj2.object_name FROM 1 FOR 8 ) TRIGGER_NAME,
+>	used_col_num, operation, is_subject_table
+>from cat1.HP_DEFINITION_SCHEMA.trigger_used,
+>     cat1.HP_DEFINITION_SCHEMA.objects obj1,
+>     cat2.HP_DEFINITION_SCHEMA.objects obj2
+>where trigger_uid = obj2.object_uid and used_object_uid = obj1.object_uid;

OBJ_NAME  TRIGGER_NAME  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
--------  ------------  ------------  ---------  ----------------

TAB1B     TR2                     -1  I          N               

--- 1 row(s) selected.
>>
>>------------------------------------------------------------------
>>-- 	TEST CASE  2.1.3  "The Subject Table is in another catalog"
>>------------------------------------------------------------------
>>obey TEST_2_1_1(test3);
>>
>>SET SCHEMA cat1.schm;

--- SQL operation complete.
>>
>>CREATE TRIGGER tr3 AFTER UPDATE OF (a) ON cat2.schm.tab2A
+>REFERENCING NEW AS newrow
+>FOR EACH ROW
+>WHEN (newrow.b = 3)
+>INSERT INTO tab1B VALUES (newrow.a, 22);

--- SQL operation complete.
>>
>>set schema cat1.HP_DEFINITION_SCHEMA;

--- SQL operation complete.
>>
>>-- Some sanity checks in local catalog
>>
>>select activation_time,operation,granularity,columns_implicit,enabled 
+>from triggers where
+>trigger_uid in (select object_uid from objects where object_name='TR3');

ACTIVATION_TIME  OPERATION  GRANULARITY  COLUMNS_IMPLICIT  ENABLED
---------------  ---------  -----------  ----------------  -------

A                U          R            N                 Y      

--- 1 row(s) selected.
>>
>>select count(*) from triggers_cat_usage where
+>trigger_uid in (select object_uid from objects where object_name='TR3');

(EXPR)              
--------------------

                   2

--- 1 row(s) selected.
>>
>>select SUBSTRING( object_name FROM 1 FOR 8 ) TRIGGER_NAME
+>from objects, triggers
+>where object_uid = trigger_uid;

TRIGGER_NAME
------------

TR1         
TR3         

--- 2 row(s) selected.
>>
>>select SUBSTRING( text FROM 1 for 220 ) TEXT
+>from text, triggers
+>where object_uid = trigger_uid;

TEXT
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TRIGGER CAT1.SCHM.TR1 AFTER UPDATE ON CAT1.SCHM.TAB1A REFERENCING OLD AS OLDROW, NEW AS NEWROW FOR EACH ROW WHEN (OLDROW.A > NEWROW.B) INSERT INTO CAT1.SCHM.TAB1B VALUES (OLDROW.B, 0)                              
CREATE TRIGGER CAT1.SCHM.TR3 AFTER UPDATE OF (A) ON CAT2.SCHM.TAB2A REFERENCING NEW AS NEWROW FOR EACH ROW WHEN (NEWROW.B = 3) INSERT INTO CAT1.SCHM.TAB1B VALUES (NEWROW.A, 22)                                            

--- 2 row(s) selected.
>>
>>select 	SUBSTRING( obj1.object_name FROM 1 FOR 8 ) TRIGGER_NAME,
+>	SUBSTRING( obj2.object_name FROM 1 FOR 8 ) OBJ_NAME,
+>	used_col_num, operation, is_subject_table
+>from trigger_used, objects obj1, objects obj2
+>where trigger_uid = obj1.object_uid and used_object_uid = obj2.object_uid;

TRIGGER_NAME  OBJ_NAME  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  --------  ------------  ---------  ----------------

TR1           TAB1A               -1  S          N               
TR1           TAB1A               -1  U          Y               
TR1           TAB1B               -1  I          N               
TR3           TAB1B               -1  I          N               

--- 4 row(s) selected.
>>
>>-- Check the "other catalog" (cat2) where the subject table is located
>>
>>select count(*) from cat2.HP_DEFINITION_SCHEMA.triggers_cat_usage
+>where
+>trigger_uid in (select object_uid from objects where object_name='TR3');

(EXPR)              
--------------------

                   0

--- 1 row(s) selected.
>>-- should return 0
>>
>>-- Check the "used by triggers" MD table in cat2 
>>
>>select count(*) from cat2.HP_DEFINITION_SCHEMA.trigger_used
+>where
+>trigger_uid in (select object_uid from objects where object_name='TR3');

(EXPR)              
--------------------

                   2

--- 1 row(s) selected.
>>-- should return the value 2
>>
>>obey TEST_2_1_1(test4);
>>----------------------------------------------------------------------------
>>--    TEST CASE  2.1.4  "The trigger has THE SAME NAME as the Subject Table"
>>----------------------------------------------------------------------------
>>
>>SET SCHEMA cat3.schm;

--- SQL operation complete.
>>
>>CREATE TRIGGER tab3A BEFORE UPDATE OF (b) ON cat3.schm.tab3A
+>REFERENCING OLD AS oldrow, NEW AS newrow
+>FOR EACH ROW
+>WHEN (newrow.a > oldrow.a)
+>SET newrow.b = oldrow.b;

--- SQL operation complete.
>>
>>set schema cat3.HP_DEFINITION_SCHEMA;

--- SQL operation complete.
>>
>>-- some checks in local catalog
>>
>>select count(*) from objects where object_name='TAB3A';

(EXPR)              
--------------------

                   2

--- 1 row(s) selected.
>>-- should return the value 2 (one for the trigger TAB3A, one for the table)
>>
>>select count(*) from triggers_cat_usage;

(EXPR)              
--------------------

                   1

--- 1 row(s) selected.
>>-- should return 1 line 
>>
>>select used_col_num, operation, is_subject_table from trigger_used;

USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  ---------  ----------------

          -1  S          N               
           2  U          Y               

--- 2 row(s) selected.
>>-- should return 2 lines
>>
>>------------------------------------------------------------------
>>--    TEST CASE  2.1.5  "Complex triggers accross 3 catalogs, with nested SQL"
>>------------------------------------------------------------------
>>obey TEST_2_1_1(test5);
>>
>>SET SCHEMA cat1.schm;

--- SQL operation complete.
>>
>>CREATE TRIGGER tr4 AFTER UPDATE OF (b) ON cat2.schm.tab2A
+>REFERENCING OLD AS oldtab, NEW AS newtab
+>FOR EACH STATEMENT
+>UPDATE cat3.schm.tab3A
+> SET a=3 WHERE (a,b) IN 
+>    (SELECT t1.b, t2.a FROM cat1.schm.tab1A t1, cat1.schm.tab1A t2);

--- SQL operation complete.
>>
>>CREATE TRIGGER tr5 AFTER DELETE ON cat2.schm.tab2B
+>REFERENCING OLD AS oldrow
+>FOR EACH ROW
+>UPDATE cat1.schm.v211
+>  SET b=oldrow.a, a=(SELECT MAX(b) from cat1.schm.tab1B);

--- SQL operation complete.
>>
>>set schema cat1.HP_DEFINITION_SCHEMA;

--- SQL operation complete.
>>
>>-- some checks in local catalog
>>
>>select SUBSTRING( object_name FROM 1 FOR 8 ) TRIGGER_NAME, operation, granularity
+>from objects obj, triggers trg
+>where obj.object_uid = trg.trigger_uid ;

TRIGGER_NAME  OPERATION  GRANULARITY
------------  ---------  -----------

TR1           U          R          
TR3           U          R          
TR4           U          S          
TR5           D          R          

--- 4 row(s) selected.
>>-- Should return 4 rows (for tr1, tr3, tr4, tr5)
>>
>>select count(*) from triggers_cat_usage;

(EXPR)              
--------------------

                   7

--- 1 row(s) selected.
>>-- Should return the value 7
>>
>>select SUBSTRING( TEXT FROM 1 FOR 300 ) TEXT from TEXT where
+>object_uid in (select object_uid from objects where object_name='TR4');

TEXT
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TRIGGER CAT1.SCHM.TR4 AFTER UPDATE OF (B) ON CAT2.SCHM.TAB2A REFERENCING OLD AS OLDTAB, NEW AS NEWTAB FOR EACH STATEMENT UPDATE CAT3.SCHM.TAB3A SET A = 3 WHERE (CAT3.SCHM.TAB3A.A, CAT3.SCHM.TAB3A.B) IN(SELECT T1.B, T2.A FROM CAT1.SCHM.TAB1A T1, CAT1.SCHM.TAB1A T2)                             

--- 1 row(s) selected.
>>
>>-- and in the other catalogs
>>
>>select tu2.used_col_num, tu2.operation , tu2.is_subject_table,
+>       tu3.used_col_num, tu3.operation , tu3.is_subject_table
+>from cat2.HP_DEFINITION_SCHEMA.trigger_used tu2,
+>     cat3.HP_DEFINITION_SCHEMA.trigger_used tu3
+>where tu2.trigger_uid = tu3.trigger_uid ;

USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  ---------  ----------------  ------------  ---------  ----------------

           1  U          Y                           -1  S          N               
           1  U          Y                            1  U          N               

--- 2 row(s) selected.
>>-- Should return 1 rows (for tr4 )
>>
>>select tu1.used_col_num, tu1.operation , tu1.is_subject_table,
+>       tu2.used_col_num, tu2.operation , tu2.is_subject_table
+>from cat1.HP_DEFINITION_SCHEMA.trigger_used tu1,
+>     cat2.HP_DEFINITION_SCHEMA.trigger_used tu2
+>where tu1.trigger_uid = tu2.trigger_uid ;

USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  ---------  ----------------  ------------  ---------  ----------------

          -1  S          N                            1  U          Y               
          -1  I          N                           -1  D          Y               
          -1  I          N                           -1  S          N               
          -1  I          N                           -1  S          N               
          -1  I          N                            0  U          Y               
          -1  S          N                           -1  D          Y               
          -1  S          N                           -1  S          N               
           0  U          N                           -1  D          Y               
           0  U          N                           -1  S          N               
           1  U          N                           -1  D          Y               
           1  U          N                           -1  S          N               

--- 11 row(s) selected.
>>-- Should return 11 rows, for tr2, tr3, tr4, tr5 )
>>
>>select tu1.used_col_num, tu1.operation , tu1.is_subject_table,
+>       tu3.used_col_num, tu3.operation , tu3.is_subject_table
+>from cat1.HP_DEFINITION_SCHEMA.trigger_used tu1,
+>     cat3.HP_DEFINITION_SCHEMA.trigger_used tu3
+>where tu1.trigger_uid = tu3.trigger_uid ;

USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  ---------  ----------------  ------------  ---------  ----------------

          -1  S          N                           -1  S          N               
          -1  S          N                            1  U          N               

--- 2 row(s) selected.
>>-- Should return 1 rows (for tr4)
>>
>>------------------------------------------------------------------
>>--    TEST CASE  2.1.6  "Drop trigger"
>>------------------------------------------------------------------
>>obey TEST_2_1_1(test6);
>>
>>SET SCHEMA cat3.schm;

--- SQL operation complete.
>>
>>DROP TRIGGER cat1.schm.tr1;

--- SQL operation complete.
>>
>>set schema cat1.HP_DEFINITION_SCHEMA;

--- SQL operation complete.
>>
>>--  some tests in cat1
>>
>>select activation_time,operation,granularity,columns_implicit,enabled 
+>from triggers where
+>trigger_uid in (select object_uid from objects where object_name='TR1');

--- 0 row(s) selected.
>>
>>select count(*) from triggers_cat_usage where
+>trigger_uid in (select object_uid from objects where object_name='TR1');

(EXPR)              
--------------------

                   0

--- 1 row(s) selected.
>>
>>select 	SUBSTRING( obj1.object_name FROM 1 FOR 8 ) TRIGGER_NAME,
+>	SUBSTRING( obj2.object_name FROM 1 FOR 8 ) USED_OBJ,
+>	used_col_num, operation, is_subject_table
+>from trigger_used, objects obj1, objects obj2
+>where trigger_uid = obj1.object_uid and used_object_uid = obj2.object_uid;

TRIGGER_NAME  USED_OBJ  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  --------  ------------  ---------  ----------------

TR4           TAB1A               -1  S          N               
TR5           TAB1B               -1  S          N               
TR3           TAB1B               -1  I          N               
TR5           V211                 0  U          N               
TR5           V211                 1  U          N               

--- 5 row(s) selected.
>>
>>select SUBSTRING( object_name FROM 1 FOR 8 ) TRIGGER_NAME
+>from objects, triggers
+>where object_uid = trigger_uid;

TRIGGER_NAME
------------

TR3         
TR4         
TR5         

--- 3 row(s) selected.
>>
>>-- was the trigger's text erased ?
>>select text from text, triggers
+>where object_uid in (select object_uid from objects where object_name='TR1');

--- 0 row(s) selected.
>>
>>------------------------------------------------------------------
>>--    TEST CASE  2.1.7  "Drop the rest of the triggers"
>>------------------------------------------------------------------
>>obey TEST_2_1_1(test7);
>>
>>DROP TRIGGER cat2.schm.tr2;

--- SQL operation complete.
>>DROP TRIGGER cat1.schm.tr3;

--- SQL operation complete.
>>DROP TRIGGER cat1.schm.tr4;

--- SQL operation complete.
>>DROP TRIGGER cat1.schm.tr5;

--- SQL operation complete.
>>DROP TRIGGER cat3.schm.tab3A;

--- SQL operation complete.
>>
>>--------------------
>>-- cat1, TRIGGERS --
>>--------------------
>>select * from cat1.HP_DEFINITION_SCHEMA.triggers;

--- 0 row(s) selected.
>>
>>------------------------------
>>-- cat1, TRIGGERS_CAT_USAGE --
>>------------------------------
>>select * from cat1.HP_DEFINITION_SCHEMA.triggers_cat_usage;

--- 0 row(s) selected.
>>
>>------------------------------
>>-- cat2, TRIGGERS_CAT_USAGE --
>>------------------------------
>>select * from cat2.HP_DEFINITION_SCHEMA.triggers_cat_usage;

--- 0 row(s) selected.
>>
>>------------------------------
>>-- cat3, TRIGGERS_CAT_USAGE --
>>------------------------------
>>select * from cat3.HP_DEFINITION_SCHEMA.triggers_cat_usage;

--- 0 row(s) selected.
>>
>>-------------------------
>>-- cat1, TRIGGERS_USED --
>>-------------------------
>>select * from cat1.HP_DEFINITION_SCHEMA.trigger_used;

--- 0 row(s) selected.
>>
>>-------------------------
>>-- cat2, TRIGGERS_USED --
>>-------------------------
>>select * from cat2.HP_DEFINITION_SCHEMA.trigger_used;

--- 0 row(s) selected.
>>
>>-------------------------
>>-- cat3, TRIGGERS_USED --
>>-------------------------
>>select * from cat3.HP_DEFINITION_SCHEMA.trigger_used;

--- 0 row(s) selected.
>>
>>-- test 8 is to repeat test 3
>>obey TEST_2_1_1(test3);
>>
>>SET SCHEMA cat1.schm;

--- SQL operation complete.
>>
>>CREATE TRIGGER tr3 AFTER UPDATE OF (a) ON cat2.schm.tab2A
+>REFERENCING NEW AS newrow
+>FOR EACH ROW
+>WHEN (newrow.b = 3)
+>INSERT INTO tab1B VALUES (newrow.a, 22);

--- SQL operation complete.
>>
>>set schema cat1.HP_DEFINITION_SCHEMA;

--- SQL operation complete.
>>
>>-- Some sanity checks in local catalog
>>
>>select activation_time,operation,granularity,columns_implicit,enabled 
+>from triggers where
+>trigger_uid in (select object_uid from objects where object_name='TR3');

ACTIVATION_TIME  OPERATION  GRANULARITY  COLUMNS_IMPLICIT  ENABLED
---------------  ---------  -----------  ----------------  -------

A                U          R            N                 Y      

--- 1 row(s) selected.
>>
>>select count(*) from triggers_cat_usage where
+>trigger_uid in (select object_uid from objects where object_name='TR3');

(EXPR)              
--------------------

                   2

--- 1 row(s) selected.
>>
>>select SUBSTRING( object_name FROM 1 FOR 8 ) TRIGGER_NAME
+>from objects, triggers
+>where object_uid = trigger_uid;

TRIGGER_NAME
------------

TR3         

--- 1 row(s) selected.
>>
>>select SUBSTRING( text FROM 1 for 220 ) TEXT
+>from text, triggers
+>where object_uid = trigger_uid;

TEXT
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TRIGGER CAT1.SCHM.TR3 AFTER UPDATE OF (A) ON CAT2.SCHM.TAB2A REFERENCING NEW AS NEWROW FOR EACH ROW WHEN (NEWROW.B = 3) INSERT INTO CAT1.SCHM.TAB1B VALUES (NEWROW.A, 22)                                            

--- 1 row(s) selected.
>>
>>select 	SUBSTRING( obj1.object_name FROM 1 FOR 8 ) TRIGGER_NAME,
+>	SUBSTRING( obj2.object_name FROM 1 FOR 8 ) OBJ_NAME,
+>	used_col_num, operation, is_subject_table
+>from trigger_used, objects obj1, objects obj2
+>where trigger_uid = obj1.object_uid and used_object_uid = obj2.object_uid;

TRIGGER_NAME  OBJ_NAME  USED_COL_NUM  OPERATION  IS_SUBJECT_TABLE
------------  --------  ------------  ---------  ----------------

TR3           TAB1B               -1  I          N               

--- 1 row(s) selected.
>>
>>-- Check the "other catalog" (cat2) where the subject table is located
>>
>>select count(*) from cat2.HP_DEFINITION_SCHEMA.triggers_cat_usage
+>where
+>trigger_uid in (select object_uid from objects where object_name='TR3');

(EXPR)              
--------------------

                   0

--- 1 row(s) selected.
>>-- should return 0
>>
>>-- Check the "used by triggers" MD table in cat2 
>>
>>select count(*) from cat2.HP_DEFINITION_SCHEMA.trigger_used
+>where
+>trigger_uid in (select object_uid from objects where object_name='TR3');

(EXPR)              
--------------------

                   2

--- 1 row(s) selected.
>>-- should return the value 2
>>
>>LOG;
