-- ============================================================================
-- TEST139 - tests grant and revoke privileges
--
-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
--
-- This tests the following commands:
--
--   GRANT <privilege> ON <object> TO <grantee-list>
--   REVOKE <privilege> ON <object> FROM <grantee-list>
--
-- Sections:
--   clean_up - removes database setup
--   set_up - prepares for test
--   tests - runs tests
-- ============================================================================

obey TEST139(clean_up);
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
insert into "_MD_".defaults values ('CAT_ANSI_PRIVS_FOR_TENANT', 'ON', 'for testing', 0);
log LOG139 clear;
obey TEST139(set_up);
obey TEST139(create_db);
obey TEST139(tests);
-- sh sqlci -i "TEST139(authorized)" -u sql_user4;
log;
obey TEST139(clean_up);
exit;

?section clean_up
-- drop database
drop schema t139sch cascade;
revoke t139_role1 from sq1_user1;
drop role t139_role1;
delete from "_MD_".defaults where attribute = 'TRAF_CLEAR_METADATA_CACHE';
revoke component privilege DML_SELECT_METADATA on sql_operations from sql_user1;

delete from "_MD_".defaults where attribute = 'CAT_ANSI_PRIVS_FOR_TENANT';

?section create_db
create shared schema t139sch;
set schema t139sch;
create table teams
  (team_number int not null primary key,
   team_name char(20) not null,
   team_contact varchar(50) not null,
   team_contact_number char (10) not null
   )
  ;

alter table teams add constraint valid_team_no check (team_number > 0);

insert into teams values
   (1, 'White Socks', 'Sam','4082282222'),
   (2, 'Giants', 'Joe', '5102839483'),
   (3, 'Cardinals', 'Stella', '9513849384'),
   (4, 'Indians', 'Matt', '5128383748'),
   (5, 'Tigers', 'Ronit', '6198273827');

create table games
   ( home_team_number int not null,
     visitor_team_number int not null,
     game_number int not null primary key,
     game_time timestamp not null,
     game_location varchar(50) not null)
  ;

alter table games add constraint valid_game_number check (game_number > 0);

insert into games values
   (1, 2, 1, timestamp '2009-04-23 19:30:00', 'California'),
   (1, 3, 2, timestamp '2009-04-24 19:30:00', 'California'),
   (1, 4, 3, timestamp '2009-04-25 10:00:00', 'Oklahoma'),
   (2, 3, 4, timestamp '2009-04-25 13:30:00', 'Michigan'),
   (1, 5, 5, timestamp '2009-04-25 15:00:00', 'Oklahoma'),
   (2, 5, 6, timestamp '2009-04-27 17:00:00', 'New York'),
   (3, 4, 7, timestamp '2009-04-28 17:00:00', 'Florida'),
   (4, 2, 8, current_timestamp, 'Missouri');

?section set_up
set schema "_PRIVMGR_MD_";
prepare get_owner_privs from
select distinct
   substring (object_name,1,10) as object_name,
   object_type as type,
   substring(authname(grantee_id),1,10) as grantee,
   privileges_bitmap,
   grantable_bitmap
from object_privileges 
where grantor_id = -2
    and object_uid in 
     (select object_uid
      from "_MD_".objects
      where object_type in ('VI','BT','LB','UR')
        and schema_name in ('_PRIVMGR_MD_', 'T139SCH'))
  order by 1, 2
;

prepare object_privs from
select distinct
  object_type as type,
  substring (grantor_name,1,10) as grantor,
  substring (grantee_name,1,10) as grantee,
  case when bitextract(privileges_bitmap,63,1) = 1 then 'S'
       else '-' end ||
  case when bitextract(privileges_bitmap,62,1) = 1 then 'I'
        else '-' end ||
  case when bitextract(privileges_bitmap,61,1) = 1 then 'D'
        else '-' end ||
  case when bitextract(privileges_bitmap,60,1) = 1 then 'U'
        else '-' end ||
  case when bitextract(privileges_bitmap,59,1) = 1 then 'G'
        else '-' end ||
  case when bitextract(privileges_bitmap,58,1) = 1 then 'R'
        else '-' end ||
  case when bitextract(privileges_bitmap,57,1) = 1 then 'E'
        else '-' end as privs
from "_PRIVMGR_MD_".object_privileges
where object_name like ?tblname
order by 1, 2, 3; 

prepare all_privs from
select distinct
  object_type as type,
  substring (object_name,1,20) as objname,
  substring (grantor_name,1,10) as grantor,
  substring (grantee_name,1,10) as grantee,
  privileges_bitmap as privs,
  grantable_bitmap as wgo
from "_PRIVMGR_MD_".object_privileges
where object_uid in
   (select object_uid from "_MD_".objects
    where schema_name in ('T139SCH'))
ORDER BY 1, 2,3,4;
 

?section tests
-- =================================================================
-- this set of tests run basic grant and revoke tests
-- =================================================================
set schema t139sch;

grant component privilege DML_SELECT_METADATA on sql_operations to sql_user1;

set param ?tblname '%GAMES';

-- test SELECT, UPDATE, DELETE, INSERT on games
grant select on games to sql_user1;
showddl games;
-- make sure user1 can select but not other operations
changeuser sql_user1;
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
obey TEST139(user1_dml);

changeuser db__root;
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
set schema t139sch;
grant update on games to sql_user1;
showddl games;

-- make sure user 1 can select and update but not other operations
changeuser sql_user1;
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
obey TEST139(user1_dml);

changeuser db__root;
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
set schema t139sch;
grant delete, insert, references on games to sql_user1;
showddl games;

-- make sure user1 can do all dml
changeuser sql_user1;
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
obey TEST139(user1_dml);

changeuser db__root;
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
set schema t139sch;

-- verify that caches are cleared instead of reset when default
-- TRAF_CLEAR_METADATA_CACHE is ON
-- By default, it should be OFF
insert into "_MD_".defaults values ('TRAF_CLEAR_METADATA_CACHE', 'ON', 'privs2, test139', 0);
sh sqlci -i "TEST139(caching)" -u sql_user1;
update "_MD_".defaults set attr_value = 'OFF' where attribute = 'TRAF_CLEAR_METADATA_CACHE';
sh sqlci -i "TEST139(caching)" -u sql_user1;
delete from "_MD_".defaults where attribute = 'TRAF_CLEAR_METADATA_CACHE';

execute object_privs;
 
-- test revoke SELECT, UPDATE, DELETE, INSERT, REFERENCES 

revoke update on games from sql_user1;
showddl games;
revoke all_dml on games from sql_user2;
showddl games;
revoke all_dml on teams from sql_user3;
showddl teams;

-- test for JIRA 2177
create role t139_role1;
grant role t139_role1 to sql_user1 with admin option;
grant insert(team_contact,team_contact_number), select on teams to t139_role1;
showddl teams;
revoke insert(team_contact,team_contact_number), select on teams from t139_role1;
showddl teams;

-- test for JIRA 2196/2197
grant select,insert ,delete, update ,references(game_time) on games to sql_user1 with grant option;
showddl games;

-- user1 grants/revokes should succeed
changeuser sql_user1;
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
obey TEST139(user1_grants);

changeuser db__root;
cqd SHOWDDL_DISPLAY_PRIVILEGE_GRANTS 'ON';
set schema t139sch;
revoke select,insert ,delete, update ,references(game_time) on games 
   from sql_user1;
revoke role t139_role1 from sql_user1;
drop role t139_role1;

?section user1_dml
values (current_user);
set schema t139sch;
select count(*) from games;
update games set game_location = 'Ohio' where game_location = 'New York';
update games set game_location = 'New York' where game_location = 'Ohio'; 
insert into games values (4, 5, 9, current_timestamp, 'Ohio');
select count(*) from games;
delete from games where game_number = 9;
select count(*) from games;

?section user1_grants
values (current_user);
set schema t139sch;
grant select(home_team_number,game_time),
      insert(home_team_number),
      update(visitor_team_number,game_time),
      references(game_time) 
on games to t139_role1;
showddl games;
revoke select(home_team_number,game_time),
      insert(home_team_number),
      update(visitor_team_number,game_time),
      references(game_time)
on games from t139_role1;

?section caching
log LOG139; 
values (current_user); 
set schema t139sch;

select count(*) from games;
select num_entries from table (natablecache('user', 'local'));

changeuser sql_user2;
select num_entries from table (natablecache('user', 'local'));
