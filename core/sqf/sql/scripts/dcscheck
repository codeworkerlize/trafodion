#!/bin/bash
# @@@ START COPYRIGHT @@@ 
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# @@@ END COPYRIGHT @@@

function rm_tmp_files {

  rm -f $dcstmp $tmp_ps

}

function get_component_count {
    lv_component_count=`< $tmp_ps grep -i "$1 " | awk -v colnum=${gv_node_sqcheck_col_num_with_count} 'BEGIN {cnt=0} {cnt=cnt+$colnum;} END {print cnt;}'`

   echo ${lv_component_count}
}

cfg_mxo_cnt=0
act_mxo_cnt=0
down_mxo_cnt=0
cfg_dcsmaster_cnt=0
actual_dcsmaster_cnt=0
down_dcsmaster_cnt=0
cfg_dcsserver_cnt=0
actual_dcsserver_cnt=0
down_dcsserver_cnt=0
activeMaster=localhost

declare -i gv_node_sqcheck_col_num_with_count=3

L_PDSH="edb_pdsh -a" 

activeMaster=`$DCS_INSTALL_DIR/bin/getActiveMaster.sh`
if [[ "$1" == "-active" ]]; then
   echo $activeMaster
   exit 0
fi

dcstmp=`mktemp --tmpdir=${TRAF_VAR} --suffix=.tmp dcschk_dcstmp_XXXXXXX`
if [[ $? != 0 ]]; then
    echo "Error while getting a temporary file for dcstmp. Exiting."
    exit 3
fi

tmp_ps=`mktemp --tmpdir=${TRAF_VAR} --suffix=.tmp dcschk_tmp_ps_XXXXXXX`
if [[ $? != 0 ]]; then
    rm_tmp_files
    echo "Error while getting a temporary file for tmp_ps. Exiting."
    exit 3
fi

if [ -d $DCS_INSTALL_DIR ];then
  echo
### Get the contents of dcs-site.xml
  python $DCS_INSTALL_DIR/bin/scripts/parse_dcs_site.py > $dcstmp
  masterport=`cat $dcstmp |grep "^dcs.master.port:"| cut -f2 -d":"`
 
### Get the node where the active master is running
   if [[ ! -z $CLUSTERNAME ]]; then
     if ( [ "$ENABLE_HA" == "true" ] || [ "$KEEPALIVED" == "true" ] ); then
        listenIP=`cat $dcstmp |grep "^dcs.master.floating.ip.external.ip.address:"| cut -f2 -d":"`
        echo "DcsMaster virtual address : $listenIP"
     fi

     if [[ -f "/etc/trafodion/trafodion_config" || -f "/etc/trafodion/conf/client_config" ]]; then
       # get dcs master nodes from 'masters' config file
       configuredDcsMasterNodes=`cat /etc/trafodion/conf/dcs/masters | sed ':a;N;$!ba; s/\n/ /g'`
     else    
       configuredDcsMasterNodes="localhost"
     fi


     ### Get the configured number of DcsMaster's
     cfg_dcsmaster_cnt=`echo ${configuredDcsMasterNodes} |/usr/bin/wc -w`
   else
        listenIP=$activeMaster
        cfg_dcsmaster_cnt=1
   fi

### Get the list of mxosrvr, DcsServer and DcsMaster
  cmd="node_sqcheck"
  $L_PDSH "$cmd" > $tmp_ps 2>/dev/null

### Get the configured number of DcsServer and mxosrvr
   serversfile="$(cat ${TRAF_CONF}/dcs/servers 2>/dev/null)"
   if [[ -n "$serversfile" ]]; then
      let cfg_mxo_cnt=`echo "$serversfile" |awk '{if ($2=="") k=1;else k=$2;cnt+=k} END {print cnt}'`
      let cfg_dcsserver_cnt=`echo "$serversfile" |awk '{if ($2=="") p=1;else p+=1;} END {print p}'`
   fi

### Check if there are any DcsMaster and DcsServer's that are started
   actual_dcsmaster_cnt=$(get_component_count DcsMaster)
   actual_dcsserver_cnt=$(get_component_count DcsServer)

### Get the count of DcsMaster & DcsServers that are stopped
   if ( [ "$cfg_dcsserver_cnt" '!=' "$actual_dcsserver_cnt" ] ); then
     let down_dcsserver_cnt=cfg_dcsserver_cnt-actual_dcsserver_cnt
   else
     down_dcsserver_cnt=''
   fi

   if ( [ "$cfg_dcsmaster_cnt" '!=' "$actual_dcsmaster_cnt" ] ); then
     let down_dcsmaster_cnt=cfg_dcsmaster_cnt-actual_dcsmaster_cnt
   else
     down_dcsmaster_cnt=''
   fi

### Get the actual number of mxosrvrs
  let act_mxo_cnt=$(get_component_count mxosrvr)
  if ( [ "$cfg_mxo_cnt" '!=' "$act_mxo_cnt" ] ); then 
    let down_mxo_cnt=cfg_mxo_cnt-act_mxo_cnt
  else
    down_mxo_cnt=''
  fi 
  if ( [ "$actual_dcsmaster_cnt" '!=' 0 ] && [ "$actual_dcsserver_cnt" '!=' 0 ] ); then
   if [ ! -z "$masterport" ]; then
     if [[ ! -z $CLUSTERNAME ]]; then
        echo "Configured DcsMaster(s)   : "${configuredDcsMasterNodes} |/usr/bin/paste -sd ' ' -
     else
        echo "Configured DcsMaster      : $activeMaster"
     fi
     if ( [ ! -z "$activeMaster" ] ); then
        echo "Active DcsMaster(s)       : $activeMaster"
     fi
     echo "DcsMaster listen port     : $masterport"
     echo
   fi
   rm_tmp_files
  else
   if ( [ "$actual_dcsmaster_cnt" '>' 0 ] || [ "$actual_dcsserver_cnt" '>' 0 ] ); then
     echo "Partial DCS process is up and running. Please stop and restart DCS using 'dcsstop' and 'dcsstart' command..."
    else
     echo "DcsMaster is not started. Please start DCS using 'dcsstart' command..."
   fi
   echo
  fi
  echo -e "Process\t\tConfigured\tActual\t\tDown"
  echo -e "---------\t----------\t------\t\t----"
  echo -e "DcsMaster\t$cfg_dcsmaster_cnt\t\t$actual_dcsmaster_cnt\t\t$down_dcsmaster_cnt"
  echo -e "DcsServer\t$cfg_dcsserver_cnt\t\t$actual_dcsserver_cnt\t\t$down_dcsserver_cnt"
  echo -e "mxosrvr\t\t$cfg_mxo_cnt\t\t$act_mxo_cnt\t\t$down_mxo_cnt\n"
 else
   rm_tmp_files
   echo "DCS is not installed. Please install and configure DCS..."
   exit 1
 fi

rm_tmp_files
exit 0
