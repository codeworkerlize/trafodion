#!/bin/bash
#
# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@
#

# 'sqcheckmon' will return:
#     1 - Not up ($?=1)
#     0 - monitor process is up (running)
# 'sqcheckmon -s up' will return:
#     1 - Not up ($?=1)
#     0 - monitor process is up (running)
# 'sqcheckmon -s down' will return:
#     1 - Not down ($?=1)
#     0 - monitor process is down (not running)


function Usage {

    echo 
    echo "Usage: $0 [ -c <cc> | -i <nn> | -d <nn> | -h | -f ]"
    echo 
    echo "-s <cc>  Which monitor process state to check: [up | down ] (Default $ck_state)"
    echo "-i <nn>  Number of times the check for Trafodion processes will be done (Default $lv_max_checks)"
    echo "-d <nn>  Duration of sleep (in seconds) between each check  (Default $lv_sleep_time)"
    echo "-f       fast - (it's like running $0 -i 1 -d 0)"
    echo "-h       Help"
    echo "-q       Quiet"
    echo "-v       Verbose"
    echo

}

let lv_sqmonitor_down=0
let lv_sqmonitor_up=0
let lv_num_checks=0
let lv_max_checks=10
let lv_sleep_time=5
let lv_first_time=1
let lv_verbose=0

function GetOpts {

    while getopts "i:d:fhqs:v" arg
      do
      case $arg in 
      s)
          t_ck=${OPTARG}
          if 
          (
              [ $t_ck == "up" ] ||
              [ $t_ck == "down" ] 
          ); then 
              ck_state=${OPTARG}
          else
              Usage
              exit 1;
          fi
          ;;
      d)
          lv_sleep_time=${OPTARG}
          ;;
      i)
          lv_max_checks=${OPTARG}
          ;;
      f)
          lv_sleep_time=0
          lv_max_checks=0
          ;;
      v)
          lv_verbose=1
          ;;
      q)
          lv_verbose=0
          ;;
      h)
          Usage;
          exit 0;
      esac
    done
}

function CheckMonitorRunning {
    while [ $lv_sqmonitor_up '==' 0 ]; do
        sqshell -a <<EOF >$TRAF_LOG/sqcheckmon.log 2>&1
EOF
        let lv_sqshell_ret=$?
        if [ $lv_sqshell_ret '==' 0 ]; then
            if [ $lv_verbose '==' 1 ]; then
                echo
                echo `date`" - Able to connect to the Trafodion monitor."
            fi
            let lv_sqmonitor_up=1
        else
            if [ $lv_first_time '==' 1 ]; then
                if [ $lv_verbose '==' 1 ]; then
                    echo
                    echo -n `date`" - Trying to connect to the Trafodion monitor "
                fi
                let lv_first_time=0
            fi
            let ++lv_num_checks
            let lv_max_checks_done=(lv_num_checks '>' lv_max_checks)
            if [ $lv_max_checks_done '==' 0 ]; then
                echo -n "."
                sleep $lv_sleep_time
            else
                if [ $lv_verbose '==' 1 ]; then
                    echo
                    echo `date`" - The Trafodion monitor is not running!"
                else
                    echo -n "."
                fi
                exit 1
            fi
        fi
    done
}

function CheckMonitorStopped {
    while [ $lv_sqmonitor_down '==' 0 ]; do
        lv_stat=`pstat | grep COLD`
        let lv_stat_ret=$?
        if [ $lv_stat_ret '!=' 0 ]; then
            if [ $lv_verbose '==' 1 ]; then
                echo
                echo `date`" - The Trafodion monitor is not running!"
            fi
            let lv_sqmonitor_down=1
        else
            if [ $lv_first_time '==' 1 ]; then
                if [ $lv_verbose '==' 1 ]; then
                    echo
                    echo -n `date`" - The Trafodion monitor is running!"
                fi
                let lv_first_time=0
            fi
            let ++lv_num_checks
            let lv_max_checks_done=(lv_num_checks '>' lv_max_checks)
            if [ $lv_max_checks_done '==' 0 ]; then
                echo -n "."
                sleep $lv_sleep_time
            else
                if [ $lv_verbose '==' 1 ]; then
                    echo
                    echo `date`" - The Trafodion monitor is still running!"
                else
                    echo -n "."
                fi
                exit 1
            fi
        fi
    done
}

ck_state="up"
GetOpts $1 $2 $3 $4 $5 $6 $7 $8 $9

if ( ( [ "$ck_state" == "up" ] ) ); then 
    CheckMonitorRunning
fi

if ( ( [ "$ck_state" == "down" ] ) ); then 
    CheckMonitorStopped
fi

exit 0
