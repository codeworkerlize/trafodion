#!/bin/bash
#
# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@
#

if [ -z $JAVA_HOME ]; then
    echo "The environment variable \$JAVA_HOME has not been set"
    echo "Please ensure \$TRAF_HOME/sqenv.sh has been sourced."
    echo
    exit 1;
fi

mkdir $TRAF_LOG 2>/dev/null
lv_stderr_file="$TRAF_LOG/hbcheck.log"
echo "Stderr being written to the file: ${lv_stderr_file}"

krb5Checked=0
if ! command -v hbase &> /dev/null; then
    hbaseshell='swhbase shell'
else
    hbaseshell='hbase shell'
fi

for interval in 5 10 15 30
do
  #if -s option is specified, just test once (single)
  if [[ $# -gt 0 && $1 == "-s" ]];then
     shift
     break
  fi

  $JAVA_HOME/bin/java -Xmx512m org.trafodion.dtm.hbstatus $* 2>${lv_stderr_file}
  if [[ $? == 0 ]]
  then
    result=`$hbaseshell <<EOF
      scan 'TRAF_RSRVD_1:TRAFODION._MD_.VERSIONS'
EOF`
    echo "$result" | grep -b -o "Unknown table" >/dev/null
    est=$?
    vr=`echo \"$result\" | awk '{ print $(NF-4)}'`

    if [ $est -eq 0 ] || [ "$vr" != "0" ]
    then
      exit 0
    else
      echo "Versions table is not online"
    fi
  fi

  if [[ $krb5Checked -eq 0 ]]; then
    # on a kerberos enabled system, see if ticket is valid
    # unable to communicate with HBase unless a valid ticket exists
    if [[ $SECURE_HADOOP == "Y" ]]; then
      krb5Checked=1
      echo
      echo "Kerberos is enabled on the cluster.  Checking for valid tickets."
      NODE=$( uname -n )
      result=$( krb5service status; echo "retcode: $?" )
      retcode=$( echo "$result" | grep "retcode:" | cut -d ':' -f2 )
      if [[ $retcode -ne 0 ]]; then
        # see krb5functions - getStatus for valid retcode's
        echo "Kerberos ticket is invalid on node $NODE (status $retcode)."
        echo "Please run 'trafkerberos start' to generate valid tickets."
        echo
        exit $retcode
      fi
    fi
  fi

  echo "HBase not available. Waiting $interval seconds."
  sleep $interval
done
$JAVA_HOME/bin/java -Xmx512m org.trafodion.dtm.hbstatus $* 2>${lv_stderr_file}
exit $?
