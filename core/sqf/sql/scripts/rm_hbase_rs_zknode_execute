
#!/bin/bash

#
# This script tries to remove the HBase RS' zk node for the given node name
#
cd $TRAF_HOME/sql/scripts
lv_outfile=$TRAF_LOG/rm_hbase_rs_zknode.out
lv_node_name=$1
echo "`date`: Called with the node name parameter: $1" >> ${lv_outfile}
type=$2
is_connect=$TRAF_LOG/is_connect.out
local_node_name=`hostname -f`
if [[ ${local_node_name} =~ ${lv_node_name} ]];then
  echo "" > ${is_connect}
  nodes_array=(${EXPORTER_NODES//\,/ })
  for node in ${nodes_array[*]}
  do
  {
    if [[ ${local_node_name} =~ ${node} ]];then
      continue
    else
      ping -W 1 -c 1 ${node} >> ${lv_outfile}
      if [[ $? == 0 ]];then
        echo "`date`: network to ${node} is ok" >> ${lv_outfile}
        echo "1" >> ${is_connect}
      else
        echo "`date`: network to ${node} is closed" >> ${lv_outfile}
        echo "0" >> ${is_connect}
      fi
    fi
  } &
  done
  wait
  cat "${is_connect}" | grep  "1" > /dev/null
  is_zk_failed=$?
  if [[ ${is_zk_failed} -eq 0 ]]
  then
    echo "network is ok,please check zookeeper" >> ${lv_outfile}
  else
    echo "network is unavailable,kill regionserver " >> ${lv_outfile}
    hbase_pid=`ps -f -w w -u hbase | grep  HRegionServer | grep -v grep | awk '{print$2}' | grep -v PID`
    echo "`date`:regionserver pid: ${hbase_pid}" >> ${lv_outfile}
    datanode_pid=`ps -f -w w -u hdfs | grep  DataNode  | grep -v grep | awk '{print$2}' | grep -v PID`
    echo "`date`:datanode pid: ${datanode_pid}" >> ${lv_outfile}
    sudo -u hdfs kill -9 ${datanode_pid}
    echo "`date`:datanode killed" >> ${lv_outfile}
	hmaster_pid=`ps -f -w w -u hbase | grep  HMaster | grep -v grep | awk '{print$2}' | grep -v PID`
    if [[ $? == 0 ]]
    then
        echo "`date`:hmaster_pid: ${hmaster_pid}" >> ${lv_outfile} 
        sudo -u hbase kill -9 ${hmaster_pid}
		echo "`date`:hmaster killed" >> ${lv_outfile}
    fi
    sudo -u hbase kill -9 ${hbase_pid}
    echo "`date`:regionserver killed" >> ${lv_outfile}
  fi
  exit 1
fi
# ping the node to see if it is reachable
thred=5
count=0
interval=1
normalCount=0
excepCount=0
isexcep=false
function countPing(){
   echo "parameter=[state=$1,time=$2,sleep=$interval,count=$thred]" >> ${lv_outfile}
   count=$2
   if [ $count -ge $thred ]
   then
      case $1 in
       normal)
       echo "`date` ping ok so exit  ${lv_node_name}" >> ${lv_outfile}
         exit 1
         ;;
       excep)
      echo "`date` ping so delte ${lv_node_name}" >> ${lv_outfile}
      isexcep=true
        ;;
      esac
   fi
}

while(true)
do
 echo ping "`date` ${lv_node_name}" >> ${lv_outfile}
 ping -W 1 -c 1 ${lv_node_name}
 if [[ $? == 0 ]]
 then
    countPing normal $normalCount
    normalCount=`echo "$normalCount + $interval"|bc`
 else
    countPing excep $excepCount
    excepCount=`echo "$excepCount + $interval"|bc`
    if($isexcep)
    then
     echo "`date` exception up to $thred, so delte ${lv_node_name}" >> ${lv_outfile}
     break
    fi
 fi
  sleep $interval
done
# Now remove the hbase rs zknode
java -classpath $TRAF_HOME/export/lib/${ESGYN_SNMP_JAR}:$CLASSPATH com.esgyn.snmp.PingReceiver -n $1 -c $HBASE_CNF_DIR  >> ${TRAF_LOG}/ping_trap_receiver.log 2>&1 &
dcsclean $lv_node_name >> ${lv_outfile}
