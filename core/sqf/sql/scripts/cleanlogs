#!/bin/bash
#
# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@

# This script cleans up the log files of various components

function usage() {
   prog=`basename $0` 
   echo ""
   echo "$prog { all | dcs | rest | core | dbmgr | mgblty | wms | cdh | hbase | hadoop | hdfs | yarn | mapreduce | mr | zookeeper | zk}"
   echo "  all  --- Remove files from core, dcs and rest logs folder"
   echo "  dcs  --- Remove files from $TRAF_LOG/dcs folder"
   echo "  rest --- Remove files from $TRAF_LOG/rest folder"
   echo "  core --- Remove log files residing in $TRAF_LOG folder"
   echo "  dbmgr -- Remove log files residing in $TRAF_LOG/dbmgr folder"
   echo "  mgblty - Remove log files residing in $TRAF_LOG/mgblty/* folders"
   echo "  wms  --- Remove files from $TRAF_LOG/wms folder"
   echo "  cdh   -- Remove files from CDH log folder'"
   echo "  hbase -- Remove files from $HBASE_HOME/logs folder'"
   echo "  hadoop-- Remove files from HADOOP log folder'"
   echo "  hdfs --- Remove files from HDFS logs folder"
   echo "  yarn --- Remove files from YARN logs folder"
   echo "  mr   --- Remove files from MAPREDUCE logs folder"
   echo "  zk   --- Remove files from ZOOKEEPER logs folder"
}

function core_logs() {
   edb_pdsh -a "rm -f ${TRAF_LOG}/*.err"
   edb_pdsh -a "rm -f ${TRAF_LOG}/*.log"
   edb_pdsh -a "rm -f ${TRAF_LOG}/*log.[0-9]*"
   edb_pdsh -a "rm -f ${TRAF_LOG}/stdout_*"
}

function dcs_logs() {
   edb_pdsh -a "rm -f ${TRAF_LOG}/dcs/*.log"
   edb_pdsh -a "rm -f ${TRAF_LOG}/dcs/*.log.[0-9]*"
   edb_pdsh -a "rm -f ${TRAF_LOG}/dcs/*.out"
   edb_pdsh -a "rm -f ${TRAF_LOG}/dcs/*.out.[0-9]*"
}

function rest_logs() {
   edb_pdsh -a "rm -f ${TRAF_LOG}/rest/*.log"
   edb_pdsh -a "rm -f ${TRAF_LOG}/rest/*.log.[0-9]*"
   edb_pdsh -a "rm -f ${TRAF_LOG}/rest/*.out"
   edb_pdsh -a "rm -f ${TRAF_LOG}/rest/*.out.[0-9]*"
}

function dbmgr_logs() {
   edb_pdsh -a "rm -f ${TRAF_LOG}/dbmgr/*"
}

function mgblty_logs() {
   edb_pdsh -a "rm -f ${TRAF_LOG}/mgblty/*"
}

function wms_logs() {
   edb_pdsh -a "rm -f ${TRAF_LOG}/wms/*.log"
   edb_pdsh -a "rm -f ${TRAF_LOG}/wms/*.log.[0-9]*"
   edb_pdsh -a "rm -f ${TRAF_LOG}/wms-*"
}

function hbase_logs() {
   if [ "x${HBASE_HOME}" != "x" ]; then
      edb_pdsh -a "rm -rf ${HBASE_HOME}/logs/*"
   else
      edb_pdsh -a "rm -f /var/log/hbase/*"
   fi
}

function hdfs_logs() {
   if [ "x${YARN_HOME}" != "x" ]; then
      edb_pdsh -a "rm -rf ${YARN_HOME}/logs/hadoop*"
   else
      edb_pdsh -a "rm -f /var/log/hadoop-hdfs/*"
   fi
}

function yarn_logs() {
   if [ "x${YARN_HOME}" != "x" ]; then
      edb_pdsh -a "rm -rf ${YARN_HOME}/logs/yarn*"
   else
      edb_pdsh -a "rm -f /var/log/hadoop-yarn/*"
   fi
}

function mr_logs() {
   if [ "x${YARN_HOME}" != "x" ]; then
      edb_pdsh -a "rm -rf ${YARN_HOME}/logs/*"
   else
      edb_pdsh -a "rm -f /var/log/hadoop-mapreduce/*"
   fi
}

function zk_logs() {
   if [ "x${HBASE_HOME}" = "x" ]; then
      edb_pdsh -a "rm -f /var/log/zookeeper/*"
   fi
}

function all_logs() {
   if [[ ! -z ${TRAF_LOG} ]]; then
     edb_pdsh -a "rm -rf ${TRAF_LOG}/*"
   fi
}

if [ ! -z ${TRAF_HOME} ]; then
   case "$1" in 
      core)
        core_logs
        ;;
      dcs)
        dcs_logs
        ;;
      rest)
        rest_logs
        ;;
      wms)
        wms_logs
        ;;
      dbmgr)
        dbmgr_logs
        ;;
      mgblty)
        mgblty_logs
        ;;
      cdh)
        hbase_logs
	    hdfs_logs
		yarn_logs
		mr_logs
		zk_logs
		;;
      hbase)
        hbase_logs
        ;;
      hadoop)
        hdfs_logs
        yarn_logs
        mr_logs
        ;;
      hdfs)
        hdfs_logs
        ;;
      yarn)
        yarn_logs
        ;;
      mr|mapreduce)
        mr_logs
        ;;
      zk|zookeeper)
        zk_logs
        ;;
      all)
        all_logs
        ;;
      *)
        usage
        exit 1
   esac
fi
exit 0
