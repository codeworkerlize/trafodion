#!/bin/bash
#
# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@
#
#

function Usage {
    echo "Usage: `basename $0` [-v] [-t <num replay threads>] "
    echo
    echo "-t <num replay threads> : Number of threads that will replay the captured mutations (default: ${lv_default_num_replay_threads})"
    echo "-v                      : Verbose"
    echo
}

if [ -z $JAVA_HOME ]; then
    echo "The environment variable \$JAVA_HOME has not been set"
    echo "Please ensure \$TRAF_HOME/sqenv.sh has been sourced."
    echo
    exit 1;
fi

mkdir -p $TRAF_LOG
lv_stderr_file="$TRAF_LOG/crash_recover.log"

declare -i lv_verbose=0
lv_verbose_string=""
declare -i lv_default_num_replay_threads=8
declare -i lv_num_replay_threads=${lv_default_num_replay_threads}

while getopts "t:vh" lv_arg $1 $2 $3 $4 $5 $6 $7 $8 $9
do
    case $lv_arg in
        t)
            lv_num_replay_threads=${OPTARG}
            ;;

        v)
            let lv_verbose=1
            lv_verbose_string="-v"
            ;;

        h)
            lv_help=1
            Usage
            exit 0
            ;;
    esac
done

# set it to 0 within this script execution else the invocation of 
# other scripts might result in some extraneous output that can
# confuse the execution of this one.
SQ_VERBOSE=0

date
echo "`basename $0` will perform the following steps:"
echo " - Replay the mutations based on the safe interval"
echo

export LD_PRELOAD=${JAVA_HOME}/jre/lib/${JRE_LIB_DIR}/libjsig.so:${TRAF_HOME}/export/lib${SQ_MBTYPE}/libseabasesig.so

if [ ${lv_verbose} '==' 1 ]; then
    echo "Stderr being written to the file: ${lv_stderr_file}"
fi

# Replay the mutations 
echo "`date`: Replay the mutations for crash recovery [#replay threads: ${lv_num_replay_threads}]" | tee -a ${lv_stderr_file}
$JAVA_HOME/bin/java org.apache.hadoop.hbase.pit.XDC ${lv_verbose_string} c ${lv_num_replay_threads} 2>> ${lv_stderr_file} | tee -a ${lv_stderr_file}
lv_exit=${PIPESTATUS[0]}
if [ ${lv_exit} '!=' 0 ]; then
    echo "Error while playing the crash recovery mutations. Please check the error and retry after the problem is fixed. Exitting..."
    exit 1
fi

echo "`date`: Done: Replay of crash recovery mutations..., exit code: ${lv_exit}" | tee -a ${lv_stderr_file}
echo

echo "`date`: Done with `basename $0`. Detailed output in the file ${lv_stderr_file}."

