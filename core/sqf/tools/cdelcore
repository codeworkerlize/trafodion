#!/bin/bash
# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@

source cutils.sh
numdays=""

usage() {
     echo "
       This script lists and deletes core files and hs_err files 

      Usage: $0 [ -h | -l |-o <number of days> | -g <expression> ] 
      where  -h  displays this help
             -l  will list and delete files 
             -o  will list and delete files that are older than n days. if '0' is specified it is the current day
             -g  <expression> will only list & delete files with expresson specified
     "
}


deleteCores() {
    getTotalCnt
    if [[ $coreFileCnt == 0 ]]; then
       echo "
       **** No core files found ****"
    else  
       if [[ ! -z $numdays ]]; then
          getOlderCoreFiles
       else
          getListOfCoreFiles
       fi
       echo
       read -p "Continue? (Y/N): " confirm 
       if [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]]; then
         echo "Proceeding to delete cores files... "
         if [[ ! -z $numdays ]]; then
            if [[ $numdays != 0 ]]; then
             if [[ $numdays == 1 ]]; then
              cFileParam="-daystart -mtime $numdays"
             else
              cFileParam="-daystart -mtime +$numdays"
             fi
            else
              cFileParam="-daystart -mtime -1"
            fi
         else
            cFileParam=""
         fi
         edb_pdsh -a "find -L ${strToFind} -type f $cfileParam -name ${coreFileName} -exec rm {} \;" 2> /dev/null
         retCode=$?
         if [[ $retCode == 0 ]]; then
           echo "Succesfully deleted core files"
         else
           echo "Delete failed :: $retCode"
         fi
       else
         echo "Retained all the core files"  
       fi
    fi
    if [[ $hsErrFileCnt == 0 ]]; then
       echo "
       **** No hs error files found ****"
    else
       if [[ ! -z $numdays ]]; then
          getOlderHsErrFiles
       else
          getListOfHsErrFiles
       fi
       echo
       read -p "Continue? (Y/N): " confirm 
       if [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]]; then
         echo "Proceeding to delete hs_err files... "
         if [[ ! -z $numdays ]]; then
            if [[ $numdays != 0 ]]; then
             if [[ $numdays == 1 ]]; then
              hsParam="-daystart -mtime $numdays"
             else
              hsParam="-daystart -mtime +$numdays"
             fi
            else
              hsParam="-daystart -mtime -1"
            fi
         else
            hsParam=""
         fi
         edb_pdsh -a "find -L ${TRAF_HOME} -type f $hsParam -name ${hsErrFileName} -exec rm {} \;" 2> /dev/null
         retCode=$?
         if [[ $retCode == 0 ]]; then
           echo "Succesfully deleted hs_err files"
         else
           echo "Delete failed :: $retCode"
         fi
       else
         echo "Retained all hs_err files"  
       fi
    fi
}

while getopts 'hlo:g:' parmOpt
do
    case $parmOpt in
    h) 
       usage 
       exit 0
       ;;
    l) 
       cfindcore
       exit 0
       ;;
    o) 
       numdays="${OPTARG}"
       echo "
       ***** List of core and hs err files $numdays day(s) old ****"
       ;;
    g) 
       coreFileName="core\.\*${OPTARG}\*"
       hsErrFileName="hs_err_pid\*${OPTARG}\*.log"
       echo "
       **** Getting files with pattern ${OPTARG} ****"
       ;;
    ?) 
       echo "Invalid option specified.   Only -h,-o,-g are allowed."
       exit 0
       ;;
    esac
done

deleteCores
exit 0
