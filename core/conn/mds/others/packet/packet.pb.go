// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packet.proto

package packet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgType int32

const (
	MsgType_ZOOKEEPER MsgType = 0
	MsgType_METADATA  MsgType = 1
	MsgType_OTHER     MsgType = 2
)

var MsgType_name = map[int32]string{
	0: "ZOOKEEPER",
	1: "METADATA",
	2: "OTHER",
}

var MsgType_value = map[string]int32{
	"ZOOKEEPER": 0,
	"METADATA":  1,
	"OTHER":     2,
}

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (x *MsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgType_value, data, "MsgType")
	if err != nil {
		return err
	}
	*x = MsgType(value)
	return nil
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{0}
}

type OperationId int32

const (
	OperationId_EXISTS OperationId = 0
	OperationId_CREATE OperationId = 1
	OperationId_DELETE OperationId = 2
	OperationId_WRITE  OperationId = 3
	OperationId_READ   OperationId = 4
)

var OperationId_name = map[int32]string{
	0: "EXISTS",
	1: "CREATE",
	2: "DELETE",
	3: "WRITE",
	4: "READ",
}

var OperationId_value = map[string]int32{
	"EXISTS": 0,
	"CREATE": 1,
	"DELETE": 2,
	"WRITE":  3,
	"READ":   4,
}

func (x OperationId) Enum() *OperationId {
	p := new(OperationId)
	*p = x
	return p
}

func (x OperationId) String() string {
	return proto.EnumName(OperationId_name, int32(x))
}

func (x *OperationId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OperationId_value, data, "OperationId")
	if err != nil {
		return err
	}
	*x = OperationId(value)
	return nil
}

func (OperationId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{1}
}

type Header struct {
	Type                 *MsgType `protobuf:"varint,1,req,name=type,enum=packet.MsgType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{0}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetType() MsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MsgType_ZOOKEEPER
}

type ZkBody struct {
	Opt                  *OperationId `protobuf:"varint,1,req,name=opt,enum=packet.OperationId" json:"opt,omitempty"`
	Ret                  *int32       `protobuf:"varint,2,req,name=ret" json:"ret,omitempty"`
	Path                 *string      `protobuf:"bytes,3,req,name=path" json:"path,omitempty"`
	Data                 []byte       `protobuf:"bytes,4,req,name=data" json:"data,omitempty"`
	Flag                 *int32       `protobuf:"varint,5,req,name=flag" json:"flag,omitempty"`
	Acl                  *int32       `protobuf:"varint,6,req,name=acl" json:"acl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkBody) Reset()         { *m = ZkBody{} }
func (m *ZkBody) String() string { return proto.CompactTextString(m) }
func (*ZkBody) ProtoMessage()    {}
func (*ZkBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{1}
}

func (m *ZkBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkBody.Unmarshal(m, b)
}
func (m *ZkBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkBody.Marshal(b, m, deterministic)
}
func (m *ZkBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkBody.Merge(m, src)
}
func (m *ZkBody) XXX_Size() int {
	return xxx_messageInfo_ZkBody.Size(m)
}
func (m *ZkBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkBody.DiscardUnknown(m)
}

var xxx_messageInfo_ZkBody proto.InternalMessageInfo

func (m *ZkBody) GetOpt() OperationId {
	if m != nil && m.Opt != nil {
		return *m.Opt
	}
	return OperationId_EXISTS
}

func (m *ZkBody) GetRet() int32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

func (m *ZkBody) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *ZkBody) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ZkBody) GetFlag() int32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *ZkBody) GetAcl() int32 {
	if m != nil && m.Acl != nil {
		return *m.Acl
	}
	return 0
}

type ZkResponseBody struct {
	Retcode              *int32   `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Errmsg               *string  `protobuf:"bytes,2,req,name=errmsg" json:"errmsg,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkResponseBody) Reset()         { *m = ZkResponseBody{} }
func (m *ZkResponseBody) String() string { return proto.CompactTextString(m) }
func (*ZkResponseBody) ProtoMessage()    {}
func (*ZkResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{2}
}

func (m *ZkResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkResponseBody.Unmarshal(m, b)
}
func (m *ZkResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkResponseBody.Marshal(b, m, deterministic)
}
func (m *ZkResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkResponseBody.Merge(m, src)
}
func (m *ZkResponseBody) XXX_Size() int {
	return xxx_messageInfo_ZkResponseBody.Size(m)
}
func (m *ZkResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_ZkResponseBody proto.InternalMessageInfo

func (m *ZkResponseBody) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *ZkResponseBody) GetErrmsg() string {
	if m != nil && m.Errmsg != nil {
		return *m.Errmsg
	}
	return ""
}

func (m *ZkResponseBody) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type QueryBody struct {
	Querytype            *int32   `protobuf:"varint,1,opt,name=querytype" json:"querytype,omitempty"`
	Retcode              *int32   `protobuf:"varint,2,opt,name=retcode" json:"retcode,omitempty"`
	Costtime             *int64   `protobuf:"varint,3,opt,name=costtime" json:"costtime,omitempty"`
	Sqlstring            *string  `protobuf:"bytes,4,opt,name=sqlstring" json:"sqlstring,omitempty"`
	Starttime            *int64   `protobuf:"varint,5,opt,name=starttime" json:"starttime,omitempty"`
	Clientcomputername   *string  `protobuf:"bytes,6,opt,name=clientcomputername" json:"clientcomputername,omitempty"`
	Clientappname        *string  `protobuf:"bytes,7,opt,name=clientappname" json:"clientappname,omitempty"`
	Clientipaddress      *string  `protobuf:"bytes,8,opt,name=clientipaddress" json:"clientipaddress,omitempty"`
	Clientport           *int64   `protobuf:"varint,9,opt,name=clientport" json:"clientport,omitempty"`
	Qid                  *string  `protobuf:"bytes,10,opt,name=qid" json:"qid,omitempty"`
	TxnID                *int64   `protobuf:"varint,11,opt,name=txnID" json:"txnID,omitempty"`
	Username             *string  `protobuf:"bytes,12,opt,name=username" json:"username,omitempty"`
	Dialogueid           *int32   `protobuf:"varint,13,opt,name=dialogueid" json:"dialogueid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryBody) Reset()         { *m = QueryBody{} }
func (m *QueryBody) String() string { return proto.CompactTextString(m) }
func (*QueryBody) ProtoMessage()    {}
func (*QueryBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{3}
}

func (m *QueryBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBody.Unmarshal(m, b)
}
func (m *QueryBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBody.Marshal(b, m, deterministic)
}
func (m *QueryBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBody.Merge(m, src)
}
func (m *QueryBody) XXX_Size() int {
	return xxx_messageInfo_QueryBody.Size(m)
}
func (m *QueryBody) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBody.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBody proto.InternalMessageInfo

func (m *QueryBody) GetQuerytype() int32 {
	if m != nil && m.Querytype != nil {
		return *m.Querytype
	}
	return 0
}

func (m *QueryBody) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *QueryBody) GetCosttime() int64 {
	if m != nil && m.Costtime != nil {
		return *m.Costtime
	}
	return 0
}

func (m *QueryBody) GetSqlstring() string {
	if m != nil && m.Sqlstring != nil {
		return *m.Sqlstring
	}
	return ""
}

func (m *QueryBody) GetStarttime() int64 {
	if m != nil && m.Starttime != nil {
		return *m.Starttime
	}
	return 0
}

func (m *QueryBody) GetClientcomputername() string {
	if m != nil && m.Clientcomputername != nil {
		return *m.Clientcomputername
	}
	return ""
}

func (m *QueryBody) GetClientappname() string {
	if m != nil && m.Clientappname != nil {
		return *m.Clientappname
	}
	return ""
}

func (m *QueryBody) GetClientipaddress() string {
	if m != nil && m.Clientipaddress != nil {
		return *m.Clientipaddress
	}
	return ""
}

func (m *QueryBody) GetClientport() int64 {
	if m != nil && m.Clientport != nil {
		return *m.Clientport
	}
	return 0
}

func (m *QueryBody) GetQid() string {
	if m != nil && m.Qid != nil {
		return *m.Qid
	}
	return ""
}

func (m *QueryBody) GetTxnID() int64 {
	if m != nil && m.TxnID != nil {
		return *m.TxnID
	}
	return 0
}

func (m *QueryBody) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *QueryBody) GetDialogueid() int32 {
	if m != nil && m.Dialogueid != nil {
		return *m.Dialogueid
	}
	return 0
}

type MdBody struct {
	Mxosrvrname          *string    `protobuf:"bytes,1,req,name=mxosrvrname" json:"mxosrvrname,omitempty"`
	Pid                  *int32     `protobuf:"varint,2,req,name=pid" json:"pid,omitempty"`
	Sqlcount             *int32     `protobuf:"varint,3,opt,name=sqlcount" json:"sqlcount,omitempty"`
	Totalruntime         *int64     `protobuf:"varint,4,opt,name=totalruntime" json:"totalruntime,omitempty"`
	Totalconnections     *int32     `protobuf:"varint,5,opt,name=totalconnections" json:"totalconnections,omitempty"`
	Withquery            *int32     `protobuf:"varint,6,opt,name=withquery" json:"withquery,omitempty"`
	Querybody            *QueryBody `protobuf:"bytes,7,opt,name=querybody" json:"querybody,omitempty"`
	Hostname             *string    `protobuf:"bytes,8,opt,name=hostname" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MdBody) Reset()         { *m = MdBody{} }
func (m *MdBody) String() string { return proto.CompactTextString(m) }
func (*MdBody) ProtoMessage()    {}
func (*MdBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{4}
}

func (m *MdBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdBody.Unmarshal(m, b)
}
func (m *MdBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdBody.Marshal(b, m, deterministic)
}
func (m *MdBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdBody.Merge(m, src)
}
func (m *MdBody) XXX_Size() int {
	return xxx_messageInfo_MdBody.Size(m)
}
func (m *MdBody) XXX_DiscardUnknown() {
	xxx_messageInfo_MdBody.DiscardUnknown(m)
}

var xxx_messageInfo_MdBody proto.InternalMessageInfo

func (m *MdBody) GetMxosrvrname() string {
	if m != nil && m.Mxosrvrname != nil {
		return *m.Mxosrvrname
	}
	return ""
}

func (m *MdBody) GetPid() int32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *MdBody) GetSqlcount() int32 {
	if m != nil && m.Sqlcount != nil {
		return *m.Sqlcount
	}
	return 0
}

func (m *MdBody) GetTotalruntime() int64 {
	if m != nil && m.Totalruntime != nil {
		return *m.Totalruntime
	}
	return 0
}

func (m *MdBody) GetTotalconnections() int32 {
	if m != nil && m.Totalconnections != nil {
		return *m.Totalconnections
	}
	return 0
}

func (m *MdBody) GetWithquery() int32 {
	if m != nil && m.Withquery != nil {
		return *m.Withquery
	}
	return 0
}

func (m *MdBody) GetQuerybody() *QueryBody {
	if m != nil {
		return m.Querybody
	}
	return nil
}

func (m *MdBody) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

type MdResponseBody struct {
	Retcode              *int32   `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Errmsg               *string  `protobuf:"bytes,2,req,name=errmsg" json:"errmsg,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdResponseBody) Reset()         { *m = MdResponseBody{} }
func (m *MdResponseBody) String() string { return proto.CompactTextString(m) }
func (*MdResponseBody) ProtoMessage()    {}
func (*MdResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{5}
}

func (m *MdResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdResponseBody.Unmarshal(m, b)
}
func (m *MdResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdResponseBody.Marshal(b, m, deterministic)
}
func (m *MdResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdResponseBody.Merge(m, src)
}
func (m *MdResponseBody) XXX_Size() int {
	return xxx_messageInfo_MdResponseBody.Size(m)
}
func (m *MdResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_MdResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_MdResponseBody proto.InternalMessageInfo

func (m *MdResponseBody) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MdResponseBody) GetErrmsg() string {
	if m != nil && m.Errmsg != nil {
		return *m.Errmsg
	}
	return ""
}

func (m *MdResponseBody) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Message struct {
	Header               *Header  `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Mdbody               *MdBody  `protobuf:"bytes,2,opt,name=mdbody" json:"mdbody,omitempty"`
	Zkbody               *ZkBody  `protobuf:"bytes,3,opt,name=zkbody" json:"zkbody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{6}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Message) GetMdbody() *MdBody {
	if m != nil {
		return m.Mdbody
	}
	return nil
}

func (m *Message) GetZkbody() *ZkBody {
	if m != nil {
		return m.Zkbody
	}
	return nil
}

type MdsReponse struct {
	Header               *Header         `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Zkbody               *ZkResponseBody `protobuf:"bytes,2,req,name=zkbody" json:"zkbody,omitempty"`
	Mdbody               *MdResponseBody `protobuf:"bytes,3,req,name=mdbody" json:"mdbody,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MdsReponse) Reset()         { *m = MdsReponse{} }
func (m *MdsReponse) String() string { return proto.CompactTextString(m) }
func (*MdsReponse) ProtoMessage()    {}
func (*MdsReponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{7}
}

func (m *MdsReponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdsReponse.Unmarshal(m, b)
}
func (m *MdsReponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdsReponse.Marshal(b, m, deterministic)
}
func (m *MdsReponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdsReponse.Merge(m, src)
}
func (m *MdsReponse) XXX_Size() int {
	return xxx_messageInfo_MdsReponse.Size(m)
}
func (m *MdsReponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MdsReponse.DiscardUnknown(m)
}

var xxx_messageInfo_MdsReponse proto.InternalMessageInfo

func (m *MdsReponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MdsReponse) GetZkbody() *ZkResponseBody {
	if m != nil {
		return m.Zkbody
	}
	return nil
}

func (m *MdsReponse) GetMdbody() *MdResponseBody {
	if m != nil {
		return m.Mdbody
	}
	return nil
}

func init() {
	proto.RegisterEnum("packet.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("packet.OperationId", OperationId_name, OperationId_value)
	proto.RegisterType((*Header)(nil), "packet.Header")
	proto.RegisterType((*ZkBody)(nil), "packet.ZkBody")
	proto.RegisterType((*ZkResponseBody)(nil), "packet.ZkResponseBody")
	proto.RegisterType((*QueryBody)(nil), "packet.QueryBody")
	proto.RegisterType((*MdBody)(nil), "packet.MdBody")
	proto.RegisterType((*MdResponseBody)(nil), "packet.MdResponseBody")
	proto.RegisterType((*Message)(nil), "packet.Message")
	proto.RegisterType((*MdsReponse)(nil), "packet.MdsReponse")
}

func init() { proto.RegisterFile("packet.proto", fileDescriptor_e9ef1a6541f9f9e7) }

var fileDescriptor_e9ef1a6541f9f9e7 = []byte{
	// 726 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcd, 0x8e, 0xdb, 0x36,
	0x10, 0x5e, 0x49, 0x96, 0x6c, 0x8d, 0xbd, 0xbb, 0x2a, 0x5b, 0x2c, 0x84, 0xa2, 0x28, 0x0c, 0xf7,
	0x07, 0xc2, 0x02, 0x75, 0xd1, 0x7d, 0x03, 0xb7, 0x56, 0xb1, 0x46, 0x6b, 0xb8, 0xe5, 0x0a, 0x6d,
	0xb1, 0x37, 0x56, 0x64, 0x6d, 0xc1, 0xb2, 0x28, 0x8b, 0x74, 0xb3, 0xce, 0x2d, 0x4f, 0x90, 0x43,
	0x72, 0xcf, 0xab, 0x06, 0x1c, 0xc9, 0xb2, 0x9d, 0xe4, 0x90, 0x4b, 0x6e, 0x33, 0xdf, 0x7c, 0x9c,
	0xf9, 0x38, 0x43, 0x0e, 0x0c, 0x4a, 0x96, 0xae, 0x85, 0x1e, 0x97, 0x95, 0xd4, 0x92, 0x78, 0xb5,
	0x37, 0xfa, 0x01, 0xbc, 0x7b, 0xc1, 0xb8, 0xa8, 0xc8, 0x37, 0xd0, 0xd1, 0xfb, 0x52, 0x84, 0xd6,
	0xd0, 0x8e, 0xae, 0xee, 0xae, 0xc7, 0x0d, 0x7d, 0xae, 0x96, 0xc9, 0xbe, 0x14, 0x14, 0x83, 0xa3,
	0x97, 0x16, 0x78, 0x8f, 0xeb, 0x9f, 0x25, 0xdf, 0x93, 0xef, 0xc0, 0x91, 0xa5, 0x6e, 0xe8, 0x9f,
	0x1f, 0xe8, 0x8b, 0x52, 0x54, 0x4c, 0x67, 0xb2, 0x98, 0x71, 0x6a, 0xe2, 0x24, 0x00, 0xa7, 0x12,
	0x3a, 0xb4, 0x87, 0x76, 0xe4, 0x52, 0x63, 0x12, 0x02, 0x9d, 0x92, 0xe9, 0x55, 0xe8, 0x0c, 0xed,
	0xc8, 0xa7, 0x68, 0x1b, 0x8c, 0x33, 0xcd, 0xc2, 0xce, 0xd0, 0x8e, 0x06, 0x14, 0x6d, 0x83, 0xfd,
	0x97, 0xb3, 0x65, 0xe8, 0xe2, 0x51, 0xb4, 0x4d, 0x36, 0x96, 0xe6, 0xa1, 0x57, 0x67, 0x63, 0x69,
	0x3e, 0xfa, 0x0b, 0xae, 0x1e, 0xd7, 0x54, 0xa8, 0x52, 0x16, 0x4a, 0xa0, 0xb0, 0x10, 0xba, 0x95,
	0xd0, 0xa9, 0xe4, 0xf5, 0x5d, 0x5c, 0x7a, 0x70, 0xc9, 0x0d, 0x78, 0xa2, 0xaa, 0x36, 0x6a, 0x89,
	0x72, 0x7c, 0xda, 0x78, 0x6d, 0x75, 0xe7, 0x58, 0x7d, 0xf4, 0xc6, 0x01, 0xff, 0xcf, 0x9d, 0xa8,
	0xf6, 0x98, 0xf3, 0x2b, 0xf0, 0xb7, 0xc6, 0x69, 0x3a, 0x64, 0x45, 0x2e, 0x3d, 0x02, 0xa7, 0x15,
	0x6d, 0x8c, 0xb5, 0x15, 0xbf, 0x84, 0x5e, 0x2a, 0x95, 0xd6, 0xd9, 0x46, 0x84, 0xce, 0xd0, 0x8a,
	0x1c, 0xda, 0xfa, 0x26, 0xa7, 0xda, 0xe6, 0x4a, 0x57, 0x59, 0xb1, 0x0c, 0x3b, 0x43, 0x2b, 0xf2,
	0xe9, 0x11, 0xc0, 0xa8, 0x66, 0x55, 0x7d, 0xd4, 0xc5, 0xa3, 0x47, 0x80, 0x8c, 0x81, 0xa4, 0x79,
	0x26, 0x0a, 0x9d, 0xca, 0x4d, 0xb9, 0xd3, 0xa2, 0x2a, 0xd8, 0x46, 0x84, 0x1e, 0x26, 0xf9, 0x40,
	0x84, 0x7c, 0x0b, 0x97, 0x35, 0xca, 0xca, 0x12, 0xa9, 0x5d, 0xa4, 0x9e, 0x83, 0x24, 0x82, 0xeb,
	0x1a, 0xc8, 0x4a, 0xc6, 0x79, 0x25, 0x94, 0x0a, 0x7b, 0xc8, 0x7b, 0x17, 0x26, 0x5f, 0x03, 0xd4,
	0x50, 0x29, 0x2b, 0x1d, 0xfa, 0x28, 0xef, 0x04, 0x31, 0x73, 0xda, 0x66, 0x3c, 0x04, 0x3c, 0x6d,
	0x4c, 0xf2, 0x05, 0xb8, 0xfa, 0xa9, 0x98, 0x4d, 0xc3, 0x3e, 0x92, 0x6b, 0xc7, 0xf4, 0x67, 0xa7,
	0x1a, 0xf5, 0x03, 0x24, 0xb7, 0xbe, 0xa9, 0xc1, 0x33, 0x96, 0xcb, 0xe5, 0x4e, 0x64, 0x3c, 0xbc,
	0xc4, 0xc6, 0x9e, 0x20, 0xa3, 0x57, 0x36, 0x78, 0x73, 0x8e, 0xe3, 0x19, 0x42, 0x7f, 0xf3, 0x24,
	0x55, 0xf5, 0x7f, 0x9d, 0xc9, 0xc2, 0xe9, 0x9e, 0x42, 0x46, 0x50, 0x99, 0xf1, 0xc3, 0x33, 0x2c,
	0x33, 0x6e, 0x4a, 0xab, 0x6d, 0x9e, 0xca, 0x5d, 0xa1, 0x71, 0x34, 0x2e, 0x6d, 0x7d, 0x32, 0x82,
	0x81, 0x96, 0x9a, 0xe5, 0xd5, 0xae, 0xc0, 0xfe, 0x77, 0x50, 0xf3, 0x19, 0x46, 0x6e, 0x21, 0x40,
	0x3f, 0x95, 0x45, 0x21, 0x52, 0xf3, 0xe4, 0x15, 0xce, 0xc9, 0xa5, 0xef, 0xe1, 0x66, 0x98, 0xcf,
	0x32, 0xbd, 0xc2, 0x17, 0x83, 0x53, 0x72, 0xe9, 0x11, 0x20, 0x3f, 0x36, 0x8f, 0xeb, 0x5f, 0xc9,
	0xf7, 0x38, 0x98, 0xfe, 0xdd, 0x67, 0x87, 0xff, 0xd4, 0x3e, 0x41, 0x7a, 0xe4, 0x18, 0xe9, 0x2b,
	0xa9, 0x34, 0xde, 0xb5, 0x1e, 0x50, 0xeb, 0x9b, 0xff, 0x30, 0xe7, 0x9f, 0xe0, 0x3f, 0xbc, 0xb0,
	0xa0, 0x3b, 0x17, 0x4a, 0xb1, 0xa5, 0x20, 0xdf, 0x83, 0xb7, 0xc2, 0xa5, 0x81, 0x09, 0xfb, 0x77,
	0x57, 0x07, 0xb5, 0xf5, 0x2a, 0xa1, 0x4d, 0xd4, 0xf0, 0x36, 0x1c, 0x6f, 0x65, 0xe3, 0xad, 0x5a,
	0x5e, 0x3d, 0x36, 0xda, 0x44, 0x0d, 0xef, 0xf9, 0x1a, 0x79, 0xce, 0x39, 0xaf, 0x5e, 0x35, 0xb4,
	0x89, 0x8e, 0x5e, 0x5b, 0x00, 0x73, 0xae, 0xa8, 0xc0, 0xcb, 0x7d, 0xb4, 0x8c, 0x71, 0x9b, 0xde,
	0x46, 0xde, 0xcd, 0x31, 0xfd, 0x69, 0xa3, 0x0e, 0x65, 0x0c, 0xbf, 0x91, 0xed, 0x9c, 0xf3, 0xcf,
	0x1b, 0x7b, 0x90, 0x7f, 0xfb, 0x13, 0x74, 0x9b, 0x2d, 0x49, 0x2e, 0xc1, 0x7f, 0x5c, 0x2c, 0x7e,
	0x8b, 0xe3, 0x3f, 0x62, 0x1a, 0x5c, 0x90, 0x01, 0xf4, 0xe6, 0x71, 0x32, 0x99, 0x4e, 0x92, 0x49,
	0x60, 0x11, 0x1f, 0xdc, 0x45, 0x72, 0x1f, 0xd3, 0xc0, 0xbe, 0xfd, 0x15, 0xfa, 0x27, 0x9b, 0x92,
	0x00, 0x78, 0xf1, 0x3f, 0xb3, 0x87, 0xe4, 0x21, 0xb8, 0x30, 0xf6, 0x2f, 0x34, 0x9e, 0x24, 0x71,
	0x60, 0x19, 0x7b, 0x1a, 0xff, 0x1e, 0x27, 0x71, 0x60, 0x9b, 0xd3, 0x7f, 0xd3, 0x59, 0x12, 0x07,
	0x0e, 0xe9, 0x41, 0x87, 0xc6, 0x93, 0x69, 0xd0, 0x79, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x4d,
	0xb1, 0x3f, 0xd5, 0x05, 0x00, 0x00,
}
