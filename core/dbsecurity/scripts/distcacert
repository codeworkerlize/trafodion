#!/bin/bash

# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@
#

CERTDIR=$TRAF_HOME/sqcert
CLUSTNAME=`echo $CLUSTERNAME`
CACERTDIR=$HOME/cacerts

clust_nodes="$(trafconf -wname)"

if (test -n "${CLUSTNAME}"); then
  echo " Cluster Name :" $CLUSTNAME
  HNAME=$CLUSTNAME
  CERTDIR=$HOME/sqcert
  if [[ -z $TRAF_AGENT ]]; then 
      default_traf_config=/etc/trafodion/trafodion_config
  else
      default_traf_config=$TRAF_CONF/trafodion_config
  fi
else 
  HNAME=`uname -n`
  echo "Workstation Name :" $HNAME
fi

#Default file name if not specified
signed_server_cert_file=server.crt
server_key_file=server.key
server_keystore_file=server.keystore
server_csr_file=server.csr
server_pkcs12_file=server.pkcs12

usage ()
{
   echo " Usage: distcacert "
   echo "  { casigned <fully qualified path with certfile name> | view_crt [<certfile name>] | { gen_keystore [<signed server cert>] | view_keystore [<keystore file>] } "
}

generate_keystore()
{
     echo " Generating keystore using signed server certificate...."

     btmp=`mktemp -t`
     caobf=`cat $TRAF_CONF/rest/rest-site.xml |grep OBF | sed -e 's,.*<value>\([^<]*\)</value>.*,\1,g'`
     java -cp $DBMGR_INSTALL_DIR/lib/jetty-util-* org.eclipse.jetty.util.security.Password $caobf > $btmp 2>&1
     kst=`cat $btmp |grep -v ":"`
     rm -f $btmp $CACERTDIR/$server_keystore_file

     cp $CERTDIR/$server_key_file $CACERTDIR
     openssl pkcs12 -inkey $1 -in $2 -export -out $CACERTDIR/$server_pkcs12_file -password pass:$kst
     keytool -importkeystore -srckeystore $CACERTDIR/$server_pkcs12_file -srcstoretype PKCS12 -destkeystore $CACERTDIR/$server_keystore_file -deststorepass $kst -srcstorepass $kst -noprompt 2> /dev/null
     if [[ $? == 0 ]]; then
        /bin/chmod 600 $CACERTDIR/$server_keystore_file
        cp -p $DBMGR_INSTALL_DIR/conf/config.xml $TRAF_CONF/dbmgr/config.xmlss
        sed -e "s@sqcert@cacerts@" $TRAF_CONF/dbmgr/config.xmlss > $TRAF_CONF/dbmgr/config.xml
        cp -p $TRAF_CONF/rest/rest-site.xml $TRAF_CONF/rest/restsite.xmlss
        sed -e "s@sqcert@cacerts@" $TRAF_CONF/rest/restsite.xmlss > $TRAF_CONF/rest/rest-site.xml
        tmp_trafconfig=`mktemp -t`
        cp -p $default_traf_config $tmp_trafconfig
        sed '/SQCERT_DIR/d' $tmp_trafconfig > $default_traf_config
        echo "export SQCERT_DIR=$CACERTDIR" >> $default_traf_config
        if [[ -z ${TRAF_AGENT} ]]; then
            $PDCP $clust_nodes $CACERTDIR/{$server_keystore_file,$server_key_file}  $CACERTDIR
            $PDCP $clust_nodes $TRAF_CONF/dbmgr/config.xml  $TRAF_CONF/dbmgr/
            $PDCP $clust_nodes $TRAF_CONF/rest/rest-site.xml  $TRAF_CONF/rest/
            $PDCP $clust_nodes $default_traf_config $default_traf_config
        fi
     fi
     rm -f $CACERTDIR/$server_pkcs12_file $tmp_trafconfig
}

if [ $# -lt 1 ]
then
    options=casigned
else 
    options=$1
fi

case $options in 
casigned)
    if (test -n "${2}"); then
        ca_cert_file=$2
    else
        echo "Please specify the signed server certifiate file (use fully qualified path)"
        usage; exit 1;
    fi
    echo " Using signed server certificate file :"$ca_cert_file
    echo " Signed Server Certificate location :"$CACERTDIR
    if [[ -z ${TRAF_AGENT} ]]; then
      $PDCP $clust_nodes $ca_cert_file $CACERTDIR/$signed_server_cert_file
      edb_pdsh -a chmod 600 $CACERTDIR/$signed_server_cert_file
    fi
    generate_keystore $CERTDIR/$server_key_file $CACERTDIR/$signed_server_cert_file
    ;; 
view_crt) 
    if (test -n "${2}"); then
        signed_server_cert_file=$2
    fi
    echo " Signed Server Certificate location :"$CACERTDIR
    if [[ -f "$CACERTDIR/$signed_server_cert_file" ]]; then
        echo "Using signed server certificate file : $signed_server_cert_file"
        openssl x509 -text -in $CACERTDIR/$signed_server_cert_file
    else
        echo "Please specify the signed server certificate file name"
        usage; exit 1;
    fi     
    ;; 
gen_keystore)
    if (test -n "${2}"); then
        signed_server_cert_file=$2
    fi
    echo " Signed Server Certificate location :"$CACERTDIR
    if [[ -f "$CACERTDIR/$signed_server_cert_file" ]]; then
       echo "Using signed server certificate file : $signed_server_cert_file"
       generate_keystore $CERTDIR/$server_key_file $CACERTDIR/$signed_server_cert_file
    else 
        echo "Please specify the signed server certificate file name"
        usage; exit 1;
    fi
    ;;

view_keystore) 
    if (test -n "${2}"); then
        server_keystore_file=$2
    fi
    echo " Server keystore file location :"$CACERTDIR
    if [[ -f "$CACERTDIR/$server_keystore_file" ]]; then
       echo "Using server keystore file : $server_keystore_file"
       keytool -list -keystore $CACERTDIR/$server_keystore_file 
    else
        echo "Please specify the keystore file name"
        usage; exit 1;
    fi     
    ;; 

-h | -help)
   usage; exit 1;
   ;;
   
*) usage; exit 1;
esac
