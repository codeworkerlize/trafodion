// Service Description for _CSD_LABEL_
{
  "name" : "_CSD_NAME_",
  "label" : "_CSD_LABEL_",
  "description" : "QianBase, based on Apache Trafodion, combining the power of transactional SQL and Apache HBase with the elastic scalability of Hadoop",
  "version" : "_CSD_VERSION_",
  "runAs" : {
    "user" : "trafodion",
    "group" : "trafodion",
    "principal" : "trafodion"
  },
  "maxInstances" : 1,
  "icon" : "images/esgyn.png",
  "compatibility" : {
    "generation" : 1,
    "cdhVersion" : {
      "min" : "5.4.0",
      "max" : "5.17.0"
    }
  },
  "rolesWithExternalLinks" : ["TRAF_DBM"],
  "parcel" : {
    "requiredTags" : [ "cdh", "trafodion" ]
  },
  "serviceDependencies" : [
    {
      "name" : "ZOOKEEPER",
      "required" : "true"
    }, 
    {
      "name" : "HBASE",
      "required" : "true"
    }, 
    {
      "name" : "HDFS", 
      "required" : "true"
    },
    {
      "name" : "HIVE" 
    }
  ],
  // kerberos enabled if dependent services enabled
  "serviceInit" : {
    "preStartSteps" : [
      { "commandName" : "CreateTrafHomeDir" }
    ]
  },
  "stopRunner" : {
    "relevantRoleTypes" : ["TRAF_NODE"],
    "masterRole" : "TRAF_NODE",
    "runner" : {
      "program" : "scripts/shutdown.sh"
    },
    "timeout" : 180100  //ms = 3min
  }, 
  "hdfsDirs" : [ 
     {   
       "name" : "CreateTrafHomeDir",
       "label" : "Create HDFS Trafodion User Directory",
       "description" : "Creates trafodion user directory in HDFS",
       "directoryDescription" : "Trafodion user HDFS directory",
       "path" : "/user/${user}",
       "permissions" : "0755"
     }
  ],
  "commands" : [
    {
      "name" : "StatusCheck",
      "label" : "Check QianBase Status",
      "description" : "Reports on QianBase subsystem processes",
      "roleName" : "TRAF_NODE",
      "roleCommand" : "cluster_status",
      "runMode" : "single"
    },
    {
      "name" : "MaintKill",
      "label" : "Clean-Up Extra Processes",
      "description" : "Kills any remaining QianBase processes",
      "roleName" : "TRAF_NODE",
      "roleCommand" : "cluster_pkill",
      "runMode" : "all"
    },
    {
      "name" : "RestartConnect",
      "label" : "Force Re-start of Connection Servers",
      "description" : "Stops and Re-starts Connection Servers on all nodes",
      "roleName" : "TRAF_NODE",
      "roleCommand" : "cluster_conn_restart",
      "runMode" : "all"
    },
    {
      "name" : "UpdateConfig",
      "label" : "Update Dynamic Configuration",
      "description" : "Updates license key and LDAP configuration (parameters starting with ldap_) on all nodes, also including the traf_authentication_config advanced snippet (safety valve).",
      "roleName" : "TRAF_NODE",
      "roleCommand" : "cluster_dyn_update",
      "runMode" : "all"
    },
    {
      "name" : "CollectLogs",
      "label" : "Collect log files for all components",
      "description" : "Collect log files for all esgyndb components from all nodes or specific nodes",
      "roleName" : "TRAF_NODE",
      "roleCommand" : "cluster_get_logs",
      "runMode" : "all"
    },
    {
      "name" : "InitializeTrafodion",
      "label" : "Initialize/Upgrade QianBase MetaData",
      "description" : "Initializes meta-data after an initial installation or upgrade",
      "roleName" : "TRAF_NODE",
      "roleCommand" : "cluster_init",
      "runMode" : "single"
    }
  ],
  "parameters" : [
    {
      "name" : "esgyndb_license_key",
      "label" : "QianBase License Key",
      "description" : "License string from Esgyn. A short grace period is allowed with no license key.",
      "type" : "string",
      "required" : false,
      "default" : "",
      "configurableInWizard" : true
    },
    {
      "name" : "esgyndb_cluster_id",
      "label" : "QianBase Cluster Identifier",
      "description" : "For use when there are QianBase service instances in multiple Hadoop clusters",
      "default" : "1",
      "type" : "long",
      "min" : "1",
      "max" : "8"
    },
    {
      "name" : "esgyndb_cluster_name",
      "label" : "QianBase Cluster Name",
      "description" : "For use when there are QianBase service instances in multiple Hadoop cluster",
      "default" : "Cluster 1",
      "type" : "string",
      "required" : true
    },
    {
      "name" : "esgyndb_memory_limit",
      "label" : "QianBase Memory Limit",
      "description" : "The max memory limit (GB) for QianBase cgroup. If this value is > 0, then this limit will override the QianBase cgroup memory limits set by the static resource allocation. If this value is <=0 then no change will be done to the QianBase memory cgroup",
      "default" : "-1",
      "unit" : "gigabytes",
      "type" : "memory"
    },
    {
      "name" : "traf.sentry.enabled",
      "label" : "Hive Sentry enabled",
      "description" : "Indicates whether Hive uses sentry service",
      "default" : false,
      "type" : "boolean"
    },
    {
      "name" : "hiveserver2_url",
      "label" : "HiveServer2 URL",
      "description" : "HiveServer2 URL (if Kerberos is enabled)",
      "default" : "localhost:10000",
      "type" : "string"
    },
    {
      "name" : "hiveserver2_ssl",
      "label" : "HiveServer2 SSL setting",
      "description" : "Whether HiveServer2 SSL option is true or false (if Kerberos is enabled)",
      "default" : false,
      "type" : "boolean"
    },
    {
      "name" : "esgyndb_admin_user",
      "label" : "QianBase Database Admin User",
      "description" : "External (LDAP) user name to associate with the Database Admin Role",
      "type" : "string",
      "default" : "DB__ADMIN"
    },
    {
      "name" : "esgyndb_root_user",
      "label" : "QianBase Database Root User",
      "description" : "External (LDAP) user name to associate with the Database Root Role",
      "type" : "string",
      "default" : "DB__ROOT"
    },
    {
      "name" : "traf.ldap.enabled",
      "label" : "LDAP authentication enabled",
      "description" : "Enable QianBase user authentication via LDAP",
      "default" : "NO",
      "type" : "string_enum",
      "validValues" : [ "YES", "NO" ]
    },
    {
      "name" : "ldap_domain",
      "label" : "LDAP default domain",
      "description" : "Name of default LDAP domain. To configure multiple domains, add additional LDAP sections in the advanced snippet (safety valve) for traf_authentication_config file. Each domain must be added as a section:<br>SECTION: (name)<br>&emsp;LdapHostname: (host)<br>&emsp;UniqueIdentifier: (cn=...)<br>&emsp;...",
      "type" : "string",
      "default" : "local"
    },
    {
      "name" : "ldap_certpath",
      "label" : "LDAP encryption certificate file path",
      "description" : "File path of SSL/TLS certificate file (*.pem)",
      "type" : "string",
      "default" : ""
    },
    {
      "name" : "ldap_hosts",
      "label" : "LDAP server list",
      "description" : "List of LDAP hostnames (space separated)",
      "default" : [ "" ],
      "separator" : " ",
      "type" : "string_array"
    },
    {
      "name" : "ldap_port",
      "label" : "LDAP port number",
      "description" : "LDAP server(s) port number (Example: 389 for no encryption or TLS, 636 for SSL)",
      "type" : "port",
      "default" : 389
    },
    {
      "name" : "ldap_identifiers",
      "label" : "LDAP unique identifiers",
      "description" : "All LDAP unique identifiers (semi-colon separated)",
      "default" : [ "" ],
      "separator" : ";",
      "type" : "string_array"
    },
    {
      "name" : "ldap_search_id",
      "label" : "LDAP search user name",
      "description" : "User name for LDAP search (if required by LDAP server)",
      "default" : "",
      "type" : "string"
    },
    {
      "name" : "ldap_pwd",
      "label" : "LDAP search password",
      "description" : "Password for LDAP search (if required by LDAP server)",
      "default" : "",
      "type" : "password"
    },
    {
      "name" : "ldap_encrypt",
      "label" : "LDAP encryption level",
      "description" : "LDAP encryption level must match LDAP server(s). <br>0 = Encryption not used; <br>1 = SSL Encryption; <br>2 = TLS Encryption",
      "type" : "string_enum",
      "default" : "0",
      "validValues" : [ "0", "1", "2" ]
    },
    {
      "name" : "ldap_search_group_base",
      "label" : "LDAP search group base",
      "description" : "Group base name for LDAP search (if required by LDAP server)",
      "default" : "",
      "type" : "string"
    },
    {
      "name" : "ldap_search_group_object_class",
      "label" : "LDAP search group object class",
      "description" : "Group object class for LDAP search (if required by LDAP server)",
      "default" : "",
      "type" : "string"
    },
    {
      "name" : "ldap_search_group_member_attribute",
      "label" : "LDAP search group member attribute",
      "description" : "Group member attribute for LDAP search (if required by LDAP server)",
      "default" : "",
      "type" : "string"
    },
    {
      "name" : "ldap_search_group_name_attribute",
      "label" : "LDAP search group name attribute",
      "description" : "Group name attribute for LDAP search (if required by LDAP server)",
      "default" : "",
      "type" : "string"
    },
    {
      "name" : "enable_https",
      "label" : "Enable HTTPS for DB Manager and REST Server",
      "description" : "Enable HTTPS for DB Manager and REST Server",
      "default" : true,
      "type" : "boolean"
    },
    {
      "name" : "keystore_pwd",
      "label" : "Esgyn keystore password",
      "description" : "Esgyn keystore password for HTTPS connections",
      "default" : "esgyn23400",
      "type" : "password"
    },
    {
      "name" : "monitor_port",
      "label" : "Monitor Port Number",
      "description" : "Port number used to establish cross-node process monitoring",
      "default" : "23399",
      "type" : "port"
    },
    {
      "name" : "dcs.master.port",
      "label" : "Connectivity Default Port",
      "description" : "Default port for clients to connect to Trafodion",
      "default" : "23400",
      "type" : "port"
    },
    {
      "name" : "dcs.master.port.range",
      "label" : "Connectivity Port Range",
      "description" : "Number of connectivity ports per node",
      "default" : 100,
      "type" : "long",
      "min" : "1"
    },
    {
      "name" : "dcs.master.info.port",
      "label" : "Connectivity Web UI Port",
      "description" : "Port for the Connectivity (DCS) web interface. Set to -1 to disable web interface.",
      "default" : "24400",
      "type" : "port",
      "negativeOneAllowed" : true
    },
    {
      "name" : "dcs.master.floating.ip",
      "label" : "Connectivity High Availability Enabled",
      "description" : "Enable multiple Connection Masters, which provide failover for Connectivity (requires a floating IP address)",
      "default" : false,
      "type" : "boolean"
    },
    {
      "name" : "dcs.master.floating.ip.external.ip.address",
      "label" : "Connectivity High Availability - Floating IP address",
      "description" : "Provides failover to DCS Backup servers",
      "type" : "string",
      "required" : "true",
      "default" : "0.0.0.0",
      "conformRegex" : "[0-9]+.[0-9]+.[0-9]+.[0-9]+"
    },
    {
      "name" : "dcs.master.keepalived",
      "label" : "Connectivity Floating IP managed externally",
      "description" : "Whether floating IP address routing is managed by DCS, using network commands via sudo (default) or managed by an external mechanism (such as keepalived). Sample keepalived config in /etc/keepalived/trafodion.conf of Connection Master nodes. Has no effect if Connectivity HA is not enabled.",
      "default" : false,
      "type" : "boolean"
    },
    {
      "name" : "dcs.aws.access.id",
      "label" : "AWS Access ID",
      "description" : "Access Identifier for AWS credential. Needed only if DCS Master nodes are on Amazon Web Services and Connectivity HA is enabled, thereby using a floating IP address.",
      "default" : "",
      "type" : "string"
    },
    {
      "name" : "dcs.aws.secret.key",
      "label" : "AWS Access Secret Key",
      "description" : "AWS Access Secret Key. Needed only if DCS Master nodes are on Amazon Web Services and Connectivity HA is enabled, thereby using a floating IP address.",
      "default" : "",
      "type" : "password"
    },
    {
      "name" : "dcs.aws.region",
      "label" : "AWS Region",
      "description" : "AWS Region of DCS Master nodes. Needed only if DCS Master nodes are on Amazon Web Services and Connectivity HA is enabled, thereby using a floating IP address.",
      "default" : "us-east-1",
      "type" : "string"
    },
    {
      "name" : "dcs.dns.interface",
      "label" : "Network interface for DNS",
      "description" : "The server uses the local host name for reporting its IP address. If your machine has multiple interfaces the server will use the interface that the primary host name resolves to. If this is insufficient, you can set this property to indicate the primary interface e.g., 'eth1'. This only works if your cluster configuration is consistent and every host has the same network interface configuration.",
      "default" : "default",
      "type" : "string"
    },
    {
      "name" : "rest.dns.interface",
      "label" : "Network interface for DNS",
      "description" : "The server uses the local host name for reporting its IP address. If your machine has multiple interfaces the server will use the interface that the primary host name resolves to. If this is insufficient, you can set this property to indicate the primary interface e.g., 'eth1'. This only works if your cluster configuration is consistent and every host has the same network interface configuration.",
      "default" : "default",
      "type" : "string"
    },
    {
      "name" : "dcs.master.floating.ip.external.interface",
      "label" : "Network interface for floating IP address",
      "description" : "The server uses the local host name for reporting its IP address. If your machine has multiple interfaces the server will use the interface that the primary host name resolves to. If this is insufficient, you can set this property to indicate the primary interface e.g., 'eth1'. This only works if your cluster configuration is consistent and every host has the same network interface configuration.",
      "default" : "default",
      "type" : "string"
    },
    {
      "name" : "dcs.server.user.program.statistics.interval.time",
      "label" : "Aggregate Statistics Interval",
      "description" : "Time in seconds on how often the aggregation data should be published.  Setting this value to '0' will revert to default.  Setting this value to '-1' will disable publishing aggregation data.",
      "default" : 60,
      "type" : "long",
      "unit" : "seconds",
      "min" : "-1"
    },
    {
      "name" : "dcs.server.user.program.statistics.limit.time",
      "label" : "Query Statistics Threshold",
      "description" : "Time in seconds for how long the query has been executing before publishing statistics to metric_query_table. To publish all queries set this value to '0'. Setting this value to '-1' will disable publishing any data to metric_query_table.  Warning - Setting this value to 0 will cause query performance to degrade.",
      "default" : 60,
      "type" : "long",
      "unit" : "seconds",
      "min" : "-1"
    },
    {
      "name" : "dcs.server.user.program.statistics.enabled",
      "label" : "Query Statistics Publication",
      "description" : "If statistics publication is enabled.",
      "default" : true,
      "type" : "boolean"
    },
    {
      "name" : "dcs.info.threads.max",
      "label" : "Info Threads Maximum",
      "description" : "The maximum number of threads of the info server thread pool.  Threads in the pool are reused to process requests. This controls the maximum number of requests processed concurrently.  It may help to control the memory used by the info server to avoid out of memory issues. If the thread pool is full, incoming requests will be queued up and wait for some free threads.",
      "default" : 100,
      "type" : "long",
      "min" : 2
    },
    {
      "name" : "dcs.info.threads.min",
      "label" : "Info Threads Minimum",
      "description" : "The minimum number of threads of the info server thread pool.  The thread pool always has at least these number of threads so the info server is ready to serve incoming requests.",
      "default" : 2,
      "type" : "long",
      "min" : 0
    },
    {
      "name" : "dcs.server.handler.threads.max",
      "label" : "Server Threads Maximum",
      "description" : "For every DcsServer, the maximum number of server handler threads that will be created.",
      "default" : 10,
      "type" : "long",
      "min" : 1
    },
    {
      "name" : "zookeeper.session.timeout",
      "label" : "ZooKeeper Session Timout",
      "description" : "The server passes this to the ZooKeeper quorum as suggested maximum time for a session (This setting becomes ZooKeeper's 'maxSessionTimeout') in milliseconds.",
      "default" : 180000,
      "type" : "long",
      "unit" : "milliseconds"
    },
    {
      "name" : "trafodion.root.znode",
      "label" : "QianBase Root znode in ZooKeeper",
      "description" : "All of QianBase ZooKeeper znodes that are configured with a relative path will go under this node.",
      "default" : "/trafodion",
      "type" : "string",
      "conformRegex" : "^/"
    },
    {
      "name" : "rest.port",
      "label" : "QianBase REST Port",
      "description" : "The http port for the REST server.",
      "default" : "4200",
      "type" : "port"
    },
    {
      "name" : "rest.https.port",
      "label" : "QianBase REST Secure Port",
      "description" : "The https port for the REST server.",
      "default" : "4201",
      "type" : "port"
    },
    {
      "name" : "rest.readonly",
      "label" : "QianBase REST Read-Only Mode",
      "description" : "Mode the REST server will be started in.  false: All HTTP methods are permitted - GET/PUT/POST/DELETE.  true: Only the GET method is permitted.",
      "default" : false,
      "type" : "boolean"
    },
    {
      "name" : "rest.threads.max",
      "label" : "REST Threads Maximum",
      "description" : "The maximum number of threads of the server thread pool.  Threads in the pool are reused to process requests. This controls the maximum number of requests processed concurrently.  It may help to control the memory used by the server to avoid out of memory issues. If the thread pool is full, incoming requests will be queued up and wait for some free threads.",
      "default" : 100,
      "type" : "long",
      "min" : 2
    },
    {
      "name" : "rest.threads.min",
      "label" : "REST Threads Minimum",
      "description" : "The minimum number of threads of the server thread pool.  The thread pool always has at least these number of threads so the server is ready to serve incoming requests.",
      "default" : 2,
      "type" : "long",
      "min" : 0
    },
    {
      "name" : "tsd.port",
      "label" : "QianBase DB Manager T-Collector Port",
      "description" : "The port used to collect cluster event information.",
      "default" : "5242",
      "type" : "port"
    },
    {
      "name" : "dbmgr.hbase.info.port",
      "label" : "HBase Info Port for DB Manager",
      "description" : "Needs to match the HBase information port for DB Manager to gather HBase information.",
      "default" : "60010",
      "type" : "port"
    },
    {
      "name" : "dbmgr.hbase.regionserver.port",
      "label" : "HBase RegionServer Port for DB Manager",
      "description" : "Needs to match the HBase regionserver port for DB Manager to gather HBase information.",
      "default" : "60030",
      "type" : "port"
    },
    {
      "name" : "traf.scaling.factor",
      "label" : "Cluster Scaling Factor",
      "description" : "Multiplier used for start up of large clusters. Must be a floating point number greater than zero.",
      "default" : "1.2",
      "type" : "double",
      "min" : "0"
    },
    {
      "name" : "hbase.coprocessor.region.classes",
      "label" : "HBase Transactional Coprocessor Classes",
      "description" : "TRX coprocessor classes for HBase tables",
      "default" : [ "org.apache.hadoop.hbase.coprocessor.transactional.TrxRegionObserver",
                    "org.apache.hadoop.hbase.coprocessor.transactional.TrxRegionEndpoint",
                    "org.apache.hadoop.hbase.coprocessor.AggregateImplementation" ],
      "separator" : ",",
      "type" : "string_array"
    },
    {
      "name" : "hbase.client.scanner.timeout.period",
      "label" : "HBase scanner timeout",
      "description" : "HBase scanner timeout for QianBase tables.",
      "default" : "3600000",
      "type" : "long",
      "min" : "0"
    },
    {
      "name" : "hbase.client.keyvalue.maxsize",
      "label" : "HBase keyvalue max size",
      "description" : "HBase keyvalue size for QianBase tables should be unlimited.",
      "default" : "0",
      "type" : "long",
      "min" : "0"
    },
    {
      "name" : "parquet.filter.record-level.enabled",
      "label" : "Parquet filter record-level",
      "description" : "Parquet filter should be at record level for QianBase tables.",
      "default" : true,
      "type" : "boolean"
    },
    {
      "name" : "parquet.filter.dictionary.enabled",
      "label" : "Parquet filter dictionary",
      "description" : "Parquet filter dictionary should be disabled for QianBase tables.",
      "default" : false,
      "type" : "boolean"
    },
    {
      "name" : "parquet.filter.statistics.enabled",
      "label" : "Parquet filter statistics",
      "description" : "Parquet filter statistics should be enabled for QianBase tables.",
      "default" : true,
      "type" : "boolean"
    },
    {
      "name" : "org.trafodion.sql.parquet.doublebuffer.enabled",
      "label" : "QianBase Parquet Double-Buffer",
      "description" : "Enable double buffering of Parquet reads. When enabled, QianBase issues a parquet read in another thread while the previously read parquet buffer gets processed by the QianBase engine.",
      "default" : false,
      "type" : "boolean"
    },
    {
      "name" : "org.trafodion.sql.parquet.fastserialize.enabled",
      "label" : "QianBase Parquet Fast-Serialize",
      "description" : "Enable faster serialization of parquet records to QianBase structures by assuming a flat record schema instead of a complex nested schema that the stock parquet reader supports.",
      "default" : true,
      "type" : "boolean"
    },
    {
      "name" : "org.trafodion.sql.parquet.concatblocks.enabled",
      "label" : "QianBase Parquet Concat-Blocks",
      "description" : "When enabled, logically reduce the number of parquet blocks presented to the QianBase engine and possibly help with the query execution performance.",
      "default" : false,
      "type" : "boolean"
    },
    {
      "name" : "org.trafodion.sql.parquet.concatblocks.size_mb",
      "label" : "QianBase Parquet Concat-Blocks Size",
      "description" : "The size of the parquet block below which to concatenate blocks.",
      "default" : "8",
      "units" : "megabytes",
      "type" : "long",
      "min" : "1"
    },
    {
      "name" : "org.trafodion.sql.parquet.concatblocks.max",
      "label" : "QianBase Parquet Concat-Blocks Maximum",
      "description" : "The maximum number of parquet blocks to logically concatenate.",
      "default" : "16",
      "type" : "long",
      "min" : "1"
    },
    {
      "name" : "org.trafodion.sql.littlejetty.port",
      "label" : "QianBase SQL Scan Optimization Port",
      "description" : "The port number used for SQL scan optimization.",
      "default" : "8680",
      "type" : "port"
    },
    {
      "name" : "org.trafodion.sql.littlejetty.cleanupintervalmn",
      "label" : "QianBase SQL Scan Optimization Cleanup Interval",
      "description" : "The time interval that SQL scan optimization data is cleaned. Defaults to 1 day.",
      "default" : 1440,
      "type" : "long",
      "unit" : "minutes",
      "min" : "1"
    },
    {
      "name" : "org.apache.parquet.hadoop.parquetfilereader.use_direct_bytebuffer",
      "label" : "QianBase Parquet Reader Use DirectByteBuffer",
      "description" : "Whether to use direct bytebuffers when reading parquet files (instead of using memory from Java heap). Default (true) is to use direct bytebuffers.",
      "default" : true,
      "type" : "boolean"
    },
    {
      "name" : "backup.retention.period",
      "label" : "EsgynDB Backups Retention Period in days",
      "description" : "The number of days to retain the backups before aging them out",
      "default" : 2,
      "type" : "long"
    },
    {
      "name" : "backup.retention.count",
      "label" : "EsgynDB Backups Retention Count",
      "description" : "The number of most recent backups to retain before they are aged out",
      "default" : 48,
      "type" : "long"
    },
    {
      "name" : "opentsdb.nsre.high_watermark",
      "label" : "OpenTSDB HBase NSRE High Watermark",
      "description" : "The maximum number of RPCs allowed in the NSRE queue for a region before new RPCs are failed with please throttle exceptions",
      "default" : 10000,
      "type" : "long",
      "min" : "100"
    },
    {
      "name" : "opentsdb.rpc.limit",
      "label" : "OpenTSDB HBase RPC limit",
      "description" : "Limits the max open/pending RPC requests from OpenTSDB to HBase",
      "default" : 10000,
      "type" : "long",
      "min" : "0"
    },
    {
      "name" : "logs_tardir",
      "label" : "Directory for archiving log files",
      "description" : "Archiving location of log files for all esgyndb components",
      "type" : "string",
      "default" : "/tmp"
    },
    {
      "name" : "zip_hbaselogs",
      "label" : "Enable collecting hbase logs",
      "description" : "Enable collecting hbase log files for analysis",
      "default" : "NO",
      "type" : "string_enum",
      "validValues" : [ "YES", "NO" ]
    }
  ],
  "inExpressWizard" : true,
  "gateway" : {
    "alternatives" : {
      "name" : "traf-client",
      "linkRoot" : "/etc/esgyndb",
      "priority" : 50
    },
    "configWriter" : {
      "peerConfigGenerators" : [
        {
          "filename" : "dcs_master_CSD_INSTANCE_.properties",
          "params" : [ "dcs.master.port" ],
          "roleName" : "TRAF_DCS"
        }
      ],
      "auxConfigGenerators" : [
        {
          "filename" : "traf-client/odbc.ini",
          "sourceFilename" : "aux/odbc.ini"
        },
        {
          "filename" : "traf-client/odbcinst.ini",
          "sourceFilename" : "aux/odbcinst.ini"
        }
      ]
    },
    "scriptRunner" : {
      "program" : "scripts/client.sh",
      "args" : ["deploy"],
      "environmentVariables" : {
        "TRAFODION_ENABLE_AUTHENTICATION" : "${traf.ldap.enabled}",
        "TRAF_SCALING_FACTOR" : "${traf.scaling.factor}",
        "DCS_MASTER_PORT" : "${dcs.master.port}",
        "DCS_MASTER_HA" : "${dcs.master.floating.ip}",
        "DCS_MASTER_FLOATING_IP" : "${dcs.master.floating.ip.external.ip.address}",
        "TRAF_CLUSTER_ID" : "${esgyndb_cluster_id}",
        "TRAF_INSTANCE_ID" : _CSD_INSTANCE_
      }
    }
  },
  "roles" : [
    {
      "name" : "TRAF_NODE",
      "label" : "QianBase Node",
      "pluralLabel" : "QianBase Nodes",
      "kerberosPrincipals" : [
        {"name" : "esgyndb_principal", 
         "primary" : "${principal}",
         "instance" : "${host}"}
      ],
      "startRunner" : {
         "program" : "scripts/monitor.sh",
         "args" : [ "start" , "${host}", "${nod_scratch_dir_list}" ],
         "environmentVariables" : {
           "TRAF_CLUSTER_ID" : "${esgyndb_cluster_id}",
           "TRAF_CLUSTER_NAME" : "${esgyndb_cluster_name}",
           "TRAF_INSTANCE_ID" : _CSD_INSTANCE_,
           "TRAF_INSTANCE_NAME" : "QIANBASE",
           "EDB_LIC_KEY" : "${esgyndb_license_key}",
           "TRAF_LOG" : "${esgyndb_log_dir}",
           "TRAF_VAR" : "${esgyndb_var_dir}",
           "DB_ROOT_USER" : "${esgyndb_root_user}",
           "DB_ADMIN_USER" : "${esgyndb_admin_user}",
           "TRAFODION_ENABLE_AUTHENTICATION" : "${traf.ldap.enabled}",
           "EDB_HIVE_SENTRY" : "${traf.sentry.enabled}",
           "EDB_HIVESERVER2_URL" : "${hiveserver2_url}",
           "EDB_HIVESERVER2_SSL" : "${hiveserver2_ssl}",
           "TRAF_SCALING_FACTOR" : "${traf.scaling.factor}",
           "ldap_certpath" : "${ldap_certpath}",
           "ldap_hosts" : "${ldap_hosts}",
           "ldap_domain" : "${ldap_domain}",
           "ldap_port" : "${ldap_port}",
           "ldap_identifiers" : "${ldap_identifiers}",
           "ldap_search_id" : "${ldap_search_id}",
           "ldap_pwd" : "${ldap_pwd}",
           "ldap_encrypt" : "${ldap_encrypt}",
           "ldap_search_group_base" : "${ldap_search_group_base}",
           "ldap_search_group_object_class" : "${ldap_search_group_object_class}",
           "ldap_search_group_member_attribute" : "${ldap_search_group_member_attribute}",
           "ldap_search_group_name_attribute" : "${ldap_search_group_name_attribute}",
           "MONITOR_COMM_PORT" : "${monitor_port}",
           "DCS_MASTER_PORT" : "${dcs.master.port}",
           "DCS_MASTER_HA" : "${dcs.master.floating.ip}",
           "DCS_KEEPALIVED" : "${dcs.master.keepalived}",
           "DCS_MASTER_FLOATING_IP" : "${dcs.master.floating.ip.external.ip.address}",
           "DBMGR_TSD_PORT" : "${tsd.port}",
           "DBMGR_HBI_PORT" : "${dbmgr.hbase.info.port}",
           "DBMGR_HBRS_PORT" : "${dbmgr.hbase.regionserver.port}",
           "KEYSTORE_PASS" : "${keystore_pwd}",
           "ENABLE_HTTPS" : "${enable_https}",
           "ESGYNDB_MEMORY_LIMIT" : "${esgyndb_memory_limit}",
           "OPENTSDB_HBASE_NSRE_HIGHWATER" : "${opentsdb.nsre.high_watermark}",
           "OPENTSDB_RPC_LIMIT" : "${opentsdb.rpc.limit}",
           "TRAF_ROOT_ZNODE" : "${trafodion.root.znode}",
           "LOGS_TARDIR" : "${logs_tardir}",
           "ZIP_HBASELOGS" : "${zip_hbaselogs}"
         }
      },
      "topology" : {
        "minInstances" : "1"
      },
      "healthAggregation" : { 
        "type" : "nonSingleton", 
        "percentGreenForGreen" : 90.0, 
        "percentYellowGreenForYellow" : 75.0 
      },
      // cgroups for main worker role only
      "cgroup" : {
        "cpu" : {
          "autoConfigured" : true
        },
        "memory" : {
          "autoConfigured" : true,
          "autoConfiguredMin" : 65536 // 64gb - can be overridden
        }
      },
      "commands" : [
        {
          "name" : "cluster_status",
          "label" : "Check QianBase Status",
          "description" : "Reports on QianBase processes",
          "expectedExitCodes" : [0],
          "requiredRoleState" : "running",
          "commandRunner" : {
            "program" : "scripts/status.sh"
          }
        },
        {
          "name" : "cluster_init",
          "label" : "Initalize/Upgrade QianBase MetaData",
          "description" : "Initializes cluster meta-data after an initial installation or upgrade",
          "expectedExitCodes" : [0],
          "requiredRoleState" : "running",
          "commandRunner" : {
            "program" : "scripts/initialize.sh"
          }
        },
        {
          "name" : "cluster_pkill",
          "label" : "Maintenance Process Kill",
          "description" : "Kills all running processes",
          "expectedExitCodes" : [0],
          "requiredRoleState" : "stopped",
          "commandRunner" : {
            "program" : "scripts/cluster_kill.sh",
            "args" : [ "${host}" ]
          }
        },
        {
          "name" : "cluster_conn_restart",
          "label" : "Force Connections Restart",
          "description" : "Kills and Starts Connection Servers on all nodes",
          "expectedExitCodes" : [0],
          "requiredRoleState" : "running",
          "commandRunner" : {
            "program" : "scripts/dcs_srvr_restart.sh",
            "args" : [ "${host}" ]
          }
        },
        {
          "name" : "cluster_get_logs",
          "label" : "Collect log files",
          "description" : "Collect log files for all components from all nodes",
          "expectedExitCodes" : [0],
          "commandRunner" : {
            "program" : "scripts/get_srvr_logs.sh",
            "args" : [ "${host}" ],
            "environmentVariables" : {
              "LOGS_TARDIR" : "${logs_tardir}",
              "ZIP_HBASELOGS" : "${zip_hbaselogs}"
             }
          }
        },
        {
          "name" : "cluster_dyn_update",
          "label" : "Update Dynamic Configuration",
          "description" : "Updates license key and LDAP configuration (parameters starting with ldap_), also including the traf_authentication_config advanced snippet (safety valve).",
          "expectedExitCodes" : [0],
          "requiredRoleState" : "running",
          "commandRunner" : {
            "program" : "scripts/dyn_update.sh",
            "environmentVariables" : {
              "EDB_LIC_KEY" : "${esgyndb_license_key}",
              "ldap_certpath" : "${ldap_certpath}",
              "ldap_hosts" : "${ldap_hosts}",
              "ldap_domain" : "${ldap_domain}",
              "ldap_port" : "${ldap_port}",
              "ldap_identifiers" : "${ldap_identifiers}",
              "ldap_search_id" : "${ldap_search_id}",
              "ldap_pwd" : "${ldap_pwd}",
              "ldap_encrypt" : "${ldap_encrypt}",
              "ldap_search_group_base" : "${ldap_search_group_base}",
              "ldap_search_group_object_class" : "${ldap_search_group_object_class}",
              "ldap_search_group_member_attribute" : "${ldap_search_group_member_attribute}",
              "ldap_search_group_name_attribute" : "${ldap_search_group_name_attribute}"
            }
          }
        }
      ],
      "parameters" : [
        {
          "name" : "dcs_servers_per_node",
          "label" : "Client Connection Servers per Node",
          "description" : "The number of concurrent JDBC/ODBC server processes per node",
          "default" : 8,
          "type" : "long",
          "min" : "1"
        },
        {
          "name" : "nod_scratch_dir_list",
          "label" : "Local working directory",
          "description" : "List of directories (comma seperated) for query scratch space for worker nodes",
          "default" : [ "/dfs/traf" ],
          "type" : "path_array",
          "minLength" : 1,
          "pathType" : "localDataDir",
          "mode" : "0700"
        },
        {
          "name" : "esgyndb_log_dir",
          "label" : "QianBase Log Directory",
          "description" : "Path where log files are placed",
          "default" : "/var/log/esgyndb",
          "type" : "path",
          "pathType" : "localDataDir",
          "mode" : "0755"
        },
        {
          "name" : "esgyndb_var_dir",
          "label" : "QianBase Working Directory",
          "description" : "Path for small working files",
          "default" : "/var/lib/esgyndb",
          "type" : "path",
          "pathType" : "localDataDir",
          "mode" : "0755"
        },
        {
          "name" : "esgyndb_conf_dir",
          "label" : "QianBase Conf Directory",
          "description" : "Location of license files. Should not be modified",
          "default" : "/etc/trafodion",
          "conformRegex" : "/etc/trafodion",
          "type" : "path",
          "pathType" : "localDataDir",
          "mode" : "0755"
        }
      ],
      "configWriter" : {
        "peerConfigGenerators" : [
          {
            "filename" : "traf_node_CSD_INSTANCE_.properties",
            "params" : [ "nod_scratch_dir_list" ],
            "roleName" : "TRAF_NODE"
          },
          {
            "filename" : "dcs_servers_CSD_INSTANCE_.properties",
            "params" : [ "dcs_servers_per_node" ],
            "roleName" : "TRAF_NODE"
          }
        ],
        "generators" : [
          {
            "filename" : "trafodion-site.xml",
            "configFormat" : "hadoop_xml",
            "includedParams" : [ 
              "hbase.coprocessor.region.classes",
              "hbase.client.scanner.timeout.period",
              "hbase.client.keyvalue.maxsize",
              "parquet.filter.record-level.enabled",
              "parquet.filter.dictionary.enabled",
              "parquet.filter.statistics.enabled",
              "org.trafodion.sql.parquet.doublebuffer.enabled",
              "org.trafodion.sql.parquet.fastserialize.enabled",
              "org.trafodion.sql.parquet.concatblocks.enabled",
              "org.trafodion.sql.parquet.concatblocks.size_mb",
              "org.trafodion.sql.parquet.concatblocks.max",
              "org.trafodion.sql.littlejetty.port",
              "org.trafodion.sql.littlejetty.cleanupintervalmn",
	      "backup.retention.period",
	      "backup.retention.count"
            ]
          },
          {
            "filename" : "dcs-site.xml",
            "configFormat" : "hadoop_xml",
            "includedParams" : [ 
              "dcs.master.port",
              "dcs.master.port.range",
              "dcs.master.info.port",
              "dcs.master.floating.ip",
              "dcs.master.floating.ip.external.ip.address",
              "dcs.master.keepalived",
              "dcs.dns.interface",
              "dcs.master.floating.ip.external.interface",
              "dcs.server.user.program.statistics.interval.time",
              "dcs.server.user.program.statistics.limit.time",
              "dcs.server.user.program.statistics.enabled",
              "dcs.info.threads.max",
              "dcs.info.threads.min",
              "dcs.server.handler.threads.max",
              "zookeeper.session.timeout"
            ]
          },
          {
            "filename" : "rest-site.xml",
            "configFormat" : "hadoop_xml",
            "includedParams" : [ 
              "rest.dns.interface",
              "zookeeper.session.timeout",
              "rest.port",
              "rest.https.port",
              "rest.readonly",
              "rest.threads.max",
              "rest.threads.min"
            ]
          }
        ],
        "auxConfigGenerators" : [
          {
            "filename" : "dcs-env.sh",
            "sourceFilename" : "aux/dcs-env.sh"
          },
          {
            "filename" : "traf_authentication_config",
            "sourceFilename" : "aux/traf_authentication_config"
          },
          {
            "filename" : "trafodion_config",
            "sourceFilename" : "aux/trafodion_config"
          },
          {
            "filename" : "ms.env",
            "sourceFilename" : "aux/ms.env"
          }
        ]
      } // config writers
    }, // TRAF_NODE
    {
      "name" : "TRAF_DCS",
      "label" : "QianBase Connection Master",
      "pluralLabel" : "QianBase Connection Masters",
      "kerberosPrincipals" : [
        {"name" : "esgyndb_principal", 
         "primary" : "${principal}",
         "instance" : "${host}"}
      ],
      "startRunner" : {
         "program" : "scripts/dcs.sh",
         "args" : [ "${host}" ],
         "environmentVariables" : {
           "TRAF_CLUSTER_ID" : "${esgyndb_cluster_id}",
           "TRAF_CLUSTER_NAME" : "${esgyndb_cluster_name}",
           "TRAF_INSTANCE_ID" : _CSD_INSTANCE_,
           "TRAF_INSTANCE_NAME" : "QIANBASE",
           "TRAF_SCALING_FACTOR" : "${traf.scaling.factor}",
           "DCS_MASTER_PORT" : "${dcs.master.port}",
           "DCS_MASTER_FLOATING_IP" : "${dcs.master.floating.ip.external.ip.address}",
           "DCS_INTERFACE" : "${dcs.master.floating.ip.external.interface}",
           "DCS_AWS_ID" : "${dcs.aws.access.id}",
           "DCS_AWS_KEY" : "${dcs.aws.secret.key}",
           "DCS_AWS_REGION" : "${dcs.aws.region}"
         }
      },
      "topology" : {
        "minInstances" : "1",
        "maxInstances" : "3"
      },
      "healthAggregation" : { 
        "type" : "nonSingleton", 
        "percentGreenForGreen" : 70.0, 
        "percentYellowGreenForYellow" : 50.0 
      },
      "configWriter" : {
        "peerConfigGenerators" : [
          {
            "filename" : "dcs_servers_CSD_INSTANCE_.properties",
            "params" : [ "dcs_servers_per_node" ],
            "roleName" : "TRAF_NODE"
          },
          {
            "filename" : "dcs_master_CSD_INSTANCE_.properties",
            "params" : [ "dcs.master.port" ],
            "roleName" : "TRAF_DCS"
          }
        ],
        "auxConfigGenerators" : [
          {
            "filename" : "keepalived.conf",
            "sourceFilename" : "aux/keepalived.conf"
          }
        ]
      }
    }, // TRAF_DCS
    {
      "name" : "TRAF_DBM",
      "label" : "DB Manager",
      "pluralLabel" : "DB Managers",
      "kerberosPrincipals" : [
        {"name" : "esgyndb_principal", 
         "primary" : "${principal}",
         "instance" : "${host}"}
      ],
      "externalLink" : {
         "name" : "EsgynDBManager",
         "label" : "Esgyn DB Manager",
         "url" : "http://${host}:${dbmgr.http.port}"
      },
      "startRunner" : {
         "program" : "scripts/dbmanager.sh",
         "environmentVariables" : {
           "TRAF_CLUSTER_ID" : "${esgyndb_cluster_id}",
           "TRAF_CLUSTER_NAME" : "${esgyndb_cluster_name}",
           "TRAF_INSTANCE_ID" : _CSD_INSTANCE_,
           "TRAF_INSTANCE_NAME" : "QIANBASE",
           "DB_ADMIN_PASSWORD" : "${esgyndb_admin_password}",
           "DCS_INFO_PORT" : "${dcs.master.info.port}",
           "TRAF_SCALING_FACTOR" : "${traf.scaling.factor}",
           "REST_PORT" : "${rest.port}",
           "REST_HTTPS_PORT" : "${rest.https.port}",
           "DBMGR_TSD_PORT" : "${tsd.port}",
           "DBMGR_BOSUN_PORT" : "${bosun.port}",
           "DBMGR_HTTP_PORT" : "${dbmgr.http.port}",
           "DBMGR_HTTPS_PORT" : "${dbmgr.https.port}",
           "KEYSTORE_PASS" : "${keystore_pwd}",
           "ENABLE_HTTPS" : "${enable_https}"
         },
         "args" : [ "${host}" ]
      },
      "topology" : {
        "minInstances" : "1",
        "maxInstances" : "3",
        "placementRules" : [
          { "type" : "alwaysWith",
            "roleType" : "TRAF_DCS"
          }
        ]
      },
      "healthAggregation" : { 
        "type" : "nonSingleton", 
        "percentGreenForGreen" : 70.0, 
        "percentYellowGreenForYellow" : 50.0 
      },
      "parameters" : [
        {
          "name" : "esgyndb_admin_password",
          "label" : "QianBase Database Admin Password",
          "description" : "Password for the Database Admin User (e.g., LDAP password) for use by DB manager tool",
          "default" : "none",
          "type" : "password"
        },
        {
          "name" : "bosun.port",
          "label" : "QianBase DB Manager Bosun Port",
          "description" : "The port used for cluster monitoring and alerts.",
          "default" : "8070",
          "type" : "port"
        },
        {
          "name" : "dbmgr.http.port",
          "label" : "QianBase DB Manager HTTP Port",
          "description" : "The port used to connect with DB manager web interface.",
          "default" : "4205",
          "type" : "port"
        },
        {
          "name" : "dbmgr.https.port",
          "label" : "QianBase DB Manager HTTPS Port",
          "description" : "The port used to connect with DB manager secure web interface.",
          "default" : "4206",
          "type" : "port"
        }
      ],
      "configWriter" : {
        "peerConfigGenerators" : [
          {
            "filename" : "dcs_servers_CSD_INSTANCE_.properties",
            "params" : [ "dcs_servers_per_node" ],
            "roleName" : "TRAF_NODE"
          },
          {
            "filename" : "dcs_master_CSD_INSTANCE_.properties",
            "params" : [ "dcs.master.port" ],
            "roleName" : "TRAF_DCS"
          }
        ],
        "auxConfigGenerators" : [
          {
            "filename" : "remote_instances.json",
            "sourceFileName" : "aux/remote_instances.json"
          }
        ]
      }
    } // TRAF_DBM
  ] // Roles
} // Service
