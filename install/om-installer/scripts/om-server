#!/bin/bash
# @@@ START COPYRIGHT @@@
#
# (C) Copyright 2019 Esgyn Corporation
#
# @@@ END COPYRIGHT @@@

SERVER_NUM=5
GRAFANA_USER=grafana
ELS_USER=elasticsearch
PROMETHEUS_OPTS=`cat /etc/prometheus/options`

usage() {
    prog=`basename $0`
    echo "$prog { start | stop | restart | status }"
    echo "    start   -- start EsgynDB Operational Management Server processes"
    echo "    stop    -- stop EsgynDB Operational Management Server processes"
    echo "    restart -- restart EsgynDB Operational Management Server processes"
    echo "    status  -- display the status of EsgynDB Operational Management Server processes"
}

om_server_start() {
    om_server_status
    rc=$?
    if [[ $rc -ne 0 ]]; then
        if [[ $rc -eq 2 ]]; then
            om_server_stop
        fi
        echo "$(date +%F_%T): Starting OptMgmt servers ..."
        service grafana-server start
        mkdir -p /var/log/prometheus
        nohup /usr/bin/prometheus $PROMETHEUS_OPTS > /var/log/prometheus/prometheus.log 2>&1 &
        service elasticsearch start
        nohup /usr/share/logstash/bin/logstash -f /etc/logstash/traf-logstash.conf --path.settings /etc/logstash/ >/dev/null 2>/var/log/logstash/logstash-err.log &
        source /opt/dbmgr/bin/env.sh && /opt/dbmgr/bin/dbmgr.sh start
        echo "$(date +%F_%T): Started OptMgmt servers"
    fi
}

om_server_stop() {
    om_server_status
    rc=$?
    if [[ $rc -ne 1 ]]; then
        echo "$(date +%F_%T): Stopping OptMgmt servers ..."
        ps -u $GRAFANA_USER | grep 'grafana' | grep -v grep | awk '{print $1}' | xargs kill 2>/dev/null
        ps -u $USER -ef | grep -E 'prometheus|logstash' | grep -v grep | awk '{print $2}' | xargs kill -9 2>/dev/null
        ps -u $USER -ef | grep -E 'dbmgr.*.war' | grep -v grep | awk '{print $2}' | xargs kill 2>/dev/null
        ps -u $ELS_USER -ef | grep 'Elasticsearch' | grep -v grep | awk '{print $2}' | xargs kill -9 2>/dev/null
        echo "$(date +%F_%T): Stopped OptMgmt servers"
    fi
}

om_server_status() {
    cfg_server_cnt=$SERVER_NUM
    grafana_status=`ps -aux | grep 'grafana' | grep -v grep | wc -l`
    prometheus_status=`ps -u $USER | grep 'prometheus' | grep -v grep | wc -l`
    logstash_status=`ps -aux | grep 'logstash' | grep -v grep | wc -l`
    elasticsearch_status=`ps -aux | grep 'Elasticsearch' | grep -v grep | wc -l`
    dbmgr_status=`ps -aux | grep 'dbmgr.*.war' | grep -v grep | grep -v trafodion |wc -l`
    let act_server_cnt=$grafana_status+$prometheus_status+$logstash_status+$elasticsearch_status+$dbmgr_status

    # echo "$grafana_status+$prometheus_status+$logstash_status+$elasticsearch_status+$dbmgr_status"
    # status output
    if [[ -n "$1" ]]; then
        format_output $grafana_status $prometheus_status $logstash_status $elasticsearch_status $dbmgr_status
    fi
    if [[ $act_server_cnt -eq $cfg_server_cnt ]]; then
        # echo "$(date +%F_%T): OptMgmt servers are running"
        return 0
    elif [[ $act_server_cnt -eq 0 ]]; then
        echo "$(date +%F_%T): OptMgmt servers are stopped"
        return 1
    elif [[ $act_server_cnt -le $cfg_server_cnt ]]; then
        echo "$(date +%F_%T): OptMgmt servers are partially running: Configured[$cfg_server_cnt]/Actual[$act_server_cnt]"
        return 2
    else
        echo "$(date +%F_%T): Unknown status, please check the environment"
        return 3
    fi
}

format_output() {
    echo -e "================================="
    echo -e "  Operational Management Status"
    echo -e "================================="

    # grafana status
    if [[ "$1" -eq 1 ]]; then
        grafana_status=`echo -e "\033[32m [Running] \033[0m"`
    elif [[ "$1" -eq 0 ]]; then
        grafana_status=`echo -e "\033[31m [Stopped] \033[0m"`
    else
        grafana_status=`echo -e "\033[31m [ERROR] \033[0m"`
    fi
    # prometheus status
    if [[ "$2" -eq 1 ]]; then
        prometheus_status=`echo -e "\033[32m [Running] \033[0m"`
    elif [[ "$2" -eq 0 ]]; then
        prometheus_status=`echo -e "\033[31m [Stopped] \033[0m"`
    else
        prometheus_status=`echo -e "\033[31m [ERROR] \033[0m"`
    fi
    # logstash status
    if [[ $3 -eq 1 ]]; then
        logstash_status=`echo -e "\033[32m [Running] \033[0m"`
    elif [[ $3 -eq 0 ]]; then
        logstash_status=`echo -e "\033[31m [Stopped] \033[0m"`
    else
        logstash_status=`echo -e "\033[31m [ERROR] \033[0m"`
    fi
    # elasticsearch status
    if [[ "$4" -eq 1 ]]; then
        elasticsearch_status=`echo -e "\033[32m [Running] \033[0m"`
    elif [[ "$4" -eq 0 ]]; then
        elasticsearch_status=`echo -e "\033[31m [Stopped] \033[0m"`
    else
        elasticsearch_status=`echo -e "\033[31m [ERROR] \033[0m"`
    fi
    # dbmgr status
    if [[ "$5" -eq 1 ]]; then
        dbmgr_status=`echo -e "\033[32m [Running] \033[0m"`
    elif [[ "$5" -eq 0 ]]; then
        dbmgr_status=`echo -e "\033[31m [Stopped] \033[0m"`
    fi

    echo -e "Grafana-server\t\t$grafana_status"
    echo -e "Prometheus\t\t$prometheus_status"
    echo -e "Elasticsearch\t\t$elasticsearch_status"
    echo -e "Logstash\t\t$logstash_status"
    echo -e "DB Manager\t\t$dbmgr_status"
}

case "$1" in
    start)
        om_server_start
        ;;
    stop)
        om_server_stop
        ;;
    status)
        om_server_status display
        ;;
    restart)
        om_server_stop
        sleep 5
        om_server_start
        ;;
    *)
      usage
      exit 1
      ;;
esac
